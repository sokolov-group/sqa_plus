
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator
Second Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   0.50000) X(I,a,b) v(a,b,A,B) 
 (  -1.00000) X(i,A,a) v(I,a,i,B) 
 (   1.00000) X(i,B,a) v(I,a,i,A) 
 (  -1.00000) X(I,A,a) gamma(x,y) v(x,a,y,B) 
 (   1.00000) X(I,B,a) gamma(x,y) v(x,a,y,A) 
 (   1.00000) X(i,A,B) gamma(x,y) v(I,x,i,y) 
 (   1.00000) X(I,A,a) v(x,a,y,B) cre(y) des(x) 
 (  -1.00000) X(I,B,a) v(x,a,y,A) cre(y) des(x) 
 (  -1.00000) X(i,A,B) v(I,x,i,y) cre(y) des(x) 

Total terms : 9
SQA automation time :  1.027 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp = 0.5 * np.einsum('Iab, abAB->IAB', X, v_eeee_so, optimize = True)
temp -= np.einsum('iAa, IaiB->IAB', X, v_cece_so, optimize = True)
temp += np.einsum('iBa, IaiA->IAB', X, v_cece_so, optimize = True)
temp -= np.einsum('IAa, xy, xayB->IAB', X, rdm_ca_so, v_aeae_so, optimize = True)
temp += np.einsum('IBa, xy, xayA->IAB', X, rdm_ca_so, v_aeae_so, optimize = True)
temp += np.einsum('iAB, xy, Ixiy->IAB', X, rdm_ca_so, v_caca_so, optimize = True)
temp += np.einsum('IAa, xayB, yx->IAB', X, v_aeae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IBa, xayA, yx->IAB', X, v_aeae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('iAB, Ixiy, yx->IAB', X, v_caca_so, rdm_ca_so, optimize = True)
