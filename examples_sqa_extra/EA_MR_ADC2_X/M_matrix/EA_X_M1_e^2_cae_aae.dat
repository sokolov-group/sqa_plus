
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator
Second Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) h(I,W) kdelta(A,C) kdelta(X,Z) 
 (   1.00000) v(I,i,i,W) kdelta(A,C) kdelta(X,Z) 
 (   1.00000) e(I) t1(I,W) kdelta(A,C) kdelta(X,Z) 
 (  -1.00000) h(W,x) t1(I,x) kdelta(A,C) kdelta(X,Z) 
 (  -1.00000) t1(I,x) v(i,W,i,x) kdelta(A,C) kdelta(X,Z) 
 (   1.00000) v(I,C,X,A) cre(Z) des(W) 
 (   1.00000) h(I,W) kdelta(A,C) cre(Z) des(X) 
 (   1.00000) kdelta(A,C) v(I,Z,X,x) cre(x) des(W) 
 (   1.00000) kdelta(A,C) v(I,x,W,X) cre(Z) des(x) 
 (  -1.00000) kdelta(A,C) v(I,i,i,W) cre(Z) des(X) 
 (  -1.00000) kdelta(X,Z) v(I,C,x,A) cre(x) des(W) 
 (  -1.00000) e(I) kdelta(A,C) t1(I,W) cre(Z) des(X) 
 (  -1.00000) e(I) kdelta(A,C) t1(I,Z,X,x) cre(x) des(W) 
 (  -1.00000) e(I) kdelta(A,C) t1(I,x,W,X) cre(Z) des(x) 
 (   1.00000) h(W,x) kdelta(A,C) t1(I,x) cre(Z) des(X) 
 (  -1.00000) h(W,x) kdelta(A,C) t1(I,y,X,x) cre(Z) des(y) 
 (   1.00000) h(X,x) kdelta(A,C) t1(I,Z,x,y) cre(y) des(W) 
 (   1.00000) h(X,x) kdelta(A,C) t1(I,y,W,x) cre(Z) des(y) 
 (  -1.00000) h(Z,x) kdelta(A,C) t1(I,x,X,y) cre(y) des(W) 
 (   1.00000) h(x,y) kdelta(A,C) t1(I,Z,X,x) cre(y) des(W) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(I,x,W,X) cre(Z) des(y) 
 (   1.00000) kdelta(A,C) t1(I,Z,X,x) v(i,y,i,x) cre(y) des(W) 
 (   1.00000) kdelta(A,C) t1(I,Z,x,y) v(i,X,i,x) cre(y) des(W) 
 (   0.50000) kdelta(A,C) t1(I,Z,x,y) v(x,y,X,z) cre(z) des(W) 
 (   1.00000) kdelta(A,C) t1(I,x) v(i,W,i,x) cre(Z) des(X) 
 (  -1.00000) kdelta(A,C) t1(I,x) v(Z,x,X,y) cre(y) des(W) 
 (   1.00000) kdelta(A,C) t1(I,x) v(x,y,W,X) cre(Z) des(y) 
 (  -1.00000) kdelta(A,C) t1(I,x,W,X) v(i,x,i,y) cre(Z) des(y) 
 (   1.00000) kdelta(A,C) t1(I,x,W,y) v(i,X,i,y) cre(Z) des(x) 
 (  -1.00000) kdelta(A,C) t1(I,x,X,y) v(i,W,i,y) cre(Z) des(x) 
 (  -1.00000) kdelta(A,C) t1(I,x,X,y) v(i,x,i,Z) cre(y) des(W) 
 (   0.50000) kdelta(A,C) t1(I,x,y,z) v(y,z,W,X) cre(Z) des(x) 
 (  -1.00000) v(I,x,W,y) kdelta(A,C) kdelta(X,Z) cre(y) des(x) 
 (   1.00000) e(I) t1(I,x,W,y) kdelta(A,C) kdelta(X,Z) cre(y) des(x) 
 (  -1.00000) h(W,x) t1(I,y,x,z) kdelta(A,C) kdelta(X,Z) cre(z) des(y) 
 (   1.00000) h(x,y) t1(I,x,W,z) kdelta(A,C) kdelta(X,Z) cre(z) des(y) 
 (  -1.00000) h(x,y) t1(I,z,W,x) kdelta(A,C) kdelta(X,Z) cre(y) des(z) 
 (  -1.00000) t1(I,x) v(x,y,W,z) kdelta(A,C) kdelta(X,Z) cre(z) des(y) 
 (   1.00000) t1(I,x,W,y) v(i,x,i,z) kdelta(A,C) kdelta(X,Z) cre(y) des(z) 
 (  -1.00000) t1(I,x,W,y) v(i,z,i,y) kdelta(A,C) kdelta(X,Z) cre(z) des(x) 
 (  -1.00000) t1(I,x,y,z) v(i,W,i,y) kdelta(A,C) kdelta(X,Z) cre(z) des(x) 
 (  -0.50000) t1(I,x,y,z) v(y,z,W,w) kdelta(A,C) kdelta(X,Z) cre(w) des(x) 
 (   1.00000) v(I,C,x,A) cre(Z) cre(x) des(W) des(X) 
 (  -0.50000) kdelta(A,C) v(I,Z,x,y) cre(x) cre(y) des(W) des(X) 
 (  -1.00000) kdelta(A,C) v(I,x,W,y) cre(Z) cre(y) des(X) des(x) 
 (   0.50000) e(I) kdelta(A,C) t1(I,Z,x,y) cre(x) cre(y) des(W) des(X) 
 (   1.00000) e(I) kdelta(A,C) t1(I,x,W,y) cre(Z) cre(y) des(X) des(x) 
 (  -1.00000) h(W,x) kdelta(A,C) t1(I,y,x,z) cre(Z) cre(z) des(X) des(y) 
 (   0.50000) h(Z,x) kdelta(A,C) t1(I,x,y,z) cre(y) cre(z) des(W) des(X) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(I,Z,x,z) cre(y) cre(z) des(W) des(X) 
 (   1.00000) h(x,y) kdelta(A,C) t1(I,x,W,z) cre(Z) cre(z) des(X) des(y) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(I,z,W,x) cre(Z) cre(y) des(X) des(z) 
 (  -0.50000) kdelta(A,C) t1(I,Z,X,x) v(x,y,z,w) cre(z) cre(w) des(W) des(y) 
 (  -0.25000) kdelta(A,C) t1(I,Z,x,y) v(x,y,z,w) cre(z) cre(w) des(W) des(X) 
 (  -1.00000) kdelta(A,C) t1(I,Z,x,y) v(x,z,X,w) cre(y) cre(w) des(W) des(z) 
 (   1.00000) kdelta(A,C) t1(I,Z,x,y) v(i,z,i,x) cre(y) cre(z) des(W) des(X) 
 (   0.50000) kdelta(A,C) t1(I,x) v(Z,x,y,z) cre(y) cre(z) des(W) des(X) 
 (  -1.00000) kdelta(A,C) t1(I,x) v(x,y,W,z) cre(Z) cre(z) des(X) des(y) 
 (   0.50000) kdelta(A,C) t1(I,x,W,X) v(y,z,x,w) cre(Z) cre(w) des(y) des(z) 
 (   1.00000) kdelta(A,C) t1(I,x,W,y) v(i,x,i,z) cre(Z) cre(y) des(X) des(z) 
 (  -1.00000) kdelta(A,C) t1(I,x,W,y) v(y,z,X,w) cre(Z) cre(w) des(x) des(z) 
 (   0.50000) kdelta(A,C) t1(I,x,W,y) v(z,w,X,x) cre(Z) cre(y) des(z) des(w) 
 (  -1.00000) kdelta(A,C) t1(I,x,W,y) v(i,z,i,y) cre(Z) cre(z) des(X) des(x) 
 (  -0.50000) kdelta(A,C) t1(I,x,X,y) v(Z,y,z,w) cre(z) cre(w) des(W) des(x) 
 (   1.00000) kdelta(A,C) t1(I,x,X,y) v(Z,z,x,w) cre(y) cre(w) des(W) des(z) 
 (   1.00000) kdelta(A,C) t1(I,x,X,y) v(y,z,W,w) cre(Z) cre(w) des(x) des(z) 
 (  -0.50000) kdelta(A,C) t1(I,x,X,y) v(z,w,W,x) cre(Z) cre(y) des(z) des(w) 
 (  -1.00000) kdelta(A,C) t1(I,x,y,z) v(i,W,i,y) cre(Z) cre(z) des(X) des(x) 
 (  -1.00000) kdelta(A,C) t1(I,x,y,z) v(Z,y,X,w) cre(z) cre(w) des(W) des(x) 
 (  -0.50000) kdelta(A,C) t1(I,x,y,z) v(Z,w,X,x) cre(y) cre(z) des(W) des(w) 
 (   0.50000) kdelta(A,C) t1(I,x,y,z) v(i,x,i,Z) cre(y) cre(z) des(W) des(X) 
 (  -0.50000) kdelta(A,C) t1(I,x,y,z) v(y,z,W,w) cre(Z) cre(w) des(X) des(x) 
 (   1.00000) kdelta(A,C) t1(I,x,y,z) v(y,w,W,X) cre(Z) cre(z) des(x) des(w) 
 (   0.50000) t1(I,x,W,y) v(y,z,w,u) kdelta(A,C) kdelta(X,Z) cre(w) cre(u) des(x) des(z) 
 (  -0.50000) t1(I,x,W,y) v(z,w,x,u) kdelta(A,C) kdelta(X,Z) cre(y) cre(u) des(z) des(w) 
 (   1.00000) t1(I,x,y,z) v(y,w,W,u) kdelta(A,C) kdelta(X,Z) cre(z) cre(u) des(x) des(w) 
 (   0.25000) t1(I,x,y,z) v(w,u,W,x) kdelta(A,C) kdelta(X,Z) cre(y) cre(z) des(w) des(u) 
 (   0.50000) kdelta(A,C) t1(I,Z,x,y) v(x,z,w,u) cre(y) cre(w) cre(u) des(W) des(X) des(z) 
 (  -0.50000) kdelta(A,C) t1(I,x,W,y) v(y,z,w,u) cre(Z) cre(w) cre(u) des(X) des(x) des(z) 
 (   0.50000) kdelta(A,C) t1(I,x,W,y) v(z,w,x,u) cre(Z) cre(y) cre(u) des(X) des(z) des(w) 
 (   0.50000) kdelta(A,C) t1(I,x,y,z) v(Z,y,w,u) cre(z) cre(w) cre(u) des(W) des(X) des(x) 
 (   0.50000) kdelta(A,C) t1(I,x,y,z) v(Z,w,x,u) cre(y) cre(z) cre(u) des(W) des(X) des(w) 
 (  -1.00000) kdelta(A,C) t1(I,x,y,z) v(y,w,W,u) cre(Z) cre(z) cre(u) des(X) des(x) des(w) 
 (  -0.25000) kdelta(A,C) t1(I,x,y,z) v(w,u,W,x) cre(Z) cre(y) cre(z) des(X) des(w) des(u) 

Total terms : 84
SQA automation time :  4.771 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =- np.einsum('IW, AC, XZ->IXAWZC', h_ca_so, np.identity(nextern), np.identity(ncas), optimize = True)
temp += np.einsum('IiiW, AC, XZ->IXAWZC', v_ccca_so, np.identity(nextern), np.identity(ncas), optimize = True)
temp += np.einsum('I, IW, AC, XZ->IXAWZC', e_core_so, t1_ca, np.identity(nextern), np.identity(ncas), optimize = True)
temp -= np.einsum('Wx, Ix, AC, XZ->IXAWZC', h_aa_so, t1_ca, np.identity(nextern), np.identity(ncas), optimize = True)
temp -= np.einsum('Ix, iWix, AC, XZ->IXAWZC', t1_ca, v_caca_so, np.identity(nextern), np.identity(ncas), optimize = True)
temp += np.einsum('ICXA, ZW->IXAWZC', v_ceae_so, rdm_ca_so, optimize = True)
temp += np.einsum('IW, AC, ZX->IXAWZC', h_ca_so, np.identity(nextern), rdm_ca_so, optimize = True)
temp += np.einsum('AC, IZXx, xW->IXAWZC', np.identity(nextern), v_caaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, IxWX, Zx->IXAWZC', np.identity(nextern), v_caaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, IiiW, ZX->IXAWZC', np.identity(nextern), v_ccca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('XZ, ICxA, xW->IXAWZC', np.identity(ncas), v_ceae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('I, AC, IW, ZX->IXAWZC', e_core_so, np.identity(nextern), t1_ca, rdm_ca_so, optimize = True)
temp -= np.einsum('I, AC, IZXx, xW->IXAWZC', e_core_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('I, AC, IxWX, Zx->IXAWZC', e_core_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Wx, AC, Ix, ZX->IXAWZC', h_aa_so, np.identity(nextern), t1_ca, rdm_ca_so, optimize = True)
temp -= np.einsum('Wx, AC, IyXx, Zy->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Xx, AC, IZxy, yW->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Xx, AC, IyWx, Zy->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Zx, AC, IxXy, yW->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('xy, AC, IZXx, yW->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('xy, AC, IxWX, Zy->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('AC, IZXx, iyix, yW->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, IZxy, iXix, yW->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('AC, IZxy, xyXz, zW->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, Ix, iWix, ZX->IXAWZC', np.identity(nextern), t1_ca, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, Ix, ZxXy, yW->IXAWZC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, Ix, xyWX, Zy->IXAWZC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, IxWX, ixiy, Zy->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, IxWy, iXiy, Zx->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, IxXy, iWiy, Zx->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, IxXy, ixiZ, yW->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('AC, Ixyz, yzWX, Zx->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxWy, AC, XZ, yx->IXAWZC', v_caaa_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('I, IxWy, AC, XZ, yx->IXAWZC', e_core_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('Wx, Iyxz, AC, XZ, zy->IXAWZC', h_aa_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('xy, IxWz, AC, XZ, zy->IXAWZC', h_aa_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IzWx, AC, XZ, yz->IXAWZC', h_aa_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('Ix, xyWz, AC, XZ, zy->IXAWZC', t1_ca, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('IxWy, ixiz, AC, XZ, yz->IXAWZC', t1_caaa, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('IxWy, iziy, AC, XZ, zx->IXAWZC', t1_caaa, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('Ixyz, iWiy, AC, XZ, zx->IXAWZC', t1_caaa, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= 0.5 * np.einsum('Ixyz, yzWw, AC, XZ, wx->IXAWZC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('ICxA, ZxWX->IXAWZC', v_ceae_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, IZxy, xyWX->IXAWZC', np.identity(nextern), v_caaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, IxWy, ZyXx->IXAWZC', np.identity(nextern), v_caaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('I, AC, IZxy, xyWX->IXAWZC', e_core_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp += np.einsum('I, AC, IxWy, ZyXx->IXAWZC', e_core_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('Wx, AC, Iyxz, ZzXy->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('Zx, AC, Ixyz, yzWX->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, AC, IZxz, yzWX->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, AC, IxWz, ZzXy->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, AC, IzWx, ZyXz->IXAWZC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, IZXx, xyzw, zwWy->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('AC, IZxy, xyzw, zwWX->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, IZxy, xzXw, ywWz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, IZxy, izix, yzWX->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, Ix, Zxyz, yzWX->IXAWZC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Ix, xyWz, ZzXy->IXAWZC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, IxWX, yzxw, Zwyz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, IxWy, ixiz, ZyXz->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, IxWy, yzXw, Zwxz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, IxWy, zwXx, Zyzw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, IxWy, iziy, ZzXx->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, IxXy, Zyzw, zwWx->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, IxXy, Zzxw, ywWz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, IxXy, yzWw, Zwxz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, IxXy, zwWx, Zyzw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Ixyz, iWiy, ZzXx->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Ixyz, ZyXw, zwWx->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Ixyz, ZwXx, yzWw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, Ixyz, ixiZ, yzWX->IXAWZC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Ixyz, yzWw, ZwXx->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, Ixyz, ywWX, Zzxw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxWy, yzwu, AC, XZ, wuxz->IXAWZC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxWy, zwxu, AC, XZ, yuzw->IXAWZC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += np.einsum('Ixyz, ywWu, AC, XZ, zuxw->IXAWZC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('Ixyz, wuWx, AC, XZ, yzwu->IXAWZC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, IZxy, xzwu, ywuWXz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, IxWy, yzwu, ZwuXxz->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, IxWy, zwxu, ZyuXzw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, Ixyz, Zywu, zwuWXx->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, Ixyz, Zwxu, yzuWXw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('AC, Ixyz, ywWu, ZzuXxw->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('AC, Ixyz, wuWx, ZyzXwu->IXAWZC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
