
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator
Second Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) X(I,x,A) h(x,B) 
 (   1.00000) X(I,x,B) h(x,A) 
 (  -1.00000) X(I,x,A) v(i,x,i,B) 
 (   1.00000) X(I,x,B) v(i,x,i,A) 
 (   1.00000) X(I,x,a) v(x,a,A,B) 
 (   1.00000) X(i,x,A) v(I,x,i,B) 
 (  -1.00000) X(i,x,B) v(I,x,i,A) 
 (  -1.00000) X(I,x,A) e(B) t1(x,B) 
 (   1.00000) X(I,x,B) e(A) t1(x,A) 
 (   1.00000) X(I,x,A) h(x,y) t1(y,B) 
 (  -1.00000) X(I,x,B) h(x,y) t1(y,A) 
 (   1.00000) X(I,x,A) t1(y,B) v(i,x,i,y) 
 (  -1.00000) X(I,x,B) t1(y,A) v(i,x,i,y) 
 (   1.00000) X(I,x,A) h(y,B) cre(y) des(x) 
 (  -1.00000) X(I,x,B) h(y,A) cre(y) des(x) 
 (   1.00000) X(I,x,A) v(x,z,y,B) cre(z) des(y) 
 (   1.00000) X(I,x,A) v(i,y,i,B) cre(y) des(x) 
 (  -1.00000) X(I,x,B) v(x,z,y,A) cre(z) des(y) 
 (  -1.00000) X(I,x,B) v(i,y,i,A) cre(y) des(x) 
 (  -1.00000) X(I,x,a) v(y,a,A,B) cre(y) des(x) 
 (  -1.00000) X(i,x,A) v(I,y,i,B) cre(y) des(x) 
 (   1.00000) X(i,x,B) v(I,y,i,A) cre(y) des(x) 
 (   1.00000) X(I,x,A) e(B) t1(y,B) cre(y) des(x) 
 (  -1.00000) X(I,x,A) e(B) t1(x,y,B,z) cre(y) des(z) 
 (  -1.00000) X(I,x,B) e(A) t1(y,A) cre(y) des(x) 
 (   1.00000) X(I,x,B) e(A) t1(x,y,A,z) cre(y) des(z) 
 (   1.00000) X(I,x,A) h(x,y) t1(y,z,B,w) cre(z) des(w) 
 (  -1.00000) X(I,x,A) h(y,z) t1(y,B) cre(z) des(x) 
 (   1.00000) X(I,x,A) h(y,z) t1(x,y,B,w) cre(z) des(w) 
 (  -1.00000) X(I,x,A) h(y,z) t1(x,w,B,y) cre(w) des(z) 
 (  -1.00000) X(I,x,B) h(x,y) t1(y,z,A,w) cre(z) des(w) 
 (   1.00000) X(I,x,B) h(y,z) t1(y,A) cre(z) des(x) 
 (  -1.00000) X(I,x,B) h(y,z) t1(x,y,A,w) cre(z) des(w) 
 (   1.00000) X(I,x,B) h(y,z) t1(x,w,A,y) cre(w) des(z) 
 (   1.00000) X(I,x,A) t1(y,B) v(y,z,x,w) cre(w) des(z) 
 (  -1.00000) X(I,x,A) t1(y,B) v(i,z,i,y) cre(z) des(x) 
 (  -1.00000) X(I,x,A) t1(x,y,B,z) v(i,z,i,w) cre(y) des(w) 
 (   1.00000) X(I,x,A) t1(x,y,B,z) v(i,w,i,y) cre(w) des(z) 
 (   1.00000) X(I,x,A) t1(y,z,B,w) v(i,x,i,y) cre(z) des(w) 
 (   0.50000) X(I,x,A) t1(y,z,B,w) v(y,z,x,u) cre(u) des(w) 
 (  -1.00000) X(I,x,B) t1(y,A) v(y,z,x,w) cre(w) des(z) 
 (   1.00000) X(I,x,B) t1(y,A) v(i,z,i,y) cre(z) des(x) 
 (   1.00000) X(I,x,B) t1(x,y,A,z) v(i,z,i,w) cre(y) des(w) 
 (  -1.00000) X(I,x,B) t1(x,y,A,z) v(i,w,i,y) cre(w) des(z) 
 (  -1.00000) X(I,x,B) t1(y,z,A,w) v(i,x,i,y) cre(z) des(w) 
 (  -0.50000) X(I,x,B) t1(y,z,A,w) v(y,z,x,u) cre(u) des(w) 
 (   0.50000) X(I,x,A) v(z,w,y,B) cre(z) cre(w) des(x) des(y) 
 (  -0.50000) X(I,x,B) v(z,w,y,A) cre(z) cre(w) des(x) des(y) 
 (  -0.50000) X(I,x,A) e(B) t1(y,z,B,w) cre(y) cre(z) des(x) des(w) 
 (   0.50000) X(I,x,B) e(A) t1(y,z,A,w) cre(y) cre(z) des(x) des(w) 
 (   1.00000) X(I,x,A) h(y,z) t1(y,w,B,u) cre(z) cre(w) des(x) des(u) 
 (  -0.50000) X(I,x,A) h(y,z) t1(w,u,B,y) cre(w) cre(u) des(x) des(z) 
 (  -1.00000) X(I,x,B) h(y,z) t1(y,w,A,u) cre(z) cre(w) des(x) des(u) 
 (   0.50000) X(I,x,B) h(y,z) t1(w,u,A,y) cre(w) cre(u) des(x) des(z) 
 (   0.50000) X(I,x,A) t1(y,B) v(y,z,w,u) cre(w) cre(u) des(x) des(z) 
 (  -0.50000) X(I,x,A) t1(x,y,B,z) v(y,w,u,v) cre(u) cre(v) des(z) des(w) 
 (   0.50000) X(I,x,A) t1(x,y,B,z) v(w,u,z,v) cre(y) cre(v) des(w) des(u) 
 (   0.25000) X(I,x,A) t1(y,z,B,w) v(y,z,u,v) cre(u) cre(v) des(x) des(w) 
 (  -1.00000) X(I,x,A) t1(y,z,B,w) v(y,u,x,v) cre(z) cre(v) des(w) des(u) 
 (  -0.50000) X(I,x,A) t1(y,z,B,w) v(i,w,i,u) cre(y) cre(z) des(x) des(u) 
 (  -0.25000) X(I,x,A) t1(y,z,B,w) v(u,v,x,w) cre(y) cre(z) des(u) des(v) 
 (  -1.00000) X(I,x,A) t1(y,z,B,w) v(i,u,i,y) cre(z) cre(u) des(x) des(w) 
 (  -0.50000) X(I,x,B) t1(y,A) v(y,z,w,u) cre(w) cre(u) des(x) des(z) 
 (   0.50000) X(I,x,B) t1(x,y,A,z) v(y,w,u,v) cre(u) cre(v) des(z) des(w) 
 (  -0.50000) X(I,x,B) t1(x,y,A,z) v(w,u,z,v) cre(y) cre(v) des(w) des(u) 
 (  -0.25000) X(I,x,B) t1(y,z,A,w) v(y,z,u,v) cre(u) cre(v) des(x) des(w) 
 (   1.00000) X(I,x,B) t1(y,z,A,w) v(y,u,x,v) cre(z) cre(v) des(w) des(u) 
 (   0.50000) X(I,x,B) t1(y,z,A,w) v(i,w,i,u) cre(y) cre(z) des(x) des(u) 
 (   0.25000) X(I,x,B) t1(y,z,A,w) v(u,v,x,w) cre(y) cre(z) des(u) des(v) 
 (   1.00000) X(I,x,B) t1(y,z,A,w) v(i,u,i,y) cre(z) cre(u) des(x) des(w) 
 (  -0.50000) X(I,x,A) t1(y,z,B,w) v(y,u,v,s) cre(z) cre(v) cre(s) des(x) des(w) des(u) 
 (  -0.25000) X(I,x,A) t1(y,z,B,w) v(u,v,w,s) cre(y) cre(z) cre(s) des(x) des(u) des(v) 
 (   0.50000) X(I,x,B) t1(y,z,A,w) v(y,u,v,s) cre(z) cre(v) cre(s) des(x) des(w) des(u) 
 (   0.25000) X(I,x,B) t1(y,z,A,w) v(u,v,w,s) cre(y) cre(z) cre(s) des(x) des(u) des(v) 

Total terms : 74
SQA automation time :  2.363 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =- np.einsum('IxA, xB->IAB', X, h_ae_so, optimize = True)
temp += np.einsum('IxB, xA->IAB', X, h_ae_so, optimize = True)
temp -= np.einsum('IxA, ixiB->IAB', X, v_cace_so, optimize = True)
temp += np.einsum('IxB, ixiA->IAB', X, v_cace_so, optimize = True)
temp += np.einsum('Ixa, xaAB->IAB', X, v_aeee_so, optimize = True)
temp += np.einsum('ixA, IxiB->IAB', X, v_cace_so, optimize = True)
temp -= np.einsum('ixB, IxiA->IAB', X, v_cace_so, optimize = True)
temp -= np.einsum('IxA, B, xB->IAB', X, e_extern_so, t1_ae, optimize = True)
temp += np.einsum('IxB, A, xA->IAB', X, e_extern_so, t1_ae, optimize = True)
temp += np.einsum('IxA, xy, yB->IAB', X, h_aa_so, t1_ae, optimize = True)
temp -= np.einsum('IxB, xy, yA->IAB', X, h_aa_so, t1_ae, optimize = True)
temp += np.einsum('IxA, yB, ixiy->IAB', X, t1_ae, v_caca_so, optimize = True)
temp -= np.einsum('IxB, yA, ixiy->IAB', X, t1_ae, v_caca_so, optimize = True)
temp += np.einsum('IxA, yB, yx->IAB', X, h_ae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, yA, yx->IAB', X, h_ae_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, xzyB, zy->IAB', X, v_aaae_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, iyiB, yx->IAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, xzyA, zy->IAB', X, v_aaae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, iyiA, yx->IAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp -= np.einsum('Ixa, yaAB, yx->IAB', X, v_aeee_so, rdm_ca_so, optimize = True)
temp -= np.einsum('ixA, IyiB, yx->IAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp += np.einsum('ixB, IyiA, yx->IAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, B, yB, yx->IAB', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
temp -= np.einsum('IxA, B, xyBz, yz->IAB', X, e_extern_so, t1_aaea, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, A, yA, yx->IAB', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
temp += np.einsum('IxB, A, xyAz, yz->IAB', X, e_extern_so, t1_aaea, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, xy, yzBw, zw->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp -= np.einsum('IxA, yz, yB, zx->IAB', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, yz, xyBw, zw->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp -= np.einsum('IxA, yz, xwBy, wz->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, xy, yzAw, zw->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp += np.einsum('IxB, yz, yA, zx->IAB', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, yz, xyAw, zw->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp += np.einsum('IxB, yz, xwAy, wz->IAB', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, yB, yzxw, wz->IAB', X, t1_ae, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxA, yB, iziy, zx->IAB', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxA, xyBz, iziw, yw->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, xyBz, iwiy, wz->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxA, yzBw, ixiy, zw->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('IxA, yzBw, yzxu, uw->IAB', X, t1_aaea, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, yA, yzxw, wz->IAB', X, t1_ae, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxB, yA, iziy, zx->IAB', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IxB, xyAz, iziw, yw->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, xyAz, iwiy, wz->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IxB, yzAw, ixiy, zw->IAB', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
temp -= 0.5 * np.einsum('IxB, yzAw, yzxu, uw->IAB', X, t1_aaea, v_aaaa_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('IxA, zwyB, zwxy->IAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxB, zwyA, zwxy->IAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxA, B, yzBw, yzxw->IAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxB, A, yzAw, yzxw->IAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += np.einsum('IxA, yz, ywBu, zwxu->IAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxA, yz, wuBy, wuxz->IAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxB, yz, ywAu, zwxu->IAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxB, yz, wuAy, wuxz->IAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxA, yB, yzwu, wuxz->IAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxA, xyBz, ywuv, uvzw->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxA, xyBz, wuzv, yvwu->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('IxA, yzBw, yzuv, uvxw->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxA, yzBw, yuxv, zvwu->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxA, yzBw, iwiu, yzxu->IAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('IxA, yzBw, uvxw, yzuv->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxA, yzBw, iuiy, zuxw->IAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxB, yA, yzwu, wuxz->IAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxB, xyAz, ywuv, uvzw->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxB, xyAz, wuzv, yvwu->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('IxB, yzAw, yzuv, uvxw->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IxB, yzAw, yuxv, zvwu->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IxB, yzAw, iwiu, yzxu->IAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('IxB, yzAw, uvxw, yzuv->IAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IxB, yzAw, iuiy, zuxw->IAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IxA, yzBw, yuvs, zvsxwu->IAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('IxA, yzBw, uvws, yzsxuv->IAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('IxB, yzAw, yuvs, zvsxwu->IAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.25 * np.einsum('IxB, yzAw, uvws, yzsxuv->IAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
