 For Help :: help = True
--------------------------------------------------------------
M[s_c:f_c, s_c:f_c] =  np.einsum('Ix, Jx->IJ', h_ca_so, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ia, Ja->IJ', h_ce_so, t1_ce, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Jx, Ix->IJ', h_ca_so, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ja, Ia->IJ', h_ce_so, t1_ce, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ix, Jiix->IJ', t1_ca, v_ccca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Iixy, Jixy->IJ', t1_ccaa, v_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Iiax, Jixa->IJ', t1_ccea, v_ccae_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Iiab, Jiab->IJ', t1_ccee, v_ccee_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ia, Jiia->IJ', t1_ce, v_ccce_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jx, Iiix->IJ', t1_ca, v_ccca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Jixy, Iixy->IJ', t1_ccaa, v_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jiax, Iixa->IJ', t1_ccea, v_ccae_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Jiab, Iiab->IJ', t1_ccee, v_ccee_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ja, Iiia->IJ', t1_ce, v_ccce_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ix, IiJx->IJ', t1_ca, v_ccca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ix, JiIx->IJ', t1_ca, v_ccca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ia, JiIa->IJ', t1_ce, v_ccce_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ia, IiJa->IJ', t1_ce, v_ccce_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ix, Jx->IJ', e_core_so, t1_ca, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('I, Iixy, Jixy->IJ', e_core_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Iiax, Jiax->IJ', e_core_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('I, Iiab, Jiab->IJ', e_core_so, t1_ccee, t1_ccee, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ia, Ja->IJ', e_core_so, t1_ce, t1_ce, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ix, Jx->IJ', e_core_so, t1_ca, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('J, Iixy, Jixy->IJ', e_core_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Iiax, Jiax->IJ', e_core_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('J, Iiab, Jiab->IJ', e_core_so, t1_ccee, t1_ccee, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ia, Ja->IJ', e_core_so, t1_ce, t1_ce, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('i, Iixy, Jixy->IJ', e_core_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('i, Iiax, Jiax->IJ', e_core_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('i, Iiab, Jiab->IJ', e_core_so, t1_ccee, t1_ccee, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('i, Jixy, Iixy->IJ', e_core_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('i, Jiax, Iiax->IJ', e_core_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('i, Jiab, Iiab->IJ', e_core_so, t1_ccee, t1_ccee, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Ia, Ja->IJ', e_extern_so, t1_ce, t1_ce, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Iiax, Jiax->IJ', e_extern_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Iiab, Jiab->IJ', e_extern_so, t1_ccee, t1_ccee, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Ix, Jy->IJ', h_aa_so, t1_ca, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Iixz, Jiyz->IJ', h_aa_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Iiax, Jiay->IJ', h_aa_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Jixy, Iizw->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Ix, Jy->IJ', v_caca_so, t1_ca, t1_ca, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Ijxz, Jjyz->IJ', v_caca_so, t1_ccaa, t1_ccaa, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Ijax, Jjay->IJ', v_caca_so, t1_ccea, t1_ccea, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ix, Jyxz, zy->IJ', h_ca_so, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ia, Jxay, yx->IJ', h_ce_so, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Jx, Iyxz, yz->IJ', h_ca_so, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ja, Ixay, xy->IJ', h_ce_so, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ix, Jyxz, zy->IJ', t1_ca, v_caaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Ixyz, Jwyz, xw->IJ', t1_caaa, v_caaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ixyz, Jiiy, xz->IJ', t1_caaa, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ixay, Jzya, xz->IJ', t1_caea, v_caae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ixay, Jiia, xy->IJ', t1_caea, v_ccce_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Ixab, Jyab, xy->IJ', t1_caee, v_caee_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Iixy, Jixz, zy->IJ', t1_ccaa, v_ccaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Iiax, Jiya, yx->IJ', t1_ccea, v_ccae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ia, Jxya, yx->IJ', t1_ce, v_caae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Jx, Izxy, zy->IJ', t1_ca, v_caaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Jxyz, Iwyz, wx->IJ', t1_caaa, v_caaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jxyz, Iiiy, zx->IJ', t1_caaa, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jxay, Izya, zx->IJ', t1_caea, v_caae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jxay, Iiia, yx->IJ', t1_caea, v_ccce_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('Jxab, Iyab, yx->IJ', t1_caee, v_caee_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jixy, Iixz, yz->IJ', t1_ccaa, v_ccaa_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Jiax, Iiya, xy->IJ', t1_ccea, v_ccae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ja, Iyxa, yx->IJ', t1_ce, v_caae_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('ix, JiIy, yx->IJ', t1_ca, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('ix, IiJy, xy->IJ', t1_ca, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixyz, JiIy, xz->IJ', t1_caaa, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixyz, IiJy, zx->IJ', t1_caaa, v_ccca_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixay, JiIa, xy->IJ', t1_caea, v_ccce_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixay, IiJa, yx->IJ', t1_caea, v_ccce_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xa, IyJa, yx->IJ', t1_ae, v_cace_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xa, JyIa, xy->IJ', t1_ae, v_cace_so, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ix, Jyxz, zy->IJ', e_core_so, t1_ca, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ixyz, Jy, xz->IJ', e_core_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('I, Ixyz, Jwyz, xw->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ixay, Ja, xy->IJ', e_core_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ixay, Jzay, xz->IJ', e_core_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('I, Ixab, Jyab, xy->IJ', e_core_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('I, Iixy, Jixz, zy->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('I, Iiax, Jiay, yx->IJ', e_core_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('I, Ia, Jxay, yx->IJ', e_core_so, t1_ce, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ix, Jyxz, zy->IJ', e_core_so, t1_ca, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ixyz, Jy, xz->IJ', e_core_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('J, Ixyz, Jwyz, xw->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ixay, Ja, xy->IJ', e_core_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ixay, Jzay, xz->IJ', e_core_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('J, Ixab, Jyab, xy->IJ', e_core_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('J, Iixy, Jixz, zy->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('J, Iiax, Jiay, yx->IJ', e_core_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('J, Ia, Jxay, yx->IJ', e_core_so, t1_ce, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('i, Iixy, Jixz, zy->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('i, Iiax, Jiay, yx->IJ', e_core_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('i, Jixy, Iixz, yz->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('i, Jiax, Iiay, xy->IJ', e_core_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Ia, Jxay, yx->IJ', e_extern_so, t1_ce, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Ixay, Ja, xy->IJ', e_extern_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Ixay, Jzay, xz->IJ', e_extern_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('a, Ixab, Jyab, xy->IJ', e_extern_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('a, Iiax, Jiay, yx->IJ', e_extern_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Ix, Jzyw, wz->IJ', h_aa_so, t1_ca, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Ixzw, Jz, yw->IJ', h_aa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Ixzw, Juzw, yu->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Ixaz, Ja, yz->IJ', h_aa_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Ixaz, Jwaz, yw->IJ', h_aa_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Ixab, Jzab, yz->IJ', h_aa_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Izxw, Jy, zw->IJ', h_aa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Izxw, Jw, zy->IJ', h_aa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Izxw, Juyw, zu->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Izax, Ja, zy->IJ', h_aa_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xy, Izax, Jway, zw->IJ', h_aa_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xy, Iixz, Jiyw, wz->IJ', h_aa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Iixz, Jizw, wy->IJ', h_aa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Iiax, Jiaz, zy->IJ', h_aa_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jxzw, Iz, wy->IJ', h_aa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Jxzw, Iuzw, uy->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jxaz, Ia, zy->IJ', h_aa_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jxaz, Iwaz, wy->IJ', h_aa_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Jxab, Izab, zy->IJ', h_aa_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jzxw, Iw, yz->IJ', h_aa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Jzax, Ia, yz->IJ', h_aa_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Jixz, Iizw, yw->IJ', h_aa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jiax, Iiaz, yz->IJ', h_aa_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xyzw, Jx, Iz, wy->IJ', v_aaaa_so, t1_ca, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xyzw, Jx, Iuzw, uy->IJ', v_aaaa_so, t1_ca, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xyzw, Juxy, Iz, wu->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Juxy, Ivzw, vu->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xyzw, Jixy, Iizu, wu->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xyzw, Jixu, Iizw, uy->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xyzw, Jixu, Iizu, wy->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xyzw, Jiax, Iiaz, wy->IJ', v_aaaa_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Ix, Jzyw, wz->IJ', v_caca_so, t1_ca, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Iyzw, Jz, xw->IJ', v_caca_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Iyzw, Juzw, xu->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Iyaz, Ja, xz->IJ', v_caca_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Iyaz, Jwaz, xw->IJ', v_caca_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Iyab, Jzab, xz->IJ', v_caca_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Izxw, Jy, zw->IJ', v_caca_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Izxw, Jw, zy->IJ', v_caca_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Izxw, Juyw, zu->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Izax, Ja, zy->IJ', v_caca_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('ixiy, Izax, Jway, zw->IJ', v_caca_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('ixiy, Ijxz, Jjyw, wz->IJ', v_caca_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Ijxz, Jjzw, wy->IJ', v_caca_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Ijax, Jjaz, zy->IJ', v_caca_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jxzw, Iz, wy->IJ', v_caca_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Jxzw, Iuzw, uy->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jxaz, Ia, zy->IJ', v_caca_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jxaz, Iwaz, wy->IJ', v_caca_so, t1_caea, t1_caea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Jxab, Izab, zy->IJ', v_caca_so, t1_caee, t1_caee, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jzyw, Iw, xz->IJ', v_caca_so, t1_caaa, t1_ca, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Jzay, Ia, xz->IJ', v_caca_so, t1_caea, t1_ce, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Jjyz, Ijzw, xw->IJ', v_caca_so, t1_ccaa, t1_ccaa, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jjay, Ijaz, xz->IJ', v_caca_so, t1_ccea, t1_ccea, rdm_ca_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('Ixyz, Jxwu, wuyz->IJ', t1_caaa, v_caaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Ixyz, Jwyu, xuzw->IJ', t1_caaa, v_caaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Ixay, Jzwa, xwyz->IJ', t1_caea, v_caae_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('Iixy, Jizw, zwxy->IJ', t1_ccaa, v_ccaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('Jxyz, Iuyw, zuxw->IJ', t1_caaa, v_caaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('Jxyz, Ixwu, yzwu->IJ', t1_caaa, v_caaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('Jxay, Iwza, ywxz->IJ', t1_caea, v_caae_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('Jixy, Iizw, xyzw->IJ', t1_ccaa, v_ccaa_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xyaz, IwJa, zwxy->IJ', t1_aaea, v_cace_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xyaz, JwIa, xyzw->IJ', t1_aaea, v_cace_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixyz, JiIw, xwyz->IJ', t1_caaa, v_ccca_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixyz, IiJw, yzxw->IJ', t1_caaa, v_ccca_so, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('I, Ixyz, Jxwu, wuyz->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('I, Ixyz, Jwyu, xuzw->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('I, Ixay, Jzaw, xwyz->IJ', e_core_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('I, Iixy, Jizw, zwxy->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('J, Ixyz, Jxwu, wuyz->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('J, Ixyz, Jwyu, xuzw->IJ', e_core_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('J, Ixay, Jzaw, xwyz->IJ', e_core_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('J, Iixy, Jizw, zwxy->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('i, Jixy, Iizw, xyzw->IJ', e_core_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('a, Ixay, Jzaw, xwyz->IJ', e_extern_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xy, Ixzw, Jyuv, uvzw->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Ixzw, Juzv, yvwu->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Ixaz, Jwau, yuzw->IJ', h_aa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Izxw, Jzuv, uvyw->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xy, Izxw, Juyv, zvwu->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Izxw, Juwv, zvyu->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Izax, Jwau, zuyw->IJ', h_aa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Iixz, Jiwu, wuyz->IJ', h_aa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Jxzw, Iuzv, wuyv->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Jxaz, Iwau, zwyu->IJ', h_aa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Jzxw, Izuv, ywuv->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xy, Jzxw, Iuwv, yuzv->IJ', h_aa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xy, Jzax, Iwau, ywzu->IJ', h_aa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xy, Jixz, Iiwu, yzwu->IJ', h_aa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Ixuv, Jy, zwuv->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixuv, Ju, zwyv->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixuv, Jsyu, zwvs->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.125 * np.einsum('xyzw, Ixuv, Jsuv, zwys->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixau, Ja, zwyu->IJ', v_aaaa_so, t1_caea, t1_ce, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Ixau, Jvay, zwuv->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixau, Jvau, zwyv->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.125 * np.einsum('xyzw, Ixab, Juab, zwyu->IJ', v_aaaa_so, t1_caee, t1_caee, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iz, Jwuv, uvxy->IJ', v_aaaa_so, t1_ca, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.0625 * np.einsum('xyzw, Iuzw, Juvs, vsxy->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iuzv, Jwvs, usxy->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iuzv, Jv, wuxy->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Iuaz, Jwav, uvxy->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Iuaz, Ja, wuxy->IJ', v_aaaa_so, t1_caea, t1_ce, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.0625 * np.einsum('xyzw, Iizw, Jiuv, uvxy->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Iizu, Jiuv, wvxy->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iiaz, Jiau, wuxy->IJ', v_aaaa_so, t1_ccea, t1_ccea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xyzw, Jx, Iuzv, wuyv->IJ', v_aaaa_so, t1_ca, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jzuv, Iu, wvxy->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.125 * np.einsum('xyzw, Jzuv, Isuv, wsxy->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jzau, Ia, wuxy->IJ', v_aaaa_so, t1_caea, t1_ce, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jzau, Ivau, wvxy->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.125 * np.einsum('xyzw, Jzab, Iuab, wuxy->IJ', v_aaaa_so, t1_caee, t1_caee, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.0625 * np.einsum('xyzw, Juxy, Iuvs, zwvs->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('xyzw, Juxy, Ivzs, wvus->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xyzw, Juxv, Iz, wvyu->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Juxv, Iv, zwyu->IJ', v_aaaa_so, t1_caaa, t1_ca, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('xyzw, Juxv, Iszw, vsyu->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xyzw, Juxv, Iszv, wsyu->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Juax, Ia, zwyu->IJ', v_aaaa_so, t1_caea, t1_ce, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xyzw, Juax, Ivaz, wvyu->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.0625 * np.einsum('xyzw, Jixy, Iiuv, zwuv->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += np.einsum('xyzw, Jixu, Iizv, wuyv->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Jixu, Iiuv, zwyv->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jiax, Iiau, zwyu->IJ', v_aaaa_so, t1_ccea, t1_ccea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Iyzw, Juzv, xvwu->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Iyaz, Jwau, xuzw->IJ', v_caca_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Izxw, Jzuv, uvyw->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('ixiy, Izxw, Juyv, zvwu->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Izxw, Juwv, zvyu->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Izax, Jwau, zuyw->IJ', v_caca_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Ijxz, Jjwu, wuyz->IJ', v_caca_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('ixiy, Jxzw, Iyuv, zwuv->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Jxzw, Iuzv, wuyv->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Jxaz, Iwau, zwyu->IJ', v_caca_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Jzyw, Izuv, xwuv->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.5 * np.einsum('ixiy, Jzyw, Iuwv, xuzv->IJ', v_caca_so, t1_caaa, t1_caaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.5 * np.einsum('ixiy, Jzay, Iwau, xwzu->IJ', v_caca_so, t1_caea, t1_caea, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('ixiy, Jjyz, Ijwu, xzwu->IJ', v_caca_so, t1_ccaa, t1_ccaa, rdm_ccaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Ixuv, Jzst, wstyuv->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Ixuv, Jsyt, zwtuvs->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixuv, Jsut, zwtyvs->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Ixau, Jvas, zwsyuv->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iuzv, Jwst, ustxyv->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('xyzw, Iuzv, Just, wstxyv->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Iuzv, Jsvt, wutxys->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Iuaz, Jvas, wusxyv->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('xyzw, Iizu, Jivs, wvsxyu->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jzuv, Isut, wvsxyt->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Jzau, Ivas, wuvxys->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('xyzw, Juxv, Iust, zwvyst->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= np.einsum('xyzw, Juxv, Iszt, wvsyut->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] -= 0.25 * np.einsum('xyzw, Juxv, Isvt, zwsyut->IJ', v_aaaa_so, t1_caaa, t1_caaa, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.25 * np.einsum('xyzw, Juax, Ivas, zwvyus->IJ', v_aaaa_so, t1_caea, t1_caea, rdm_cccaaa_so, optimize = True)
M[s_c:f_c, s_c:f_c] += 0.125 * np.einsum('xyzw, Jixu, Iivs, zwuyvs->IJ', v_aaaa_so, t1_ccaa, t1_ccaa, rdm_cccaaa_so, optimize = True)
