
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
 (   1.00000) h(c10,a10) cre(a10) des(c10) 
 (   1.00000) h(a12,c12) cre(c12) des(a12) 
 (   1.00000) h(a14,v14) cre(v14) des(a14) 
 (   1.00000) h(v16,a16) cre(a16) des(v16) 
 (   1.00000) h(c18,v18) cre(v18) des(c18) 
 (   1.00000) h(v20,c20) cre(c20) des(v20) 
 (   1.00000) v(c23,a23,c22,a22) gamma(a23,a22) des(c23) cre(c22) 
 (  -1.00000) v(v25,a25,v24,a24) gamma(a25,a24) cre(v24) des(v25) 
 (  -0.25000) v(c29,c28,c26,c27) des(c29) des(c28) cre(c26) cre(c27) 
 (   0.25000) v(a26,c28,c26,c27) cre(c26) cre(c27) des(c28) des(a26) 
 (   0.25000) v(v26,c28,c26,c27) cre(c26) cre(c27) des(c28) des(v26) 
 (   0.25000) v(c30,a27,c26,c27) cre(c26) cre(c27) des(a27) des(c30) 
 (   0.25000) v(a28,a27,c26,c27) cre(c26) cre(c27) des(a27) des(a28) 
 (   0.25000) v(v27,a27,c26,c27) cre(c26) cre(c27) des(a27) des(v27) 
 (   0.25000) v(c31,v28,c26,c27) cre(c26) cre(c27) des(v28) des(c31) 
 (   0.25000) v(a29,v28,c26,c27) cre(c26) cre(c27) des(v28) des(a29) 
 (   0.25000) v(v29,v28,c26,c27) cre(c26) cre(c27) des(v28) des(v29) 
 (   0.25000) v(c33,c32,c26,a30) cre(c26) cre(a30) des(c32) des(c33) 
 (   0.25000) v(a31,c32,c26,a30) cre(c26) cre(a30) des(c32) des(a31) 
 (   0.25000) v(v30,c32,c26,a30) cre(c26) cre(a30) des(c32) des(v30) 
 (   0.25000) v(c34,a32,c26,a30) cre(c26) cre(a30) des(a32) des(c34) 
 (   0.25000) v(a33,a32,c26,a30) cre(c26) cre(a30) des(a32) des(a33) 
 (   0.25000) v(v31,a32,c26,a30) cre(c26) cre(a30) des(a32) des(v31) 
 (   0.25000) v(c35,v32,c26,a30) cre(c26) cre(a30) des(v32) des(c35) 
 (   0.25000) v(a34,v32,c26,a30) cre(c26) cre(a30) des(v32) des(a34) 
 (   0.25000) v(v33,v32,c26,a30) cre(c26) cre(a30) des(v32) des(v33) 
 (   0.25000) v(c37,c36,c26,v34) cre(c26) cre(v34) des(c36) des(c37) 
 (   0.25000) v(a35,c36,c26,v34) cre(c26) cre(v34) des(c36) des(a35) 
 (   0.25000) v(v35,c36,c26,v34) cre(c26) cre(v34) des(c36) des(v35) 
 (   0.25000) v(c38,a36,c26,v34) cre(c26) cre(v34) des(a36) des(c38) 
 (   0.25000) v(a37,a36,c26,v34) cre(c26) cre(v34) des(a36) des(a37) 
 (   0.25000) v(v36,a36,c26,v34) cre(c26) cre(v34) des(a36) des(v36) 
 (   0.25000) v(c39,v37,c26,v34) cre(c26) cre(v34) des(v37) des(c39) 
 (   0.25000) v(a38,v37,c26,v34) cre(c26) cre(v34) des(v37) des(a38) 
 (   0.25000) v(v38,v37,c26,v34) cre(c26) cre(v34) des(v37) des(v38) 
 (   0.25000) v(c42,c41,a39,c40) cre(a39) cre(c40) des(c41) des(c42) 
 (   0.25000) v(a40,c41,a39,c40) cre(a39) cre(c40) des(c41) des(a40) 
 (   0.25000) v(v39,c41,a39,c40) cre(a39) cre(c40) des(c41) des(v39) 
 (   0.25000) v(c43,a41,a39,c40) cre(a39) cre(c40) des(a41) des(c43) 
 (   0.25000) v(a42,a41,a39,c40) cre(a39) cre(c40) des(a41) des(a42) 
 (   0.25000) v(v40,a41,a39,c40) cre(a39) cre(c40) des(a41) des(v40) 
 (   0.25000) v(c44,v41,a39,c40) cre(a39) cre(c40) des(v41) des(c44) 
 (   0.25000) v(a43,v41,a39,c40) cre(a39) cre(c40) des(v41) des(a43) 
 (   0.25000) v(v42,v41,a39,c40) cre(a39) cre(c40) des(v41) des(v42) 
 (   0.25000) v(c46,c45,a39,a44) cre(a39) cre(a44) des(c45) des(c46) 
 (   0.25000) v(a45,c45,a39,a44) cre(a39) cre(a44) des(c45) des(a45) 
 (   0.25000) v(v43,c45,a39,a44) cre(a39) cre(a44) des(c45) des(v43) 
 (   0.25000) v(c47,a46,a39,a44) cre(a39) cre(a44) des(a46) des(c47) 
 (   0.25000) v(v44,a46,a39,a44) cre(a39) cre(a44) des(a46) des(v44) 
 (   0.25000) v(c48,v45,a39,a44) cre(a39) cre(a44) des(v45) des(c48) 
 (   0.25000) v(a48,v45,a39,a44) cre(a39) cre(a44) des(v45) des(a48) 
 (   0.25000) v(v46,v45,a39,a44) cre(a39) cre(a44) des(v45) des(v46) 
 (   0.25000) v(c50,c49,a39,v47) cre(a39) cre(v47) des(c49) des(c50) 
 (   0.25000) v(a49,c49,a39,v47) cre(a39) cre(v47) des(c49) des(a49) 
 (   0.25000) v(v48,c49,a39,v47) cre(a39) cre(v47) des(c49) des(v48) 
 (   0.25000) v(c51,a50,a39,v47) cre(a39) cre(v47) des(a50) des(c51) 
 (   0.25000) v(a51,a50,a39,v47) cre(a39) cre(v47) des(a50) des(a51) 
 (   0.25000) v(v49,a50,a39,v47) cre(a39) cre(v47) des(a50) des(v49) 
 (   0.25000) v(c52,v50,a39,v47) cre(a39) cre(v47) des(v50) des(c52) 
 (   0.25000) v(a52,v50,a39,v47) cre(a39) cre(v47) des(v50) des(a52) 
 (   0.25000) v(v51,v50,a39,v47) cre(a39) cre(v47) des(v50) des(v51) 
 (   0.25000) v(c55,c54,v52,c53) cre(v52) cre(c53) des(c54) des(c55) 
 (   0.25000) v(a53,c54,v52,c53) cre(v52) cre(c53) des(c54) des(a53) 
 (   0.25000) v(v53,c54,v52,c53) cre(v52) cre(c53) des(c54) des(v53) 
 (   0.25000) v(c56,a54,v52,c53) cre(v52) cre(c53) des(a54) des(c56) 
 (   0.25000) v(a55,a54,v52,c53) cre(v52) cre(c53) des(a54) des(a55) 
 (   0.25000) v(v54,a54,v52,c53) cre(v52) cre(c53) des(a54) des(v54) 
 (   0.25000) v(c57,v55,v52,c53) cre(v52) cre(c53) des(v55) des(c57) 
 (   0.25000) v(a56,v55,v52,c53) cre(v52) cre(c53) des(v55) des(a56) 
 (   0.25000) v(v56,v55,v52,c53) cre(v52) cre(c53) des(v55) des(v56) 
 (   0.25000) v(c59,c58,v52,a57) cre(v52) cre(a57) des(c58) des(c59) 
 (   0.25000) v(a58,c58,v52,a57) cre(v52) cre(a57) des(c58) des(a58) 
 (   0.25000) v(v57,c58,v52,a57) cre(v52) cre(a57) des(c58) des(v57) 
 (   0.25000) v(c60,a59,v52,a57) cre(v52) cre(a57) des(a59) des(c60) 
 (   0.25000) v(a60,a59,v52,a57) cre(v52) cre(a57) des(a59) des(a60) 
 (   0.25000) v(v58,a59,v52,a57) cre(v52) cre(a57) des(a59) des(v58) 
 (   0.25000) v(c61,v59,v52,a57) cre(v52) cre(a57) des(v59) des(c61) 
 (   0.25000) v(a61,v59,v52,a57) cre(v52) cre(a57) des(v59) des(a61) 
 (   0.25000) v(v60,v59,v52,a57) cre(v52) cre(a57) des(v59) des(v60) 
 (   0.25000) v(c63,c62,v52,v61) cre(v52) cre(v61) des(c62) des(c63) 
 (   0.25000) v(a62,c62,v52,v61) cre(v52) cre(v61) des(c62) des(a62) 
 (   0.25000) v(v62,c62,v52,v61) cre(v52) cre(v61) des(c62) des(v62) 
 (   0.25000) v(c64,a63,v52,v61) cre(v52) cre(v61) des(a63) des(c64) 
 (   0.25000) v(a64,a63,v52,v61) cre(v52) cre(v61) des(a63) des(a64) 
 (   0.25000) v(v63,a63,v52,v61) cre(v52) cre(v61) des(a63) des(v63) 
 (   0.25000) v(c65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(c65) 
 (   0.25000) v(a65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(a65) 
 (   0.25000) v(v65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(v65) 
 (  -1.00000) v(v67,c67,c66,v66) cre(c66) cre(v66) des(c67) des(v67) 
 (  -1.00000) v(a67,c69,c68,a66) cre(c68) cre(a66) des(c69) des(a67) 
 (   1.00000) v(v69,c71,c70,v68) cre(v68) des(v69) des(c71) cre(c70) 
 (   1.00000) v(a69,c73,c72,a68) des(c73) cre(c72) cre(a68) des(a69) 
 (  -1.00000) e(a) t1(a,b) cre(a) des(b) 
 (  -1.00000) e(a) t1(a,b) cre(b) des(a) 
 (  -1.00000) e(a) t1(a,b) cre(a) des(b) 
 (  -1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) e(a) t1(a,b) cre(a) des(b) 
 (   1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) e(a) t1(a,b) cre(a) des(b) 
 (   1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) h(a,b) t1(a,c) cre(b) des(c) 
 (   1.00000) h(a,b) t1(a,c) cre(c) des(b) 
 (  -1.00000) h(a,b) t1(a,c) cre(b) des(c) 
 (  -1.00000) h(a,b) t1(a,c) cre(c) des(b) 
 (  -1.00000) t1(a,b) v(a,c,c,d) cre(b) des(d) 
 (  -1.00000) t1(a,b) v(c,d,a,c) cre(d) des(b) 
 (   1.00000) t1(a,b) v(a,c,c,d) cre(b) des(d) 
 (   1.00000) t1(a,b) v(c,d,a,c) cre(d) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   1.00000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   1.00000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   1.00000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   1.00000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (   1.00000) h(a,b) t1(a,c,d,e) cre(b) cre(c) des(d) des(e) 
 (   1.00000) h(a,b) t1(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) h(a,b) t1(a,c,d,e) cre(b) cre(c) des(d) des(e) 
 (   0.50000) h(a,b) t1(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -1.00000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -1.00000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -1.00000) h(a,b) t1(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -1.00000) h(a,b) t1(c,d,a,e) cre(c) cre(d) des(b) des(e) 
 (   1.00000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   1.00000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (  -0.50000) h(a,b) t1(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -0.50000) h(a,b) t1(c,d,a,e) cre(c) cre(d) des(b) des(e) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(a,b,e,f) cre(e) cre(f) des(c) des(d) 
 (   1.00000) t1(a,b,c,d) v(a,e,e,f) cre(c) cre(d) des(b) des(f) 
 (   0.50000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (   0.25000) t1(a,b,c,d) v(e,f,a,b) cre(c) cre(d) des(e) des(f) 
 (   1.00000) t1(a,b,c,d) v(e,f,a,e) cre(b) cre(f) des(c) des(d) 
 (   0.50000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (   0.12500) t1(a,b,c,d) v(a,b,e,f) cre(e) cre(f) des(c) des(d) 
 (   0.50000) t1(a,b,c,d) v(a,e,e,f) cre(c) cre(d) des(b) des(f) 
 (   0.12500) t1(a,b,c,d) v(e,f,a,b) cre(c) cre(d) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,a,e) cre(b) cre(f) des(c) des(d) 
 (  -0.50000) t1(a,b) v(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (  -0.50000) t1(a,b) v(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (   0.50000) t1(a,b) v(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) t1(a,b) v(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -0.50000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (  -0.25000) t1(a,b,c,d) v(c,d,e,f) cre(e) cre(f) des(a) des(b) 
 (  -1.00000) t1(a,b,c,d) v(c,e,e,f) cre(a) cre(b) des(d) des(f) 
 (  -0.25000) t1(a,b,c,d) v(e,f,c,d) cre(a) cre(b) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (  -1.00000) t1(a,b,c,d) v(e,f,c,e) cre(d) cre(f) des(a) des(b) 
 (  -1.00000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (   1.00000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (  -1.00000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (   1.00000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (  -0.12500) t1(a,b,c,d) v(c,d,e,f) cre(e) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(c,e,e,f) cre(a) cre(b) des(d) des(f) 
 (  -0.12500) t1(a,b,c,d) v(e,f,c,d) cre(a) cre(b) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,c,e) cre(d) cre(f) des(a) des(b) 
 (   0.50000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(a,e,f,g) cre(b) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.25000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (  -0.50000) t1(a,b,c,d) v(e,f,a,g) cre(c) cre(d) cre(g) des(b) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(a,e,f,g) cre(b) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.25000) t1(a,b,c,d) v(e,f,a,g) cre(c) cre(d) cre(g) des(b) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (   0.50000) t1(a,b,c,d) v(c,e,f,g) cre(d) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,c,g) cre(a) cre(b) cre(g) des(d) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.50000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.50000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(c,e,f,g) cre(d) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,c,g) cre(a) cre(b) cre(g) des(d) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (  -0.25000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
First Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) v(I,J,L,M) kdelta(U,X) kdelta(V,Y) 
 (  -1.00000) v(I,J,L,M) kdelta(U,Y) kdelta(V,X) 
 (  -1.00000) v(I,U,L,X) kdelta(J,M) kdelta(V,Y) 
 (   1.00000) v(I,U,L,Y) kdelta(J,M) kdelta(V,X) 
 (   1.00000) v(I,U,M,X) kdelta(J,L) kdelta(V,Y) 
 (  -1.00000) v(I,U,M,Y) kdelta(J,L) kdelta(V,X) 
 (   1.00000) v(I,V,L,X) kdelta(J,M) kdelta(U,Y) 
 (  -1.00000) v(I,V,L,Y) kdelta(J,M) kdelta(U,X) 
 (  -1.00000) v(I,V,M,X) kdelta(J,L) kdelta(U,Y) 
 (   1.00000) v(I,V,M,Y) kdelta(J,L) kdelta(U,X) 
 (   1.00000) v(J,U,L,X) kdelta(I,M) kdelta(V,Y) 
 (  -1.00000) v(J,U,L,Y) kdelta(I,M) kdelta(V,X) 
 (  -1.00000) v(J,U,M,X) kdelta(I,L) kdelta(V,Y) 
 (   1.00000) v(J,U,M,Y) kdelta(I,L) kdelta(V,X) 
 (  -1.00000) v(J,V,L,X) kdelta(I,M) kdelta(U,Y) 
 (   1.00000) v(J,V,L,Y) kdelta(I,M) kdelta(U,X) 
 (   1.00000) v(J,V,M,X) kdelta(I,L) kdelta(U,Y) 
 (  -1.00000) v(J,V,M,Y) kdelta(I,L) kdelta(U,X) 
 (   1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(U,X) kdelta(V,Y) 
 (  -1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(U,Y) kdelta(V,X) 
 (  -1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(U,X) kdelta(V,Y) 
 (   1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(U,Y) kdelta(V,X) 
 (  -1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(U,X) kdelta(V,Y) 
 (   1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(U,Y) kdelta(V,X) 
 (   1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(U,X) kdelta(V,Y) 
 (  -1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(U,Y) kdelta(V,X) 
 (   1.00000) kdelta(I,L) v(J,U,M,X) cre(V) des(Y) 
 (  -1.00000) kdelta(I,L) v(J,U,M,Y) cre(V) des(X) 
 (  -1.00000) kdelta(I,L) v(J,V,M,X) cre(U) des(Y) 
 (   1.00000) kdelta(I,L) v(J,V,M,Y) cre(U) des(X) 
 (  -1.00000) kdelta(I,M) v(J,U,L,X) cre(V) des(Y) 
 (   1.00000) kdelta(I,M) v(J,U,L,Y) cre(V) des(X) 
 (   1.00000) kdelta(I,M) v(J,V,L,X) cre(U) des(Y) 
 (  -1.00000) kdelta(I,M) v(J,V,L,Y) cre(U) des(X) 
 (  -1.00000) kdelta(J,L) v(I,U,M,X) cre(V) des(Y) 
 (   1.00000) kdelta(J,L) v(I,U,M,Y) cre(V) des(X) 
 (   1.00000) kdelta(J,L) v(I,V,M,X) cre(U) des(Y) 
 (  -1.00000) kdelta(J,L) v(I,V,M,Y) cre(U) des(X) 
 (   1.00000) kdelta(J,M) v(I,U,L,X) cre(V) des(Y) 
 (  -1.00000) kdelta(J,M) v(I,U,L,Y) cre(V) des(X) 
 (  -1.00000) kdelta(J,M) v(I,V,L,X) cre(U) des(Y) 
 (   1.00000) kdelta(J,M) v(I,V,L,Y) cre(U) des(X) 
 (  -1.00000) kdelta(U,X) v(I,J,L,M) cre(V) des(Y) 
 (   1.00000) kdelta(U,Y) v(I,J,L,M) cre(V) des(X) 
 (   1.00000) kdelta(V,X) v(I,J,L,M) cre(U) des(Y) 
 (  -1.00000) kdelta(V,Y) v(I,J,L,M) cre(U) des(X) 
 (  -1.00000) v(I,U,L,x) kdelta(J,M) kdelta(V,X) cre(x) des(Y) 
 (   1.00000) v(I,U,L,x) kdelta(J,M) kdelta(V,Y) cre(x) des(X) 
 (   1.00000) v(I,U,M,x) kdelta(J,L) kdelta(V,X) cre(x) des(Y) 
 (  -1.00000) v(I,U,M,x) kdelta(J,L) kdelta(V,Y) cre(x) des(X) 
 (   1.00000) v(I,V,L,x) kdelta(J,M) kdelta(U,X) cre(x) des(Y) 
 (  -1.00000) v(I,V,L,x) kdelta(J,M) kdelta(U,Y) cre(x) des(X) 
 (  -1.00000) v(I,V,M,x) kdelta(J,L) kdelta(U,X) cre(x) des(Y) 
 (   1.00000) v(I,V,M,x) kdelta(J,L) kdelta(U,Y) cre(x) des(X) 
 (  -1.00000) v(I,x,L,X) kdelta(J,M) kdelta(U,Y) cre(V) des(x) 
 (   1.00000) v(I,x,L,X) kdelta(J,M) kdelta(V,Y) cre(U) des(x) 
 (   1.00000) v(I,x,L,Y) kdelta(J,M) kdelta(U,X) cre(V) des(x) 
 (  -1.00000) v(I,x,L,Y) kdelta(J,M) kdelta(V,X) cre(U) des(x) 
 (   1.00000) v(I,x,M,X) kdelta(J,L) kdelta(U,Y) cre(V) des(x) 
 (  -1.00000) v(I,x,M,X) kdelta(J,L) kdelta(V,Y) cre(U) des(x) 
 (  -1.00000) v(I,x,M,Y) kdelta(J,L) kdelta(U,X) cre(V) des(x) 
 (   1.00000) v(I,x,M,Y) kdelta(J,L) kdelta(V,X) cre(U) des(x) 
 (   1.00000) v(J,U,L,x) kdelta(I,M) kdelta(V,X) cre(x) des(Y) 
 (  -1.00000) v(J,U,L,x) kdelta(I,M) kdelta(V,Y) cre(x) des(X) 
 (  -1.00000) v(J,U,M,x) kdelta(I,L) kdelta(V,X) cre(x) des(Y) 
 (   1.00000) v(J,U,M,x) kdelta(I,L) kdelta(V,Y) cre(x) des(X) 
 (  -1.00000) v(J,V,L,x) kdelta(I,M) kdelta(U,X) cre(x) des(Y) 
 (   1.00000) v(J,V,L,x) kdelta(I,M) kdelta(U,Y) cre(x) des(X) 
 (   1.00000) v(J,V,M,x) kdelta(I,L) kdelta(U,X) cre(x) des(Y) 
 (  -1.00000) v(J,V,M,x) kdelta(I,L) kdelta(U,Y) cre(x) des(X) 
 (   1.00000) v(J,x,L,X) kdelta(I,M) kdelta(U,Y) cre(V) des(x) 
 (  -1.00000) v(J,x,L,X) kdelta(I,M) kdelta(V,Y) cre(U) des(x) 
 (  -1.00000) v(J,x,L,Y) kdelta(I,M) kdelta(U,X) cre(V) des(x) 
 (   1.00000) v(J,x,L,Y) kdelta(I,M) kdelta(V,X) cre(U) des(x) 
 (  -1.00000) v(J,x,M,X) kdelta(I,L) kdelta(U,Y) cre(V) des(x) 
 (   1.00000) v(J,x,M,X) kdelta(I,L) kdelta(V,Y) cre(U) des(x) 
 (   1.00000) v(J,x,M,Y) kdelta(I,L) kdelta(U,X) cre(V) des(x) 
 (  -1.00000) v(J,x,M,Y) kdelta(I,L) kdelta(V,X) cre(U) des(x) 
 (  -1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(U,X) cre(V) des(Y) 
 (   1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(U,Y) cre(V) des(X) 
 (   1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(V,X) cre(U) des(Y) 
 (  -1.00000) gamma(x,y) v(I,x,L,y) kdelta(J,M) kdelta(V,Y) cre(U) des(X) 
 (   1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(U,X) cre(V) des(Y) 
 (  -1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(U,Y) cre(V) des(X) 
 (  -1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(V,X) cre(U) des(Y) 
 (   1.00000) gamma(x,y) v(I,x,M,y) kdelta(J,L) kdelta(V,Y) cre(U) des(X) 
 (   1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(U,X) cre(V) des(Y) 
 (  -1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(U,Y) cre(V) des(X) 
 (  -1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(V,X) cre(U) des(Y) 
 (   1.00000) gamma(x,y) v(J,x,L,y) kdelta(I,M) kdelta(V,Y) cre(U) des(X) 
 (  -1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(U,X) cre(V) des(Y) 
 (   1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(U,Y) cre(V) des(X) 
 (   1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(V,X) cre(U) des(Y) 
 (  -1.00000) gamma(x,y) v(J,x,M,y) kdelta(I,L) kdelta(V,Y) cre(U) des(X) 
 (  -1.00000) v(I,x,L,y) kdelta(J,M) kdelta(U,X) kdelta(V,Y) cre(y) des(x) 
 (   1.00000) v(I,x,L,y) kdelta(J,M) kdelta(U,Y) kdelta(V,X) cre(y) des(x) 
 (   1.00000) v(I,x,M,y) kdelta(J,L) kdelta(U,X) kdelta(V,Y) cre(y) des(x) 
 (  -1.00000) v(I,x,M,y) kdelta(J,L) kdelta(U,Y) kdelta(V,X) cre(y) des(x) 
 (   1.00000) v(J,x,L,y) kdelta(I,M) kdelta(U,X) kdelta(V,Y) cre(y) des(x) 
 (  -1.00000) v(J,x,L,y) kdelta(I,M) kdelta(U,Y) kdelta(V,X) cre(y) des(x) 
 (  -1.00000) v(J,x,M,y) kdelta(I,L) kdelta(U,X) kdelta(V,Y) cre(y) des(x) 
 (   1.00000) v(J,x,M,y) kdelta(I,L) kdelta(U,Y) kdelta(V,X) cre(y) des(x) 
 (  -1.00000) v(I,J,L,M) cre(U) cre(V) des(X) des(Y) 
 (  -1.00000) kdelta(I,L) v(J,U,M,x) cre(V) cre(x) des(X) des(Y) 
 (   1.00000) kdelta(I,L) v(J,V,M,x) cre(U) cre(x) des(X) des(Y) 
 (  -1.00000) kdelta(I,L) v(J,x,M,X) cre(U) cre(V) des(Y) des(x) 
 (   1.00000) kdelta(I,L) v(J,x,M,Y) cre(U) cre(V) des(X) des(x) 
 (   1.00000) kdelta(I,M) v(J,U,L,x) cre(V) cre(x) des(X) des(Y) 
 (  -1.00000) kdelta(I,M) v(J,V,L,x) cre(U) cre(x) des(X) des(Y) 
 (   1.00000) kdelta(I,M) v(J,x,L,X) cre(U) cre(V) des(Y) des(x) 
 (  -1.00000) kdelta(I,M) v(J,x,L,Y) cre(U) cre(V) des(X) des(x) 
 (   1.00000) kdelta(J,L) v(I,U,M,x) cre(V) cre(x) des(X) des(Y) 
 (  -1.00000) kdelta(J,L) v(I,V,M,x) cre(U) cre(x) des(X) des(Y) 
 (   1.00000) kdelta(J,L) v(I,x,M,X) cre(U) cre(V) des(Y) des(x) 
 (  -1.00000) kdelta(J,L) v(I,x,M,Y) cre(U) cre(V) des(X) des(x) 
 (  -1.00000) kdelta(J,M) v(I,U,L,x) cre(V) cre(x) des(X) des(Y) 
 (   1.00000) kdelta(J,M) v(I,V,L,x) cre(U) cre(x) des(X) des(Y) 
 (  -1.00000) kdelta(J,M) v(I,x,L,X) cre(U) cre(V) des(Y) des(x) 
 (   1.00000) kdelta(J,M) v(I,x,L,Y) cre(U) cre(V) des(X) des(x) 
 (  -1.00000) gamma(x,y) kdelta(I,L) v(J,x,M,y) cre(U) cre(V) des(X) des(Y) 
 (   1.00000) gamma(x,y) kdelta(I,M) v(J,x,L,y) cre(U) cre(V) des(X) des(Y) 
 (   1.00000) gamma(x,y) kdelta(J,L) v(I,x,M,y) cre(U) cre(V) des(X) des(Y) 
 (  -1.00000) gamma(x,y) kdelta(J,M) v(I,x,L,y) cre(U) cre(V) des(X) des(Y) 
 (  -1.00000) v(I,x,L,y) kdelta(J,M) kdelta(U,X) cre(V) cre(y) des(Y) des(x) 
 (   1.00000) v(I,x,L,y) kdelta(J,M) kdelta(U,Y) cre(V) cre(y) des(X) des(x) 
 (   1.00000) v(I,x,L,y) kdelta(J,M) kdelta(V,X) cre(U) cre(y) des(Y) des(x) 
 (  -1.00000) v(I,x,L,y) kdelta(J,M) kdelta(V,Y) cre(U) cre(y) des(X) des(x) 
 (   1.00000) v(I,x,M,y) kdelta(J,L) kdelta(U,X) cre(V) cre(y) des(Y) des(x) 
 (  -1.00000) v(I,x,M,y) kdelta(J,L) kdelta(U,Y) cre(V) cre(y) des(X) des(x) 
 (  -1.00000) v(I,x,M,y) kdelta(J,L) kdelta(V,X) cre(U) cre(y) des(Y) des(x) 
 (   1.00000) v(I,x,M,y) kdelta(J,L) kdelta(V,Y) cre(U) cre(y) des(X) des(x) 
 (   1.00000) v(J,x,L,y) kdelta(I,M) kdelta(U,X) cre(V) cre(y) des(Y) des(x) 
 (  -1.00000) v(J,x,L,y) kdelta(I,M) kdelta(U,Y) cre(V) cre(y) des(X) des(x) 
 (  -1.00000) v(J,x,L,y) kdelta(I,M) kdelta(V,X) cre(U) cre(y) des(Y) des(x) 
 (   1.00000) v(J,x,L,y) kdelta(I,M) kdelta(V,Y) cre(U) cre(y) des(X) des(x) 
 (  -1.00000) v(J,x,M,y) kdelta(I,L) kdelta(U,X) cre(V) cre(y) des(Y) des(x) 
 (   1.00000) v(J,x,M,y) kdelta(I,L) kdelta(U,Y) cre(V) cre(y) des(X) des(x) 
 (   1.00000) v(J,x,M,y) kdelta(I,L) kdelta(V,X) cre(U) cre(y) des(Y) des(x) 
 (  -1.00000) v(J,x,M,y) kdelta(I,L) kdelta(V,Y) cre(U) cre(y) des(X) des(x) 
 (   1.00000) kdelta(I,L) v(J,x,M,y) cre(U) cre(V) cre(y) des(X) des(Y) des(x) 
 (  -1.00000) kdelta(I,M) v(J,x,L,y) cre(U) cre(V) cre(y) des(X) des(Y) des(x) 
 (  -1.00000) kdelta(J,L) v(I,x,M,y) cre(U) cre(V) cre(y) des(X) des(Y) des(x) 
 (   1.00000) kdelta(J,M) v(I,x,L,y) cre(U) cre(V) cre(y) des(X) des(Y) des(x) 

Total terms : 143
SQA automation time :  173.703 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =  np.einsum('IJLM, UX, VY->IJXYLMUV', v_cccc_so, np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('IJLM, UY, VX->IJXYLMUV', v_cccc_so, np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('IULX, JM, VY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('IULY, JM, VX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('IUMX, JL, VY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('IUMY, JL, VX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('IVLX, JM, UY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('IVLY, JM, UX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('IVMX, JL, UY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('IVMY, JL, UX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('JULX, IM, VY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('JULY, IM, VX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('JUMX, IL, VY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('JUMY, IL, VX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('JVLX, IM, UY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('JVLY, IM, UX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('JVMX, IL, UY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('JVMY, IL, UX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('xy, IxLy, JM, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('xy, IxLy, JM, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('xy, IxMy, JL, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('xy, IxMy, JL, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('xy, JxLy, IM, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('xy, JxLy, IM, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('xy, JxMy, IL, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp -= np.einsum('xy, JxMy, IL, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), optimize = True)
temp += np.einsum('IL, JUMX, VY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IL, JUMY, VX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IL, JVMX, UY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IL, JVMY, UX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IM, JULX, VY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IM, JULY, VX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IM, JVLX, UY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IM, JVLY, UX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('JL, IUMX, VY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('JL, IUMY, VX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('JL, IVMX, UY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('JL, IVMY, UX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('JM, IULX, VY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('JM, IULY, VX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('JM, IVLX, UY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('JM, IVLY, UX->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('UX, IJLM, VY->IJXYLMUV', np.identity(ncas_so), v_cccc_so, rdm_ca_so, optimize = True)
temp += np.einsum('UY, IJLM, VX->IJXYLMUV', np.identity(ncas_so), v_cccc_so, rdm_ca_so, optimize = True)
temp += np.einsum('VX, IJLM, UY->IJXYLMUV', np.identity(ncas_so), v_cccc_so, rdm_ca_so, optimize = True)
temp -= np.einsum('VY, IJLM, UX->IJXYLMUV', np.identity(ncas_so), v_cccc_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IULx, JM, VX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IULx, JM, VY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IUMx, JL, VX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IUMx, JL, VY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IVLx, JM, UX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IVLx, JM, UY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IVMx, JL, UX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IVMx, JL, UY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxLX, JM, UY, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxLX, JM, VY, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxLY, JM, UX, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxLY, JM, VX, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxMX, JL, UY, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxMX, JL, VY, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxMY, JL, UX, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxMY, JL, VX, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JULx, IM, VX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JULx, IM, VY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JUMx, IL, VX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JUMx, IL, VY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JVLx, IM, UX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JVLx, IM, UY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JVMx, IL, UX, xY->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JVMx, IL, UY, xX->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxLX, IM, UY, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxLX, IM, VY, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxLY, IM, UX, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxLY, IM, VX, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxMX, IL, UY, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxMX, IL, VY, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxMY, IL, UX, Vx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxMY, IL, VX, Ux->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IxLy, JM, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, IxLy, JM, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, IxLy, JM, VX, UY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IxLy, JM, VY, UX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, IxMy, JL, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IxMy, JL, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IxMy, JL, VX, UY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, IxMy, JL, VY, UX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, JxLy, IM, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, JxLy, IM, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, JxLy, IM, VX, UY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, JxLy, IM, VY, UX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, JxMy, IL, UX, VY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, JxMy, IL, UY, VX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('xy, JxMy, IL, VX, UY->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, JxMy, IL, VY, UX->IJXYLMUV', rdm_ca_so, v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxLy, JM, UX, VY, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxLy, JM, UY, VX, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('IxMy, JL, UX, VY, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IxMy, JL, UY, VX, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxLy, IM, UX, VY, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxLy, IM, UY, VX, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('JxMy, IL, UX, VY, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp += np.einsum('JxMy, IL, UY, VX, yx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
temp -= np.einsum('IJLM, UVXY->IJXYLMUV', v_cccc_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IL, JUMx, VxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IL, JVMx, UxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IL, JxMX, UVYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IL, JxMY, UVXx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IM, JULx, VxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IM, JVLx, UxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IM, JxLX, UVYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IM, JxLY, UVXx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('JL, IUMx, VxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('JL, IVMx, UxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('JL, IxMX, UVYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('JL, IxMY, UVXx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('JM, IULx, VxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('JM, IVLx, UxXY->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('JM, IxLX, UVYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('JM, IxLY, UVXx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, IL, JxMy, UVXY->IJXYLMUV', rdm_ca_so, np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, IM, JxLy, UVXY->IJXYLMUV', rdm_ca_so, np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, JL, IxMy, UVXY->IJXYLMUV', rdm_ca_so, np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, JM, IxLy, UVXY->IJXYLMUV', rdm_ca_so, np.identity(ncore_so), v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxLy, JM, UX, VyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('IxLy, JM, UY, VyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('IxLy, JM, VX, UyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxLy, JM, VY, UyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('IxMy, JL, UX, VyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxMy, JL, UY, VyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('IxMy, JL, VX, UyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('IxMy, JL, VY, UyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('JxLy, IM, UX, VyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('JxLy, IM, UY, VyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('JxLy, IM, VX, UyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('JxLy, IM, VY, UyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('JxMy, IL, UX, VyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('JxMy, IL, UY, VyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('JxMy, IL, VX, UyYx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp -= np.einsum('JxMy, IL, VY, UyXx->IJXYLMUV', v_caca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
temp += np.einsum('IL, JxMy, UVyXYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('IM, JxLy, UVyXYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('JL, IxMy, UVyXYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_cccaaa_so, optimize = True)
temp += np.einsum('JM, IxLy, UVyXYx->IJXYLMUV', np.identity(ncore_so), v_caca_so, rdm_cccaaa_so, optimize = True)
