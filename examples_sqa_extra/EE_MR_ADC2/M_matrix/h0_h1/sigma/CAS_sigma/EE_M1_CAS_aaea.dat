
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   0.50000) X(x,y,a,z) h(w,a) cre(z) cre(w) des(x) des(y) 
 (   0.25000) X(x,y,a,z) v(w,u,z,a) cre(w) cre(u) des(x) des(y) 
 (   0.50000) X(x,y,a,z) v(i,w,i,a) cre(z) cre(w) des(x) des(y) 
 (   0.50000) X(x,y,a,z) e(a) t1(w,a) cre(z) cre(w) des(x) des(y) 
 (  -0.25000) X(x,y,a,z) e(a) t1(w,u,a,z) cre(w) cre(u) des(x) des(y) 
 (  -0.25000) X(x,y,a,z) h(z,w) t1(u,v,a,w) cre(u) cre(v) des(x) des(y) 
 (  -0.50000) X(x,y,a,z) h(w,u) t1(w,a) cre(z) cre(u) des(x) des(y) 
 (   0.50000) X(x,y,a,z) h(w,u) t1(w,v,a,z) cre(u) cre(v) des(x) des(y) 
 (  -0.25000) X(x,y,a,z) t1(w,a) v(z,w,u,v) cre(u) cre(v) des(x) des(y) 
 (  -0.50000) X(x,y,a,z) t1(w,a) v(i,u,i,w) cre(z) cre(u) des(x) des(y) 
 (   0.12500) X(x,y,a,z) t1(w,u,a,z) v(w,u,v,s) cre(v) cre(s) des(x) des(y) 
 (  -0.50000) X(x,y,a,z) t1(w,u,a,z) v(i,v,i,w) cre(u) cre(v) des(x) des(y) 
 (  -0.25000) X(x,y,a,z) t1(w,u,a,v) v(i,v,i,z) cre(w) cre(u) des(x) des(y) 
 (  -0.25000) X(x,y,a,z) v(u,v,w,a) cre(z) cre(u) cre(v) des(x) des(y) des(w) 
 (   0.25000) X(x,y,a,z) e(a) t1(w,u,a,v) cre(z) cre(w) cre(u) des(x) des(y) des(v) 
 (  -0.50000) X(x,y,a,z) h(w,u) t1(w,v,a,s) cre(z) cre(u) cre(v) des(x) des(y) des(s) 
 (   0.25000) X(x,y,a,z) h(w,u) t1(v,s,a,w) cre(z) cre(v) cre(s) des(x) des(y) des(u) 
 (  -0.25000) X(x,y,a,z) t1(w,a) v(w,u,v,s) cre(z) cre(v) cre(s) des(x) des(y) des(u) 
 (  -0.25000) X(x,y,a,z) t1(w,u,a,z) v(w,v,s,t) cre(u) cre(s) cre(t) des(x) des(y) des(v) 
 (  -0.25000) X(x,y,a,z) t1(w,u,a,v) v(z,w,s,t) cre(u) cre(s) cre(t) des(x) des(y) des(v) 
 (  -0.25000) X(x,y,a,z) t1(w,u,a,v) v(z,s,v,t) cre(w) cre(u) cre(t) des(x) des(y) des(s) 
 (  -0.12500) X(x,y,a,z) t1(w,u,a,v) v(w,u,s,t) cre(z) cre(s) cre(t) des(x) des(y) des(v) 
 (   0.25000) X(x,y,a,z) t1(w,u,a,v) v(i,v,i,s) cre(z) cre(w) cre(u) des(x) des(y) des(s) 
 (   0.50000) X(x,y,a,z) t1(w,u,a,v) v(i,s,i,w) cre(z) cre(u) cre(s) des(x) des(y) des(v) 
 (  -0.25000) X(x,y,a,z) t1(w,u,a,v) v(w,s,t,r) cre(z) cre(u) cre(t) cre(r) des(x) des(y) des(v) des(s) 
 (  -0.12500) X(x,y,a,z) t1(w,u,a,v) v(s,t,v,r) cre(z) cre(w) cre(u) cre(r) des(x) des(y) des(s) des(t) 

Total terms : 26
SQA automation time :  0.174 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp = 0.5 * np.einsum('xyaz, wa, Izwxy->I', X, h_ae_so, trdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('xyaz, wuza, Iwuxy->I', X, v_aaae_so, trdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyaz, iwia, Izwxy->I', X, v_cace_so, trdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyaz, a, wa, Izwxy->I', X, e_extern_so, t1_ae, trdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, a, wuaz, Iwuxy->I', X, e_extern_so, t1_aaea, trdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, zw, uvaw, Iuvxy->I', X, h_aa_so, t1_aaea, trdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyaz, wu, wa, Izuxy->I', X, h_aa_so, t1_ae, trdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyaz, wu, wvaz, Iuvxy->I', X, h_aa_so, t1_aaea, trdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wa, zwuv, Iuvxy->I', X, t1_ae, v_aaaa_so, trdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyaz, wa, iuiw, Izuxy->I', X, t1_ae, v_caca_so, trdm_ccaa_so, optimize = True)
temp += 0.125 * np.einsum('xyaz, wuaz, wuvs, Ivsxy->I', X, t1_aaea, v_aaaa_so, trdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyaz, wuaz, iviw, Iuvxy->I', X, t1_aaea, v_caca_so, trdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wuav, iviz, Iwuxy->I', X, t1_aaea, v_caca_so, trdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, uvwa, Izuvxyw->I', X, v_aaae_so, trdm_cccaaa_so, optimize = True)
temp += 0.25 * np.einsum('xyaz, a, wuav, Izwuxyv->I', X, e_extern_so, t1_aaea, trdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyaz, wu, wvas, Izuvxys->I', X, h_aa_so, t1_aaea, trdm_cccaaa_so, optimize = True)
temp += 0.25 * np.einsum('xyaz, wu, vsaw, Izvsxyu->I', X, h_aa_so, t1_aaea, trdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wa, wuvs, Izvsxyu->I', X, t1_ae, v_aaaa_so, trdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wuaz, wvst, Iustxyv->I', X, t1_aaea, v_aaaa_so, trdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wuav, zwst, Iustxyv->I', X, t1_aaea, v_aaaa_so, trdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wuav, zsvt, Iwutxys->I', X, t1_aaea, v_aaaa_so, trdm_cccaaa_so, optimize = True)
temp -= 0.125 * np.einsum('xyaz, wuav, wust, Izstxyv->I', X, t1_aaea, v_aaaa_so, trdm_cccaaa_so, optimize = True)
temp += 0.25 * np.einsum('xyaz, wuav, ivis, Izwuxys->I', X, t1_aaea, v_caca_so, trdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xyaz, wuav, isiw, Izusxyv->I', X, t1_aaea, v_caca_so, trdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyaz, wuav, wstr, Izutrxyvs->I', X, t1_aaea, v_aaaa_so, trdm_ccccaaaa_so, optimize = True)
temp -= 0.125 * np.einsum('xyaz, wuav, stvr, Izwurxyst->I', X, t1_aaea, v_aaaa_so, trdm_ccccaaaa_so, optimize = True)
