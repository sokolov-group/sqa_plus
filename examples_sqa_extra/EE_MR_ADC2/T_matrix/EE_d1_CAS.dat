
------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   2.00000) d_ca_so(i,x) t1(i,x) 
 (   2.00000) d_ce_so(i,a) t1(i,a) 
 (   1.00000) d_ae_so(x,a) t1(y,a) cre(x) des(y) 
 (   1.00000) d_ae_so(x,a) t1(y,a) cre(y) des(x) 
 (  -1.00000) d_ca_so(i,x) t1(i,y) cre(x) des(y) 
 (  -1.00000) d_ca_so(i,x) t1(i,y) cre(y) des(x) 
 (   1.00000) d_ca_so(i,x) t1(i,y,x,z) cre(y) des(z) 
 (   1.00000) d_ca_so(i,x) t1(i,y,x,z) cre(z) des(y) 
 (   1.00000) d_ce_so(i,a) t1(i,x,a,y) cre(x) des(y) 
 (   1.00000) d_ce_so(i,a) t1(i,x,a,y) cre(y) des(x) 
 (  -0.50000) d_ae_so(x,a) t1(y,z,a,w) cre(x) cre(w) des(y) des(z) 
 (  -0.50000) d_ae_so(x,a) t1(y,z,a,w) cre(y) cre(z) des(x) des(w) 
 (   0.50000) d_ca_so(i,x) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) d_ca_so(i,x) t1(i,y,z,w) cre(z) cre(w) des(x) des(y) 

Total terms : 14
SQA automation time :  0.027 seconds
--------------------------------- WARNING ---------------------------------
Terms w/o transRDM tensor in the expression will be removed. Set "rm_trans_rdm_const"
flag to FALSE to preserve terms

2 terms removed:
 (   2.00000) d_ca_so(i,x) t1(i,x) 
 (   2.00000) d_ce_so(i,a) t1(i,a) 
---------------------------------------------------------------------------
Remaining terms: 12

--------------------------------- WARNING ---------------------------------
Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "rm_core_int" flag to FALSE to preserve terms

0 terms removed:
---------------------------------------------------------------------------
Remaining terms: 12

temp  = einsum('xa,ya,Pxy->P', d_ae_so, t1_ae, trdm_ca_so, optimize = einsum_type)
temp += einsum('xa,ya,Pyx->P', d_ae_so, t1_ae, trdm_ca_so, optimize = einsum_type)
temp -= einsum('ix,iy,Pxy->P', d_ca_so, t1_ca, trdm_ca_so, optimize = einsum_type)
temp -= einsum('ix,iy,Pyx->P', d_ca_so, t1_ca, trdm_ca_so, optimize = einsum_type)
temp += einsum('ix,iyxz,Pyz->P', d_ca_so, t1_caaa, trdm_ca_so, optimize = einsum_type)
temp += einsum('ix,iyxz,Pzy->P', d_ca_so, t1_caaa, trdm_ca_so, optimize = einsum_type)
temp += einsum('ia,ixay,Pxy->P', d_ce_so, t1_caea, trdm_ca_so, optimize = einsum_type)
temp += einsum('ia,ixay,Pyx->P', d_ce_so, t1_caea, trdm_ca_so, optimize = einsum_type)
temp -= 0.5 * einsum('xa,yzaw,Pxwyz->P', d_ae_so, t1_aaea, trdm_ccaa_so, optimize = einsum_type)
temp -= 0.5 * einsum('xa,yzaw,Pyzxw->P', d_ae_so, t1_aaea, trdm_ccaa_so, optimize = einsum_type)
temp += 0.5 * einsum('ix,iyzw,Pxyzw->P', d_ca_so, t1_caaa, trdm_ccaa_so, optimize = einsum_type)
temp += 0.5 * einsum('ix,iyzw,Pzwxy->P', d_ca_so, t1_caaa, trdm_ccaa_so, optimize = einsum_type)
