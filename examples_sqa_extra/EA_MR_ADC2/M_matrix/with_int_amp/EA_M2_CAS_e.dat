
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(2) ----------------------
First Commutation: Done ...
Perturbation(V) type = All 
Done ...
Second Commutation: Done ...
Third Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) e(B) t2(x,B) cre(x) 
 (  -1.00000) h(i,B) t1(i,x) cre(x) 
 (  -1.00000) h(i,x) t1(i,B) cre(x) 
 (  -1.00000) h(i,x) t1(i,y,B,x) cre(y) 
 (  -1.00000) h(i,a) t1(i,x,B,a) cre(x) 
 (  -1.00000) h(x,y) t2(x,B) cre(y) 
 (   1.00000) t1(i,B) v(i,j,j,x) cre(x) 
 (   1.00000) t1(i,x) v(i,y,x,B) cre(y) 
 (   1.00000) t1(i,x) v(i,B,x,y) cre(y) 
 (   1.00000) t1(i,x) v(i,j,j,B) cre(x) 
 (   1.00000) t1(i,x,B,y) v(i,j,j,y) cre(x) 
 (   1.00000) t1(i,x,B,a) v(i,j,j,a) cre(x) 
 (   0.50000) t1(i,x,y,z) v(i,B,y,z) cre(x) 
 (  -1.00000) t1(i,x,a,y) v(i,B,y,a) cre(x) 
 (   0.50000) t1(i,x,a,b) v(i,B,a,b) cre(x) 
 (   0.50000) t1(i,j,B,x) v(i,j,x,y) cre(y) 
 (  -0.50000) t1(i,j,B,a) v(i,j,x,a) cre(x) 
 (  -0.50000) t1(i,j,x,y) v(i,j,x,B) cre(y) 
 (   0.50000) t1(i,j,a,x) v(i,j,B,a) cre(x) 
 (  -1.00000) t1(i,a) v(i,B,x,a) cre(x) 
 (  -1.00000) t1(i,a) v(i,x,B,a) cre(x) 
 (  -1.00000) t2(x,B) v(i,y,i,x) cre(y) 
 (  -0.50000) e(B) t1(i,B) t1(i,x) cre(x) 
 (  -0.50000) e(B) t1(i,x,B,y) t1(i,y) cre(x) 
 (  -0.50000) e(B) t1(i,x,B,a) t1(i,a) cre(x) 
 (   0.25000) e(B) t1(i,j,B,x) t1(i,j,x,y) cre(y) 
 (   0.25000) e(B) t1(i,j,B,a) t1(i,j,a,x) cre(x) 
 (   1.00000) e(i) t1(i,x) t1(i,B) cre(x) 
 (   0.50000) e(i) t1(i,x) t1(i,y,B,x) cre(y) 
 (   0.50000) e(i) t1(i,x,B,y) t1(i,y) cre(x) 
 (   0.50000) e(i) t1(i,x,B,a) t1(i,a) cre(x) 
 (  -0.50000) e(i) t1(i,j,B,x) t1(i,j,x,y) cre(y) 
 (  -0.50000) e(i) t1(i,j,B,a) t1(i,j,a,x) cre(x) 
 (  -0.50000) e(i) t1(i,j,x,y) t1(i,j,B,x) cre(y) 
 (  -0.50000) e(i) t1(i,j,a,x) t1(i,j,B,a) cre(x) 
 (   0.50000) e(i) t1(i,a) t1(i,x,B,a) cre(x) 
 (  -1.00000) e(a) t1(i,x,B,a) t1(i,a) cre(x) 
 (   0.50000) e(a) t1(i,j,B,a) t1(i,j,a,x) cre(x) 
 (  -1.00000) gamma(x,y) t1(z,a) v(x,B,y,a) cre(z) 
 (  -0.50000) h(x,y) t1(i,x) t1(i,B) cre(y) 
 (  -1.00000) h(x,y) t1(i,x) t1(i,z,B,y) cre(z) 
 (   0.50000) h(x,y) t1(i,x,B,z) t1(i,z) cre(y) 
 (   0.50000) h(x,y) t1(i,x,B,a) t1(i,a) cre(y) 
 (   0.50000) h(x,y) t1(i,j,B,x) t1(i,j,y,z) cre(z) 
 (  -0.25000) h(x,y) t1(i,j,x,z) t1(i,j,B,z) cre(y) 
 (   0.25000) h(x,y) t1(i,j,a,x) t1(i,j,B,a) cre(y) 
 (   0.25000) v(x,y,z,w) t1(i,j,x,y) t1(i,j,B,z) cre(w) 
 (  -0.50000) v(i,x,i,y) t1(j,y) t1(j,B) cre(x) 
 (   0.50000) v(i,x,i,y) t1(j,y,B,z) t1(j,z) cre(x) 
 (   0.50000) v(i,x,i,y) t1(j,y,B,a) t1(j,a) cre(x) 
 (  -1.00000) v(i,x,i,y) t1(j,z,B,x) t1(j,y) cre(z) 
 (   0.50000) v(i,x,i,y) t1(j,k,B,x) t1(j,k,y,z) cre(z) 
 (  -0.25000) v(i,x,i,y) t1(j,k,y,z) t1(j,k,B,z) cre(x) 
 (   0.25000) v(i,x,i,y) t1(j,k,a,y) t1(j,k,B,a) cre(x) 
 (   0.50000) e(B) t2(x,y,B,z) cre(x) cre(y) des(z) 
 (  -0.50000) h(i,B) t1(i,x,y,z) cre(y) cre(z) des(x) 
 (  -1.00000) h(i,x) t1(i,y,B,z) cre(x) cre(y) des(z) 
 (   0.50000) h(x,a) t1(y,z,B,a) cre(y) cre(z) des(x) 
 (  -1.00000) h(x,y) t2(x,z,B,w) cre(y) cre(z) des(w) 
 (   0.50000) h(x,y) t2(z,w,B,x) cre(z) cre(w) des(y) 
 (  -0.50000) t1(i,B) v(i,x,y,z) cre(y) cre(z) des(x) 
 (   0.50000) t1(x,y,B,a) v(i,z,i,a) cre(x) cre(y) des(z) 
 (   0.50000) t1(x,y,a,z) v(w,B,z,a) cre(x) cre(y) des(w) 
 (  -0.25000) t1(x,y,a,b) v(z,B,a,b) cre(x) cre(y) des(z) 
 (   0.50000) t1(i,x) v(i,B,y,z) cre(y) cre(z) des(x) 
 (   1.00000) t1(i,x) v(i,z,y,B) cre(x) cre(z) des(y) 
 (  -1.00000) t1(i,x,B,y) v(i,z,y,w) cre(x) cre(w) des(z) 
 (  -1.00000) t1(i,x,B,y) v(i,j,j,z) cre(x) cre(z) des(y) 
 (   1.00000) t1(i,x,B,a) v(i,y,z,a) cre(x) cre(z) des(y) 
 (  -1.00000) t1(i,x,y,z) v(i,B,y,w) cre(x) cre(w) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,w,y,B) cre(z) cre(w) des(x) 
 (   0.50000) t1(i,x,y,z) v(i,j,j,B) cre(y) cre(z) des(x) 
 (   1.00000) t1(i,x,a,y) v(i,B,z,a) cre(x) cre(z) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,B,a) cre(y) cre(z) des(x) 
 (   0.25000) t1(i,j,B,x) v(i,j,y,z) cre(y) cre(z) des(x) 
 (  -0.25000) t1(i,j,x,y) v(i,j,z,B) cre(x) cre(y) des(z) 
 (   0.50000) t1(x,a) v(y,z,B,a) cre(y) cre(z) des(x) 
 (   1.00000) t1(x,a) v(y,B,z,a) cre(x) cre(z) des(y) 
 (  -0.50000) t2(x,B) v(x,y,z,w) cre(z) cre(w) des(y) 
 (  -0.25000) t2(x,y,B,z) v(x,y,w,u) cre(w) cre(u) des(z) 
 (   0.50000) t2(x,y,B,z) v(i,z,i,w) cre(x) cre(y) des(w) 
 (   1.00000) t2(x,y,B,z) v(i,w,i,x) cre(y) cre(w) des(z) 
 (  -0.25000) e(B) t1(i,B) t1(i,x,y,z) cre(y) cre(z) des(x) 
 (   0.25000) e(B) t1(x,y,B,a) t1(z,a) cre(x) cre(y) des(z) 
 (   0.50000) e(B) t1(i,x,B,y) t1(i,z) cre(x) cre(z) des(y) 
 (  -0.50000) e(B) t1(i,x,B,y) t1(i,z,y,w) cre(x) cre(w) des(z) 
 (  -0.50000) e(B) t1(i,x,B,a) t1(i,y,a,z) cre(x) cre(z) des(y) 
 (   0.12500) e(B) t1(i,j,B,x) t1(i,j,y,z) cre(y) cre(z) des(x) 
 (   1.00000) e(i) t1(i,x) t1(i,y,B,z) cre(x) cre(y) des(z) 
 (  -0.25000) e(i) t1(i,x,B,y) t1(i,x,z,w) cre(z) cre(w) des(y) 
 (   0.50000) e(i) t1(i,x,B,y) t1(i,z,y,w) cre(x) cre(w) des(z) 
 (   0.50000) e(i) t1(i,x,B,a) t1(i,y,a,z) cre(x) cre(z) des(y) 
 (   0.50000) e(i) t1(i,x,y,z) t1(i,B) cre(y) cre(z) des(x) 
 (   0.25000) e(i) t1(i,x,y,z) t1(i,x,B,w) cre(y) cre(z) des(w) 
 (  -0.50000) e(i) t1(i,x,y,z) t1(i,w,B,y) cre(z) cre(w) des(x) 
 (  -0.50000) e(i) t1(i,x,a,y) t1(i,z,B,a) cre(y) cre(z) des(x) 
 (  -0.25000) e(i) t1(i,j,B,x) t1(i,j,y,z) cre(y) cre(z) des(x) 
 (  -0.25000) e(i) t1(i,j,x,y) t1(i,j,B,z) cre(x) cre(y) des(z) 
 (   0.50000) e(a) t1(x,y,B,a) t1(z,a) cre(x) cre(y) des(z) 
 (  -1.00000) e(a) t1(i,x,B,a) t1(i,y,a,z) cre(x) cre(z) des(y) 
 (  -0.50000) gamma(x,y) t1(z,w,a,u) v(x,B,y,a) cre(z) cre(w) des(u) 
 (  -0.50000) h(x,y) t1(x,z,B,a) t1(w,a) cre(y) cre(z) des(w) 
 (  -0.50000) h(x,y) t1(i,x) t1(i,z,B,w) cre(y) cre(z) des(w) 
 (  -0.25000) h(x,y) t1(x,a) t1(z,w,B,a) cre(z) cre(w) des(y) 
 (  -0.50000) h(x,y) t1(i,x,B,z) t1(i,w) cre(y) cre(w) des(z) 
 (   0.50000) h(x,y) t1(i,x,B,z) t1(i,w,z,u) cre(y) cre(u) des(w) 
 (   0.50000) h(x,y) t1(i,x,B,a) t1(i,z,a,w) cre(y) cre(w) des(z) 
 (   0.25000) h(x,y) t1(i,x,z,w) t1(i,B) cre(z) cre(w) des(y) 
 (  -0.50000) h(x,y) t1(i,x,z,w) t1(i,u,B,z) cre(w) cre(u) des(y) 
 (  -0.50000) h(x,y) t1(i,x,a,z) t1(i,w,B,a) cre(z) cre(w) des(y) 
 (   0.50000) h(x,y) t1(i,z,B,x) t1(i,w) cre(z) cre(w) des(y) 
 (  -1.00000) h(x,y) t1(i,z,B,x) t1(i,w,y,u) cre(z) cre(u) des(w) 
 (  -0.50000) h(x,y) t1(i,z,x,w) t1(i,B) cre(y) cre(w) des(z) 
 (  -0.50000) h(x,y) t1(i,z,x,w) t1(i,u,B,w) cre(y) cre(u) des(z) 
 (   0.50000) h(x,y) t1(i,z,a,x) t1(i,w,B,a) cre(y) cre(w) des(z) 
 (   0.12500) h(x,y) t1(i,j,B,x) t1(i,j,z,w) cre(z) cre(w) des(y) 
 (   0.25000) h(x,y) t1(i,j,x,z) t1(i,j,B,w) cre(y) cre(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(x,y,B,a) t1(u,a) cre(z) cre(w) des(u) 
 (  -0.25000) v(x,y,z,w) t1(i,x) t1(i,B) cre(z) cre(w) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,x) t1(i,y,B,u) cre(z) cre(w) des(u) 
 (   1.00000) v(x,y,z,w) t1(i,x) t1(i,u,B,z) cre(w) cre(u) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,x,B,u) t1(i,u) cre(z) cre(w) des(y) 
 (  -0.25000) v(x,y,z,w) t1(i,x,B,u) t1(i,v,y,u) cre(z) cre(w) des(v) 
 (   0.25000) v(x,y,z,w) t1(i,x,B,a) t1(i,a) cre(z) cre(w) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,x,B,a) t1(i,u,a,y) cre(z) cre(w) des(u) 
 (  -0.12500) v(x,y,z,w) t1(i,u,x,y) t1(i,B) cre(z) cre(w) des(u) 
 (   0.50000) v(x,y,z,w) t1(i,u,x,y) t1(i,v,B,z) cre(w) cre(v) des(u) 
 (   0.06250) v(x,y,z,w) t1(i,j,x,y) t1(i,j,B,u) cre(z) cre(w) des(u) 
 (  -0.50000) v(x,y,z,w) t1(i,j,x,u) t1(i,j,B,z) cre(w) cre(u) des(y) 
 (  -0.12500) v(x,y,z,w) t1(i,j,x,u) t1(i,j,B,u) cre(z) cre(w) des(y) 
 (   0.12500) v(x,y,z,w) t1(i,j,a,x) t1(i,j,B,a) cre(z) cre(w) des(y) 
 (  -0.25000) v(i,x,i,y) t1(x,a) t1(z,w,B,a) cre(z) cre(w) des(y) 
 (  -0.50000) v(i,x,i,y) t1(y,z,B,a) t1(w,a) cre(x) cre(z) des(w) 
 (  -0.50000) v(i,x,i,y) t1(j,y) t1(j,z,B,w) cre(x) cre(z) des(w) 
 (   0.25000) v(i,x,i,y) t1(j,x,z,w) t1(j,B) cre(z) cre(w) des(y) 
 (  -0.50000) v(i,x,i,y) t1(j,x,z,w) t1(j,u,B,z) cre(w) cre(u) des(y) 
 (  -0.50000) v(i,x,i,y) t1(j,x,a,z) t1(j,w,B,a) cre(z) cre(w) des(y) 
 (  -0.50000) v(i,x,i,y) t1(j,y,B,z) t1(j,w) cre(x) cre(w) des(z) 
 (   0.50000) v(i,x,i,y) t1(j,y,B,z) t1(j,w,z,u) cre(x) cre(u) des(w) 
 (   0.50000) v(i,x,i,y) t1(j,y,B,a) t1(j,z,a,w) cre(x) cre(w) des(z) 
 (   0.50000) v(i,x,i,y) t1(j,z,B,x) t1(j,w) cre(z) cre(w) des(y) 
 (  -1.00000) v(i,x,i,y) t1(j,z,B,x) t1(j,w,y,u) cre(z) cre(u) des(w) 
 (  -0.50000) v(i,x,i,y) t1(j,z,y,w) t1(j,B) cre(x) cre(w) des(z) 
 (  -0.50000) v(i,x,i,y) t1(j,z,y,w) t1(j,u,B,w) cre(x) cre(u) des(z) 
 (   0.50000) v(i,x,i,y) t1(j,z,a,y) t1(j,w,B,a) cre(x) cre(w) des(z) 
 (   0.12500) v(i,x,i,y) t1(j,k,B,x) t1(j,k,z,w) cre(z) cre(w) des(y) 
 (   0.25000) v(i,x,i,y) t1(j,k,y,z) t1(j,k,B,w) cre(x) cre(z) des(w) 
 (   0.25000) t1(x,y,B,a) v(z,w,u,a) cre(x) cre(y) cre(u) des(z) des(w) 
 (  -0.25000) t1(x,y,a,z) v(w,u,B,a) cre(z) cre(w) cre(u) des(x) des(y) 
 (  -0.50000) t1(x,y,a,z) v(w,B,u,a) cre(x) cre(y) cre(u) des(z) des(w) 
 (  -0.50000) t1(i,x,B,y) v(i,z,w,u) cre(x) cre(w) cre(u) des(y) des(z) 
 (  -0.25000) t1(i,x,y,z) v(i,B,w,u) cre(x) cre(w) cre(u) des(y) des(z) 
 (  -0.50000) t1(i,x,y,z) v(i,u,w,B) cre(y) cre(z) cre(u) des(x) des(w) 
 (  -0.50000) t2(x,y,B,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) t2(x,y,B,z) v(w,u,z,v) cre(x) cre(y) cre(v) des(w) des(u) 
 (  -0.12500) e(B) t1(x,y,B,a) t1(z,w,a,u) cre(x) cre(y) cre(u) des(z) des(w) 
 (  -0.25000) e(B) t1(i,x,B,y) t1(i,z,w,u) cre(x) cre(w) cre(u) des(y) des(z) 
 (  -0.50000) e(i) t1(i,x,y,z) t1(i,w,B,u) cre(y) cre(z) cre(w) des(x) des(u) 
 (  -0.25000) e(a) t1(x,y,B,a) t1(z,w,a,u) cre(x) cre(y) cre(u) des(z) des(w) 
 (   0.25000) h(x,y) t1(x,z,B,a) t1(w,u,a,v) cre(y) cre(z) cre(v) des(w) des(u) 
 (   0.25000) h(x,y) t1(x,z,a,w) t1(u,v,B,a) cre(w) cre(u) cre(v) des(y) des(z) 
 (  -0.12500) h(x,y) t1(z,w,a,x) t1(u,v,B,a) cre(y) cre(u) cre(v) des(z) des(w) 
 (   0.25000) h(x,y) t1(i,x,B,z) t1(i,w,u,v) cre(y) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) h(x,y) t1(i,x,z,w) t1(i,u,B,v) cre(z) cre(w) cre(u) des(y) des(v) 
 (  -0.25000) h(x,y) t1(i,z,B,x) t1(i,w,u,v) cre(z) cre(u) cre(v) des(y) des(w) 
 (   0.50000) h(x,y) t1(i,z,x,w) t1(i,u,B,v) cre(y) cre(w) cre(u) des(z) des(v) 
 (   0.06250) v(x,y,z,w) t1(x,y,B,a) t1(u,v,a,s) cre(z) cre(w) cre(s) des(u) des(v) 
 (   0.25000) v(x,y,z,w) t1(x,u,B,a) t1(v,a) cre(z) cre(w) cre(u) des(y) des(v) 
 (  -0.12500) v(x,y,z,w) t1(x,u,B,a) t1(v,s,a,y) cre(z) cre(w) cre(u) des(v) des(s) 
 (   0.25000) v(x,y,z,w) t1(i,x) t1(i,u,B,v) cre(z) cre(w) cre(u) des(y) des(v) 
 (   0.06250) v(x,y,z,w) t1(z,w,a,u) t1(v,s,B,a) cre(u) cre(v) cre(s) des(x) des(y) 
 (   0.12500) v(x,y,z,w) t1(z,a) t1(u,v,B,a) cre(w) cre(u) cre(v) des(x) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,x,B,u) t1(i,v) cre(z) cre(w) cre(v) des(y) des(u) 
 (   0.25000) v(x,y,z,w) t1(i,x,B,u) t1(i,v,y,s) cre(z) cre(w) cre(s) des(u) des(v) 
 (  -0.25000) v(x,y,z,w) t1(i,x,B,u) t1(i,v,u,s) cre(z) cre(w) cre(s) des(y) des(v) 
 (  -0.25000) v(x,y,z,w) t1(i,x,B,a) t1(i,u,a,v) cre(z) cre(w) cre(v) des(y) des(u) 
 (  -0.12500) v(x,y,z,w) t1(i,z,u,v) t1(i,B) cre(w) cre(u) cre(v) des(x) des(y) 
 (  -0.12500) v(x,y,z,w) t1(i,z,u,v) t1(i,s,B,w) cre(u) cre(v) cre(s) des(x) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,z,u,v) t1(i,s,B,u) cre(w) cre(v) cre(s) des(x) des(y) 
 (   0.25000) v(x,y,z,w) t1(i,z,a,u) t1(i,v,B,a) cre(w) cre(u) cre(v) des(x) des(y) 
 (  -0.25000) v(x,y,z,w) t1(i,u,B,z) t1(i,v) cre(w) cre(u) cre(v) des(x) des(y) 
 (   0.12500) v(x,y,z,w) t1(i,u,x,y) t1(i,v,B,s) cre(z) cre(w) cre(v) des(u) des(s) 
 (   0.25000) v(x,y,z,w) t1(i,u,x,v) t1(i,B) cre(z) cre(w) cre(v) des(y) des(u) 
 (   1.00000) v(x,y,z,w) t1(i,u,x,v) t1(i,s,B,z) cre(w) cre(v) cre(s) des(y) des(u) 
 (   0.25000) v(x,y,z,w) t1(i,u,x,v) t1(i,s,B,v) cre(z) cre(w) cre(s) des(y) des(u) 
 (  -0.25000) v(x,y,z,w) t1(i,u,a,x) t1(i,v,B,a) cre(z) cre(w) cre(v) des(y) des(u) 
 (  -0.06250) v(x,y,z,w) t1(i,j,B,z) t1(i,j,u,v) cre(w) cre(u) cre(v) des(x) des(y) 
 (  -0.12500) v(x,y,z,w) t1(i,j,x,u) t1(i,j,B,v) cre(z) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(i,x,i,y) t1(x,z,a,w) t1(u,v,B,a) cre(w) cre(u) cre(v) des(y) des(z) 
 (   0.25000) v(i,x,i,y) t1(y,z,B,a) t1(w,u,a,v) cre(x) cre(z) cre(v) des(w) des(u) 
 (  -0.12500) v(i,x,i,y) t1(z,w,a,y) t1(u,v,B,a) cre(x) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(i,x,i,y) t1(j,x,z,w) t1(j,u,B,v) cre(z) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(i,x,i,y) t1(j,y,B,z) t1(j,w,u,v) cre(x) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(i,x,i,y) t1(j,z,B,x) t1(j,w,u,v) cre(z) cre(u) cre(v) des(y) des(w) 
 (   0.50000) v(i,x,i,y) t1(j,z,y,w) t1(j,u,B,v) cre(x) cre(w) cre(u) des(z) des(v) 
 (   0.12500) v(x,y,z,w) t1(x,u,B,a) t1(v,s,a,t) cre(z) cre(w) cre(u) cre(t) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(z,u,a,v) t1(s,t,B,a) cre(w) cre(v) cre(s) cre(t) des(x) des(y) des(u) 
 (  -0.06250) v(x,y,z,w) t1(u,v,a,x) t1(s,t,B,a) cre(z) cre(w) cre(s) cre(t) des(y) des(u) des(v) 
 (   0.12500) v(x,y,z,w) t1(i,x,B,u) t1(i,v,s,t) cre(z) cre(w) cre(s) cre(t) des(y) des(u) des(v) 
 (  -0.12500) v(x,y,z,w) t1(i,z,u,v) t1(i,s,B,t) cre(w) cre(u) cre(v) cre(s) des(x) des(y) des(t) 
 (  -0.12500) v(x,y,z,w) t1(i,u,B,z) t1(i,v,s,t) cre(w) cre(u) cre(s) cre(t) des(x) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(i,u,x,v) t1(i,s,B,t) cre(z) cre(w) cre(v) cre(s) des(y) des(u) des(t) 

Total terms : 202
SQA automation time :  4.660 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
M[s_casci:f_casci, s_e:f_e] =  np.einsum('B, xB, Ix->IB', e_extern_so, t2_ae, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('iB, ix, Ix->IB', h_ce_so, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ix, iB, Ix->IB', h_ca_so, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ix, iyBx, Iy->IB', h_ca_so, t1_caea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ia, ixBa, Ix->IB', h_ce_so, t1_caee, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xy, xB, Iy->IB', h_aa_so, t2_ae, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('iB, ijjx, Ix->IB', t1_ce, v_ccca_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ix, iyxB, Iy->IB', t1_ca, v_caae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ix, iBxy, Iy->IB', t1_ca, v_ceaa_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ix, ijjB, Ix->IB', t1_ca, v_ccce_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ixBy, ijjy, Ix->IB', t1_caea, v_ccca_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ixBa, ijja, Ix->IB', t1_caee, v_ccce_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixyz, iByz, Ix->IB', t1_caaa, v_ceaa_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixay, iBya, Ix->IB', t1_caea, v_ceae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixab, iBab, Ix->IB', t1_caee, v_ceee_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ijBx, ijxy, Iy->IB', t1_ccea, v_ccaa_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ijBa, ijxa, Ix->IB', t1_ccee, v_ccae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ijxy, ijxB, Iy->IB', t1_ccaa, v_ccae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ijax, ijBa, Ix->IB', t1_ccea, v_ccee_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ia, iBxa, Ix->IB', t1_ce, v_ceae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ia, ixBa, Ix->IB', t1_ce, v_caee_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xB, iyix, Iy->IB', t2_ae, v_caca_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('B, iB, ix, Ix->IB', e_extern_so, t1_ce, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('B, ixBy, iy, Ix->IB', e_extern_so, t1_caea, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('B, ixBa, ia, Ix->IB', e_extern_so, t1_caee, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('B, ijBx, ijxy, Iy->IB', e_extern_so, t1_ccea, t1_ccaa, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('B, ijBa, ijax, Ix->IB', e_extern_so, t1_ccee, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('i, ix, iB, Ix->IB', e_core_so, t1_ca, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ix, iyBx, Iy->IB', e_core_so, t1_ca, t1_caea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ixBy, iy, Ix->IB', e_core_so, t1_caea, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ixBa, ia, Ix->IB', e_core_so, t1_caee, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ijBx, ijxy, Iy->IB', e_core_so, t1_ccea, t1_ccaa, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ijBa, ijax, Ix->IB', e_core_so, t1_ccee, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ijxy, ijBx, Iy->IB', e_core_so, t1_ccaa, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ijax, ijBa, Ix->IB', e_core_so, t1_ccea, t1_ccee, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ia, ixBa, Ix->IB', e_core_so, t1_ce, t1_caee, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('a, ixBa, ia, Ix->IB', e_extern_so, t1_caee, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('a, ijBa, ijax, Ix->IB', e_extern_so, t1_ccee, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xy, za, xBya, Iz->IB', rdm_ca_so, t1_ae, v_aeae_so, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, ix, iB, Iy->IB', h_aa_so, t1_ca, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xy, ix, izBy, Iz->IB', h_aa_so, t1_ca, t1_caea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, ixBz, iz, Iy->IB', h_aa_so, t1_caea, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, ixBa, ia, Iy->IB', h_aa_so, t1_caee, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, ijBx, ijyz, Iz->IB', h_aa_so, t1_ccea, t1_ccaa, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xy, ijxz, ijBz, Iy->IB', h_aa_so, t1_ccaa, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, ijax, ijBa, Iy->IB', h_aa_so, t1_ccea, t1_ccee, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ijxy, ijBz, Iw->IB', v_aaaa_so, t1_ccaa, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jy, jB, Ix->IB', v_caca_so, t1_ca, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jyBz, jz, Ix->IB', v_caca_so, t1_caea, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jyBa, ja, Ix->IB', v_caca_so, t1_caee, t1_ce, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixiy, jzBx, jy, Iz->IB', v_caca_so, t1_caea, t1_ca, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jkBx, jkyz, Iz->IB', v_caca_so, t1_ccea, t1_ccaa, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ixiy, jkyz, jkBz, Ix->IB', v_caca_so, t1_ccaa, t1_ccea, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, jkay, jkBa, Ix->IB', v_caca_so, t1_ccea, t1_ccee, trdm_c_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('B, xyBz, Ixyz->IB', e_extern_so, t2_aaea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('iB, ixyz, Iyzx->IB', h_ce_so, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ix, iyBz, Ixyz->IB', h_ca_so, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xa, yzBa, Iyzx->IB', h_ae_so, t1_aaee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xy, xzBw, Iyzw->IB', h_aa_so, t2_aaea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, zwBx, Izwy->IB', h_aa_so, t2_aaea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('iB, ixyz, Iyzx->IB', t1_ce, v_caaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xyBa, izia, Ixyz->IB', t1_aaee, v_cace_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xyaz, wBza, Ixyw->IB', t1_aaea, v_aeae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyab, zBab, Ixyz->IB', t1_aaee, v_aeee_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ix, iByz, Iyzx->IB', t1_ca, v_ceaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ix, izyB, Ixzy->IB', t1_ca, v_caae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixBy, izyw, Ixwz->IB', t1_caea, v_caaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixBy, ijjz, Ixzy->IB', t1_caea, v_ccca_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ixBa, iyza, Ixzy->IB', t1_caee, v_caae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixyz, iByw, Ixwz->IB', t1_caaa, v_ceaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixyz, iwyB, Izwx->IB', t1_caaa, v_caae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixyz, ijjB, Iyzx->IB', t1_caaa, v_ccce_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ixay, iBza, Ixzy->IB', t1_caea, v_ceae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('ixay, izBa, Iyzx->IB', t1_caea, v_caee_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ijBx, ijyz, Iyzx->IB', t1_ccea, v_ccaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ijxy, ijzB, Ixyz->IB', t1_ccaa, v_ccae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xa, yzBa, Iyzx->IB', t1_ae, v_aaee_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('xa, yBza, Ixzy->IB', t1_ae, v_aeae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xB, xyzw, Izwy->IB', t2_ae, v_aaaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyBz, xywu, Iwuz->IB', t2_aaea, v_aaaa_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xyBz, iziw, Ixyw->IB', t2_aaea, v_caca_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('xyBz, iwix, Iywz->IB', t2_aaea, v_caca_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('B, iB, ixyz, Iyzx->IB', e_extern_so, t1_ce, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('B, xyBa, za, Ixyz->IB', e_extern_so, t1_aaee, t1_ae, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('B, ixBy, iz, Ixzy->IB', e_extern_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('B, ixBy, izyw, Ixwz->IB', e_extern_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('B, ixBa, iyaz, Ixzy->IB', e_extern_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('B, ijBx, ijyz, Iyzx->IB', e_extern_so, t1_ccea, t1_ccaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('i, ix, iyBz, Ixyz->IB', e_core_so, t1_ca, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('i, ixBy, ixzw, Izwy->IB', e_core_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ixBy, izyw, Ixwz->IB', e_core_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ixBa, iyaz, Ixzy->IB', e_core_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('i, ixyz, iB, Iyzx->IB', e_core_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('i, ixyz, ixBw, Iyzw->IB', e_core_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ixyz, iwBy, Izwx->IB', e_core_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ixay, izBa, Iyzx->IB', e_core_so, t1_caea, t1_caee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('i, ijBx, ijyz, Iyzx->IB', e_core_so, t1_ccea, t1_ccaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('i, ijxy, ijBz, Ixyz->IB', e_core_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('a, xyBa, za, Ixyz->IB', e_extern_so, t1_aaee, t1_ae, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('a, ixBa, iyaz, Ixzy->IB', e_extern_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, zwau, xBya, Izwu->IB', rdm_ca_so, t1_aaea, v_aeae_so, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, xzBa, wa, Iyzw->IB', h_aa_so, t1_aaee, t1_ae, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, ix, izBw, Iyzw->IB', h_aa_so, t1_ca, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xy, xa, zwBa, Izwy->IB', h_aa_so, t1_ae, t1_aaee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, ixBz, iw, Iywz->IB', h_aa_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, ixBz, iwzu, Iyuw->IB', h_aa_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, ixBa, izaw, Iywz->IB', h_aa_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, ixzw, iB, Izwy->IB', h_aa_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, ixzw, iuBz, Iwuy->IB', h_aa_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, ixaz, iwBa, Izwy->IB', h_aa_so, t1_caea, t1_caee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, izBx, iw, Izwy->IB', h_aa_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('xy, izBx, iwyu, Izuw->IB', h_aa_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, izxw, iB, Iywz->IB', h_aa_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xy, izxw, iuBw, Iyuz->IB', h_aa_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, izax, iwBa, Iywz->IB', h_aa_so, t1_caea, t1_caee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xy, ijBx, ijzw, Izwy->IB', h_aa_so, t1_ccea, t1_ccaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, ijxz, ijBw, Iyzw->IB', h_aa_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, xyBa, ua, Izwu->IB', v_aaaa_so, t1_aaee, t1_ae, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, ix, iB, Izwy->IB', v_aaaa_so, t1_ca, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ix, iyBu, Izwu->IB', v_aaaa_so, t1_ca, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('xyzw, ix, iuBz, Iwuy->IB', v_aaaa_so, t1_ca, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ixBu, iu, Izwy->IB', v_aaaa_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, ixBu, ivyu, Izwv->IB', v_aaaa_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ixBa, ia, Izwy->IB', v_aaaa_so, t1_caee, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ixBa, iuay, Izwu->IB', v_aaaa_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, iuxy, iB, Izwu->IB', v_aaaa_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xyzw, iuxy, ivBz, Iwvu->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.0625 * np.einsum('xyzw, ijxy, ijBu, Izwu->IB', v_aaaa_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xyzw, ijxu, ijBz, Iwuy->IB', v_aaaa_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, ijxu, ijBu, Izwy->IB', v_aaaa_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, ijax, ijBa, Izwy->IB', v_aaaa_so, t1_ccea, t1_ccee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ixiy, xa, zwBa, Izwy->IB', v_caca_so, t1_ae, t1_aaee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, yzBa, wa, Ixzw->IB', v_caca_so, t1_aaee, t1_ae, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jy, jzBw, Ixzw->IB', v_caca_so, t1_ca, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, jxzw, jB, Izwy->IB', v_caca_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jxzw, juBz, Iwuy->IB', v_caca_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jxaz, jwBa, Izwy->IB', v_caca_so, t1_caea, t1_caee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jyBz, jw, Ixwz->IB', v_caca_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jyBz, jwzu, Ixuw->IB', v_caca_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jyBa, jzaw, Ixwz->IB', v_caca_so, t1_caee, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jzBx, jw, Izwy->IB', v_caca_so, t1_caea, t1_ca, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= np.einsum('ixiy, jzBx, jwyu, Izuw->IB', v_caca_so, t1_caea, t1_caaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jzyw, jB, Ixwz->IB', v_caca_so, t1_caaa, t1_ce, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixiy, jzyw, juBw, Ixuz->IB', v_caca_so, t1_caaa, t1_caea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jzay, jwBa, Ixwz->IB', v_caca_so, t1_caea, t1_caee, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('ixiy, jkBx, jkzw, Izwy->IB', v_caca_so, t1_ccea, t1_ccaa, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, jkyz, jkBw, Ixzw->IB', v_caca_so, t1_ccaa, t1_ccea, trdm_cca_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyBa, zwua, Ixyuzw->IB', t1_aaee, v_aaae_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyaz, wuBa, Izwuxy->IB', t1_aaea, v_aaee_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xyaz, wBua, Ixyuzw->IB', t1_aaea, v_aeae_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixBy, izwu, Ixwuyz->IB', t1_caea, v_caaa_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ixyz, iBwu, Ixwuyz->IB', t1_caaa, v_ceaa_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('ixyz, iuwB, Iyzuxw->IB', t1_caaa, v_caae_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('xyBz, xwuv, Iyuvzw->IB', t2_aaea, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyBz, wuzv, Ixyvwu->IB', t2_aaea, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('B, xyBa, zwau, Ixyuzw->IB', e_extern_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('B, ixBy, izwu, Ixwuyz->IB', e_extern_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.5 * np.einsum('i, ixyz, iwBu, Iyzwxu->IB', e_core_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('a, xyBa, zwau, Ixyuzw->IB', e_extern_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, xzBa, wuav, Iyzvwu->IB', h_aa_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, xzaw, uvBa, Iwuvyz->IB', h_aa_so, t1_aaea, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xy, zwax, uvBa, Iyuvzw->IB', h_aa_so, t1_aaea, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xy, ixBz, iwuv, Iyuvzw->IB', h_aa_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xy, ixzw, iuBv, Izwuyv->IB', h_aa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xy, izBx, iwuv, Izuvyw->IB', h_aa_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('xy, izxw, iuBv, Iywuzv->IB', h_aa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.0625 * np.einsum('xyzw, xyBa, uvas, Izwsuv->IB', v_aaaa_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, xuBa, va, Izwuyv->IB', v_aaaa_so, t1_aaee, t1_ae, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, xuBa, vsay, Izwuvs->IB', v_aaaa_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ix, iuBv, Izwuyv->IB', v_aaaa_so, t1_ca, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.0625 * np.einsum('xyzw, zwau, vsBa, Iuvsxy->IB', v_aaaa_so, t1_aaea, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, za, uvBa, Iwuvxy->IB', v_aaaa_so, t1_ae, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ixBu, iv, Izwvyu->IB', v_aaaa_so, t1_caea, t1_ca, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, ixBu, ivys, Izwsuv->IB', v_aaaa_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, ixBu, ivus, Izwsyv->IB', v_aaaa_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, ixBa, iuav, Izwvyu->IB', v_aaaa_so, t1_caee, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, izuv, iB, Iwuvxy->IB', v_aaaa_so, t1_caaa, t1_ce, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, izuv, isBw, Iuvsxy->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, izuv, isBu, Iwvsxy->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, izau, ivBa, Iwuvxy->IB', v_aaaa_so, t1_caea, t1_caee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, iuBz, iv, Iwuvxy->IB', v_aaaa_so, t1_caea, t1_ca, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, iuxy, ivBs, Izwvus->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, iuxv, iB, Izwvyu->IB', v_aaaa_so, t1_caaa, t1_ce, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += np.einsum('xyzw, iuxv, isBz, Iwvsyu->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, iuxv, isBv, Izwsyu->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('xyzw, iuax, ivBa, Izwvyu->IB', v_aaaa_so, t1_caea, t1_caee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.0625 * np.einsum('xyzw, ijBz, ijuv, Iwuvxy->IB', v_aaaa_so, t1_ccea, t1_ccaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, ijxu, ijBv, Izwuyv->IB', v_aaaa_so, t1_ccaa, t1_ccea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, xzaw, uvBa, Iwuvyz->IB', v_caca_so, t1_aaea, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, yzBa, wuav, Ixzvwu->IB', v_caca_so, t1_aaee, t1_aaea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('ixiy, zway, uvBa, Ixuvzw->IB', v_caca_so, t1_aaea, t1_aaee, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ixiy, jxzw, juBv, Izwuyv->IB', v_caca_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('ixiy, jyBz, jwuv, Ixuvzw->IB', v_caca_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.25 * np.einsum('ixiy, jzBx, jwuv, Izuvyw->IB', v_caca_so, t1_caea, t1_caaa, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.5 * np.einsum('ixiy, jzyw, juBv, Ixwuzv->IB', v_caca_so, t1_caaa, t1_caea, trdm_cccaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, xuBa, vsat, Izwutyvs->IB', v_aaaa_so, t1_aaee, t1_aaea, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, zuav, stBa, Iwvstxyu->IB', v_aaaa_so, t1_aaea, t1_aaee, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.0625 * np.einsum('xyzw, uvax, stBa, Izwstyuv->IB', v_aaaa_so, t1_aaea, t1_aaee, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.125 * np.einsum('xyzw, ixBu, ivst, Izwstyuv->IB', v_aaaa_so, t1_caea, t1_caaa, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, izuv, isBt, Iwuvsxyt->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] -= 0.125 * np.einsum('xyzw, iuBz, ivst, Iwustxyv->IB', v_aaaa_so, t1_caea, t1_caaa, trdm_ccccaaa_so, optimize = True)
M[s_casci:f_casci, s_e:f_e] += 0.25 * np.einsum('xyzw, iuxv, isBt, Izwvsyut->IB', v_aaaa_so, t1_caaa, t1_caea, trdm_ccccaaa_so, optimize = True)
