
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator
Second Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) v(J,A,W,C) cre(X) des(Y) 
 (   1.00000) h(J,W) kdelta(A,C) cre(X) des(Y) 
 (   1.00000) kdelta(A,C) v(J,Y,W,x) cre(X) des(x) 
 (  -1.00000) kdelta(A,C) v(J,i,i,W) cre(X) des(Y) 
 (  -1.00000) kdelta(W,Y) v(J,A,x,C) cre(X) des(x) 
 (  -1.00000) e(J) kdelta(A,C) t1(J,W) cre(X) des(Y) 
 (  -1.00000) e(J) kdelta(A,C) t1(J,Y,W,x) cre(X) des(x) 
 (  -1.00000) h(J,x) kdelta(A,C) kdelta(W,Y) cre(X) des(x) 
 (   1.00000) h(W,x) kdelta(A,C) t1(J,Y,x,y) cre(X) des(y) 
 (   1.00000) h(W,x) kdelta(A,C) t1(J,x) cre(X) des(Y) 
 (  -1.00000) h(Y,x) kdelta(A,C) t1(J,x,W,y) cre(X) des(y) 
 (   1.00000) h(x,y) kdelta(A,C) t1(J,Y,W,x) cre(X) des(y) 
 (   1.00000) kdelta(A,C) t1(J,Y,W,x) v(i,x,i,y) cre(X) des(y) 
 (   0.50000) kdelta(A,C) t1(J,Y,x,y) v(W,z,x,y) cre(X) des(z) 
 (   1.00000) kdelta(A,C) t1(J,Y,x,y) v(i,x,i,W) cre(X) des(y) 
 (  -1.00000) kdelta(A,C) t1(J,x) v(W,y,Y,x) cre(X) des(y) 
 (   1.00000) kdelta(A,C) t1(J,x) v(i,x,i,W) cre(X) des(Y) 
 (  -1.00000) kdelta(A,C) t1(J,x,W,y) v(i,Y,i,x) cre(X) des(y) 
 (   1.00000) v(J,i,i,x) kdelta(A,C) kdelta(W,Y) cre(X) des(x) 
 (   1.00000) e(J) t1(J,x) kdelta(A,C) kdelta(W,Y) cre(X) des(x) 
 (  -1.00000) h(x,y) t1(J,x) kdelta(A,C) kdelta(W,Y) cre(X) des(y) 
 (  -1.00000) t1(J,x) v(i,x,i,y) kdelta(A,C) kdelta(W,Y) cre(X) des(y) 
 (  -1.00000) v(J,A,x,C) cre(W) cre(X) des(Y) des(x) 
 (  -1.00000) h(J,x) kdelta(A,C) cre(W) cre(X) des(Y) des(x) 
 (  -1.00000) kdelta(A,C) v(J,y,W,x) cre(X) cre(y) des(Y) des(x) 
 (   0.50000) kdelta(A,C) v(J,Y,x,y) cre(W) cre(X) des(x) des(y) 
 (   1.00000) kdelta(A,C) v(J,i,i,x) cre(W) cre(X) des(Y) des(x) 
 (  -0.50000) e(J) kdelta(A,C) t1(J,Y,x,y) cre(W) cre(X) des(x) des(y) 
 (   1.00000) e(J) kdelta(A,C) t1(J,x) cre(W) cre(X) des(Y) des(x) 
 (   1.00000) e(J) kdelta(A,C) t1(J,x,W,y) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) h(W,x) kdelta(A,C) t1(J,y,x,z) cre(X) cre(y) des(Y) des(z) 
 (  -0.50000) h(Y,x) kdelta(A,C) t1(J,x,y,z) cre(W) cre(X) des(y) des(z) 
 (   1.00000) h(x,y) kdelta(A,C) t1(J,Y,x,z) cre(W) cre(X) des(y) des(z) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(J,x) cre(W) cre(X) des(Y) des(y) 
 (   1.00000) h(x,y) kdelta(A,C) t1(J,x,W,z) cre(X) cre(y) des(Y) des(z) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(J,z,W,x) cre(X) cre(z) des(Y) des(y) 
 (  -0.50000) kdelta(A,C) t1(J,Y,W,x) v(y,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,Y,x,y) v(W,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,Y,x,y) v(i,x,i,z) cre(W) cre(X) des(y) des(z) 
 (   0.25000) kdelta(A,C) t1(J,Y,x,y) v(z,w,x,y) cre(W) cre(X) des(z) des(w) 
 (  -1.00000) kdelta(A,C) t1(J,x) v(W,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) kdelta(A,C) t1(J,x) v(i,x,i,y) cre(W) cre(X) des(Y) des(y) 
 (  -0.50000) kdelta(A,C) t1(J,x) v(y,z,Y,x) cre(W) cre(X) des(y) des(z) 
 (   1.00000) kdelta(A,C) t1(J,x,W,y) v(x,z,Y,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,x,W,y) v(i,y,i,z) cre(X) cre(x) des(Y) des(z) 
 (  -0.50000) kdelta(A,C) t1(J,x,W,y) v(z,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (   1.00000) kdelta(A,C) t1(J,x,W,y) v(i,z,i,x) cre(X) cre(z) des(Y) des(y) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(W,x,Y,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,x,y,z) v(W,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(W,w,y,z) cre(X) cre(x) des(Y) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(i,Y,i,x) cre(W) cre(X) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,x,y,z) v(i,y,i,W) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) v(J,z,x,y) kdelta(A,C) kdelta(W,Y) cre(X) cre(z) des(x) des(y) 
 (  -0.50000) e(J) t1(J,x,y,z) kdelta(A,C) kdelta(W,Y) cre(X) cre(x) des(y) des(z) 
 (  -0.50000) h(x,y) t1(J,x,z,w) kdelta(A,C) kdelta(W,Y) cre(X) cre(y) des(z) des(w) 
 (   1.00000) h(x,y) t1(J,z,x,w) kdelta(A,C) kdelta(W,Y) cre(X) cre(z) des(y) des(w) 
 (   0.50000) t1(J,x) v(y,z,x,w) kdelta(A,C) kdelta(W,Y) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) t1(J,x,y,z) v(i,y,i,w) kdelta(A,C) kdelta(W,Y) cre(X) cre(x) des(z) des(w) 
 (   0.25000) t1(J,x,y,z) v(w,u,y,z) kdelta(A,C) kdelta(W,Y) cre(X) cre(x) des(w) des(u) 
 (  -0.50000) t1(J,x,y,z) v(i,w,i,x) kdelta(A,C) kdelta(W,Y) cre(X) cre(w) des(y) des(z) 
 (  -0.50000) kdelta(A,C) v(J,z,x,y) cre(W) cre(X) cre(z) des(Y) des(x) des(y) 
 (   0.50000) e(J) kdelta(A,C) t1(J,x,y,z) cre(W) cre(X) cre(x) des(Y) des(y) des(z) 
 (   0.50000) h(x,y) kdelta(A,C) t1(J,x,z,w) cre(W) cre(X) cre(y) des(Y) des(z) des(w) 
 (  -1.00000) h(x,y) kdelta(A,C) t1(J,z,x,w) cre(W) cre(X) cre(z) des(Y) des(y) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,Y,x,y) v(z,w,x,u) cre(W) cre(X) cre(u) des(y) des(z) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x) v(y,z,x,w) cre(W) cre(X) cre(w) des(Y) des(y) des(z) 
 (   0.50000) kdelta(A,C) t1(J,x,W,y) v(x,z,w,u) cre(X) cre(w) cre(u) des(Y) des(y) des(z) 
 (  -0.50000) kdelta(A,C) t1(J,x,W,y) v(z,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.25000) kdelta(A,C) t1(J,x,y,z) v(W,x,w,u) cre(X) cre(w) cre(u) des(Y) des(y) des(z) 
 (  -1.00000) kdelta(A,C) t1(J,x,y,z) v(W,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(x,w,Y,u) cre(W) cre(X) cre(u) des(y) des(z) des(w) 
 (   1.00000) kdelta(A,C) t1(J,x,y,z) v(i,y,i,w) cre(W) cre(X) cre(x) des(Y) des(z) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(w,u,Y,y) cre(W) cre(X) cre(x) des(z) des(w) des(u) 
 (  -0.25000) kdelta(A,C) t1(J,x,y,z) v(w,u,y,z) cre(W) cre(X) cre(x) des(Y) des(w) des(u) 
 (   0.50000) kdelta(A,C) t1(J,x,y,z) v(i,w,i,x) cre(W) cre(X) cre(w) des(Y) des(y) des(z) 
 (  -0.25000) t1(J,x,y,z) v(x,w,u,v) kdelta(A,C) kdelta(W,Y) cre(X) cre(u) cre(v) des(y) des(z) des(w) 
 (  -0.50000) t1(J,x,y,z) v(w,u,y,v) kdelta(A,C) kdelta(W,Y) cre(X) cre(x) cre(v) des(z) des(w) des(u) 
 (  -0.25000) kdelta(A,C) t1(J,x,y,z) v(x,w,u,v) cre(W) cre(X) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.50000) kdelta(A,C) t1(J,x,y,z) v(w,u,y,v) cre(W) cre(X) cre(x) cre(v) des(Y) des(z) des(w) des(u) 

Total terms : 79
SQA automation time :  3.670 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =  np.einsum('JAWC, XY->XYAJWC', v_ceae_so, rdm_ca_so, optimize = True)
temp += np.einsum('JW, AC, XY->XYAJWC', h_ca_so, np.identity(nextern), rdm_ca_so, optimize = True)
temp += np.einsum('AC, JYWx, Xx->XYAJWC', np.identity(nextern), v_caaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, JiiW, XY->XYAJWC', np.identity(nextern), v_ccca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('WY, JAxC, Xx->XYAJWC', np.identity(ncas), v_ceae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('J, AC, JW, XY->XYAJWC', e_core_so, np.identity(nextern), t1_ca, rdm_ca_so, optimize = True)
temp -= np.einsum('J, AC, JYWx, Xx->XYAJWC', e_core_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Jx, AC, WY, Xx->XYAJWC', h_ca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('Wx, AC, JYxy, Xy->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Wx, AC, Jx, XY->XYAJWC', h_aa_so, np.identity(nextern), t1_ca, rdm_ca_so, optimize = True)
temp -= np.einsum('Yx, AC, JxWy, Xy->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('xy, AC, JYWx, Xy->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('AC, JYWx, ixiy, Xy->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('AC, JYxy, Wzxy, Xz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, JYxy, ixiW, Xy->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, Jx, WyYx, Xy->XYAJWC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('AC, Jx, ixiW, XY->XYAJWC', np.identity(nextern), t1_ca, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('AC, JxWy, iYix, Xy->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('Jiix, AC, WY, Xx->XYAJWC', v_ccca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp += np.einsum('J, Jx, AC, WY, Xx->XYAJWC', e_core_so, t1_ca, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('xy, Jx, AC, WY, Xy->XYAJWC', h_aa_so, t1_ca, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('Jx, ixiy, AC, WY, Xy->XYAJWC', t1_ca, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ca_so, optimize = True)
temp -= np.einsum('JAxC, WXYx->XYAJWC', v_ceae_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('Jx, AC, WXYx->XYAJWC', h_ca_so, np.identity(nextern), rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, JyWx, XyYx->XYAJWC', np.identity(nextern), v_caaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, JYxy, WXxy->XYAJWC', np.identity(nextern), v_caaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, Jiix, WXYx->XYAJWC', np.identity(nextern), v_ccca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('J, AC, JYxy, WXxy->XYAJWC', e_core_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp += np.einsum('J, AC, Jx, WXYx->XYAJWC', e_core_so, np.identity(nextern), t1_ca, rdm_ccaa_so, optimize = True)
temp += np.einsum('J, AC, JxWy, XxYy->XYAJWC', e_core_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('Wx, AC, Jyxz, XyYz->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('Yx, AC, Jxyz, WXyz->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, AC, JYxz, WXyz->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, AC, Jx, WXYy->XYAJWC', h_aa_so, np.identity(nextern), t1_ca, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, AC, JxWz, XyYz->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, AC, JzWx, XzYy->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, JYWx, yzxw, Xwyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, JYxy, Wzxw, Xwyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, JYxy, ixiz, WXyz->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('AC, JYxy, zwxy, WXzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Jx, Wyxz, XzYy->XYAJWC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Jx, ixiy, WXYy->XYAJWC', np.identity(nextern), t1_ca, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jx, yzYx, WXyz->XYAJWC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, JxWy, xzYw, Xwyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, JxWy, iyiz, XxYz->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, JxWy, zwYy, Xxzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('AC, JxWy, izix, XzYy->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, WxYw, Xwyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Jxyz, WwYy, Xxzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, Wwyz, XxYw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, iYix, WXyz->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('AC, Jxyz, iyiW, XxYz->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('Jzxy, AC, WY, Xzxy->XYAJWC', v_caaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('J, Jxyz, AC, WY, Xxyz->XYAJWC', e_core_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xy, Jxzw, AC, WY, Xyzw->XYAJWC', h_aa_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, Jzxw, AC, WY, Xzyw->XYAJWC', h_aa_so, t1_caaa, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('Jx, yzxw, AC, WY, Xwyz->XYAJWC', t1_ca, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= np.einsum('Jxyz, iyiw, AC, WY, Xxzw->XYAJWC', t1_caaa, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('Jxyz, wuyz, AC, WY, Xxwu->XYAJWC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('Jxyz, iwix, AC, WY, Xwyz->XYAJWC', t1_caaa, v_caca_so, np.identity(nextern), np.identity(ncas), rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jzxy, WXzYxy->XYAJWC', np.identity(nextern), v_caaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('J, AC, Jxyz, WXxYyz->XYAJWC', e_core_so, np.identity(nextern), t1_caaa, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xy, AC, Jxzw, WXyYzw->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('xy, AC, Jzxw, WXzYyw->XYAJWC', h_aa_so, np.identity(nextern), t1_caaa, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, JYxy, zwxu, WXuyzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jx, yzxw, WXwYyz->XYAJWC', np.identity(nextern), t1_ca, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, JxWy, xzwu, XwuYyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, JxWy, zwyu, XxuYzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('AC, Jxyz, Wxwu, XwuYyz->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('AC, Jxyz, Wwyu, XxuYzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, xwYu, WXuyzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += np.einsum('AC, Jxyz, iyiw, WXxYzw->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, wuYy, WXxzwu->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('AC, Jxyz, wuyz, WXxYwu->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('AC, Jxyz, iwix, WXwYyz->XYAJWC', np.identity(nextern), t1_caaa, v_caca_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('Jxyz, xwuv, AC, WY, Xuvyzw->XYAJWC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('Jxyz, wuyv, AC, WY, Xxvzwu->XYAJWC', t1_caaa, v_aaaa_so, np.identity(nextern), np.identity(ncas), rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('AC, Jxyz, xwuv, WXuvYyzw->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
temp -= 0.5 * np.einsum('AC, Jxyz, wuyv, WXxvYzwu->XYAJWC', np.identity(nextern), t1_caaa, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
