
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------

Combining like terms:
Converting 4 terms to canonical form...
     0   (   1.00000) cre(B) cre(I) des(A) des(J) 
     1   (   1.00000) kdelta(A,B) cre(I) des(J) 
     2   (  -1.00000) cre(B) cre(I) des(A) des(J) 
     3   (  -1.00000) kdelta(J,I) cre(B) des(A) 
Finished combining terms in 0.002 seconds


------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
 (   1.00000) kdelta(A,B) cre(I) des(J) 
 (   0.00000) kdelta(I,J) cre(B) des(A) 
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Term=  (   1.00000) kdelta(A,B) cre(I) des(J) 
Terms after normal ordering:
 (  -1.00000) kdelta(A,B) des(J) cre(I) 
 (   1.00000) kdelta(A,B) kdelta(I,J) 
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
 (   0.00000) kdelta(A,B) des(J) cre(I) 
 (   1.00000) kdelta(A,B) kdelta(I,J) 
Done ...
--------------------------------------------------------------

Combining like terms:
Converting 1 terms to canonical form...
     0   (   1.00000) kdelta(A,B) kdelta(I,J) 
Finished combining terms in 0.001 seconds

Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
 (   1.00000) kdelta(A,B) kdelta(I,J) 
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) kdelta(A,B) kdelta(I,J) 

Total terms : 1
SQA automation time :  0.002 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =  np.einsum('AB, IJ->IAJB', np.identity(nextern), np.identity(ncore), optimize = True)
