
------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) d_aa_so(X,x) t1(I,J,A,x) 
 (   1.00000) d_ae_so(X,a) t1(I,J,A,a) 
 (  -1.00000) d_ae_so(x,A) t1(I,J,X,x) 
 (   1.00000) d_ca_so(I,x) t1(J,x,A,X) 
 (  -1.00000) d_ca_so(J,x) t1(I,x,A,X) 
 (   1.00000) d_cc_so(I,i) t1(J,i,A,X) 
 (  -1.00000) d_cc_so(J,i) t1(I,i,A,X) 
 (   1.00000) d_ee_so(A,a) t1(I,J,a,X) 
 (  -1.00000) d_aa_so(x,y) t1(I,J,A,x) cre(X) des(y) 
 (  -1.00000) d_ae_so(x,A) t1(I,J,x,y) cre(X) des(y) 
 (  -1.00000) d_ae_so(x,a) t1(I,J,A,a) cre(X) des(x) 
 (  -1.00000) d_ca_so(I,x) t1(J,x,A,y) cre(X) des(y) 
 (   1.00000) d_ca_so(J,x) t1(I,x,A,y) cre(X) des(y) 
 (  -1.00000) d_cc_so(I,i) t1(J,i,A,x) cre(X) des(x) 
 (   1.00000) d_cc_so(J,i) t1(I,i,A,x) cre(X) des(x) 
 (  -1.00000) d_ee_so(A,a) t1(I,J,a,x) cre(X) des(x) 

Total terms : 16
SQA automation time :  0.158 seconds
--------------------------------- WARNING ---------------------------------
Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "rm_core_int" flag to FALSE to preserve terms

0 terms removed:
---------------------------------------------------------------------------
Remaining terms: 16

temp  = einsum('Xx,IJAx->IJAX', d_aa_so, t1_ccea, optimize = einsum_type)
temp += einsum('Xa,IJAa->IJAX', d_ae_so, t1_ccee, optimize = einsum_type)
temp -= einsum('xA,IJXx->IJAX', d_ae_so, t1_ccaa, optimize = einsum_type)
temp += einsum('Ix,JxAX->IJAX', d_ca_so, t1_caea, optimize = einsum_type)
temp -= einsum('Jx,IxAX->IJAX', d_ca_so, t1_caea, optimize = einsum_type)
temp += einsum('Ii,JiAX->IJAX', d_cc_so, t1_ccea, optimize = einsum_type)
temp -= einsum('Ji,IiAX->IJAX', d_cc_so, t1_ccea, optimize = einsum_type)
temp += einsum('Aa,IJaX->IJAX', d_ee_so, t1_ccea, optimize = einsum_type)
temp -= einsum('xy,IJAx,Xy->IJAX', d_aa_so, t1_ccea, rdm_ca_so, optimize = einsum_type)
temp -= einsum('xA,IJxy,Xy->IJAX', d_ae_so, t1_ccaa, rdm_ca_so, optimize = einsum_type)
temp -= einsum('xa,IJAa,Xx->IJAX', d_ae_so, t1_ccee, rdm_ca_so, optimize = einsum_type)
temp -= einsum('Ix,JxAy,Xy->IJAX', d_ca_so, t1_caea, rdm_ca_so, optimize = einsum_type)
temp += einsum('Jx,IxAy,Xy->IJAX', d_ca_so, t1_caea, rdm_ca_so, optimize = einsum_type)
temp -= einsum('Ii,JiAx,Xx->IJAX', d_cc_so, t1_ccea, rdm_ca_so, optimize = einsum_type)
temp += einsum('Ji,IiAx,Xx->IJAX', d_cc_so, t1_ccea, rdm_ca_so, optimize = einsum_type)
temp -= einsum('Aa,IJax,Xx->IJAX', d_ee_so, t1_ccea, rdm_ca_so, optimize = einsum_type)
