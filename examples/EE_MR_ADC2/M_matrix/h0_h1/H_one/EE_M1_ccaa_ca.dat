
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
 (   1.00000) h(c10,a10) cre(a10) des(c10) 
 (   1.00000) h(a12,c12) cre(c12) des(a12) 
 (   1.00000) h(a14,v14) cre(v14) des(a14) 
 (   1.00000) h(v16,a16) cre(a16) des(v16) 
 (   1.00000) h(c18,v18) cre(v18) des(c18) 
 (   1.00000) h(v20,c20) cre(c20) des(v20) 
 (   1.00000) v(c23,a23,c22,a22) gamma(a23,a22) des(c23) cre(c22) 
 (  -1.00000) v(v25,a25,v24,a24) gamma(a25,a24) cre(v24) des(v25) 
 (  -0.25000) v(c29,c28,c26,c27) des(c29) des(c28) cre(c26) cre(c27) 
 (   0.25000) v(a26,c28,c26,c27) cre(c26) cre(c27) des(c28) des(a26) 
 (   0.25000) v(v26,c28,c26,c27) cre(c26) cre(c27) des(c28) des(v26) 
 (   0.25000) v(c30,a27,c26,c27) cre(c26) cre(c27) des(a27) des(c30) 
 (   0.25000) v(a28,a27,c26,c27) cre(c26) cre(c27) des(a27) des(a28) 
 (   0.25000) v(v27,a27,c26,c27) cre(c26) cre(c27) des(a27) des(v27) 
 (   0.25000) v(c31,v28,c26,c27) cre(c26) cre(c27) des(v28) des(c31) 
 (   0.25000) v(a29,v28,c26,c27) cre(c26) cre(c27) des(v28) des(a29) 
 (   0.25000) v(v29,v28,c26,c27) cre(c26) cre(c27) des(v28) des(v29) 
 (   0.25000) v(c33,c32,c26,a30) cre(c26) cre(a30) des(c32) des(c33) 
 (   0.25000) v(a31,c32,c26,a30) cre(c26) cre(a30) des(c32) des(a31) 
 (   0.25000) v(v30,c32,c26,a30) cre(c26) cre(a30) des(c32) des(v30) 
 (   0.25000) v(c34,a32,c26,a30) cre(c26) cre(a30) des(a32) des(c34) 
 (   0.25000) v(a33,a32,c26,a30) cre(c26) cre(a30) des(a32) des(a33) 
 (   0.25000) v(v31,a32,c26,a30) cre(c26) cre(a30) des(a32) des(v31) 
 (   0.25000) v(c35,v32,c26,a30) cre(c26) cre(a30) des(v32) des(c35) 
 (   0.25000) v(a34,v32,c26,a30) cre(c26) cre(a30) des(v32) des(a34) 
 (   0.25000) v(v33,v32,c26,a30) cre(c26) cre(a30) des(v32) des(v33) 
 (   0.25000) v(c37,c36,c26,v34) cre(c26) cre(v34) des(c36) des(c37) 
 (   0.25000) v(a35,c36,c26,v34) cre(c26) cre(v34) des(c36) des(a35) 
 (   0.25000) v(v35,c36,c26,v34) cre(c26) cre(v34) des(c36) des(v35) 
 (   0.25000) v(c38,a36,c26,v34) cre(c26) cre(v34) des(a36) des(c38) 
 (   0.25000) v(a37,a36,c26,v34) cre(c26) cre(v34) des(a36) des(a37) 
 (   0.25000) v(v36,a36,c26,v34) cre(c26) cre(v34) des(a36) des(v36) 
 (   0.25000) v(c39,v37,c26,v34) cre(c26) cre(v34) des(v37) des(c39) 
 (   0.25000) v(a38,v37,c26,v34) cre(c26) cre(v34) des(v37) des(a38) 
 (   0.25000) v(v38,v37,c26,v34) cre(c26) cre(v34) des(v37) des(v38) 
 (   0.25000) v(c42,c41,a39,c40) cre(a39) cre(c40) des(c41) des(c42) 
 (   0.25000) v(a40,c41,a39,c40) cre(a39) cre(c40) des(c41) des(a40) 
 (   0.25000) v(v39,c41,a39,c40) cre(a39) cre(c40) des(c41) des(v39) 
 (   0.25000) v(c43,a41,a39,c40) cre(a39) cre(c40) des(a41) des(c43) 
 (   0.25000) v(a42,a41,a39,c40) cre(a39) cre(c40) des(a41) des(a42) 
 (   0.25000) v(v40,a41,a39,c40) cre(a39) cre(c40) des(a41) des(v40) 
 (   0.25000) v(c44,v41,a39,c40) cre(a39) cre(c40) des(v41) des(c44) 
 (   0.25000) v(a43,v41,a39,c40) cre(a39) cre(c40) des(v41) des(a43) 
 (   0.25000) v(v42,v41,a39,c40) cre(a39) cre(c40) des(v41) des(v42) 
 (   0.25000) v(c46,c45,a39,a44) cre(a39) cre(a44) des(c45) des(c46) 
 (   0.25000) v(a45,c45,a39,a44) cre(a39) cre(a44) des(c45) des(a45) 
 (   0.25000) v(v43,c45,a39,a44) cre(a39) cre(a44) des(c45) des(v43) 
 (   0.25000) v(c47,a46,a39,a44) cre(a39) cre(a44) des(a46) des(c47) 
 (   0.25000) v(v44,a46,a39,a44) cre(a39) cre(a44) des(a46) des(v44) 
 (   0.25000) v(c48,v45,a39,a44) cre(a39) cre(a44) des(v45) des(c48) 
 (   0.25000) v(a48,v45,a39,a44) cre(a39) cre(a44) des(v45) des(a48) 
 (   0.25000) v(v46,v45,a39,a44) cre(a39) cre(a44) des(v45) des(v46) 
 (   0.25000) v(c50,c49,a39,v47) cre(a39) cre(v47) des(c49) des(c50) 
 (   0.25000) v(a49,c49,a39,v47) cre(a39) cre(v47) des(c49) des(a49) 
 (   0.25000) v(v48,c49,a39,v47) cre(a39) cre(v47) des(c49) des(v48) 
 (   0.25000) v(c51,a50,a39,v47) cre(a39) cre(v47) des(a50) des(c51) 
 (   0.25000) v(a51,a50,a39,v47) cre(a39) cre(v47) des(a50) des(a51) 
 (   0.25000) v(v49,a50,a39,v47) cre(a39) cre(v47) des(a50) des(v49) 
 (   0.25000) v(c52,v50,a39,v47) cre(a39) cre(v47) des(v50) des(c52) 
 (   0.25000) v(a52,v50,a39,v47) cre(a39) cre(v47) des(v50) des(a52) 
 (   0.25000) v(v51,v50,a39,v47) cre(a39) cre(v47) des(v50) des(v51) 
 (   0.25000) v(c55,c54,v52,c53) cre(v52) cre(c53) des(c54) des(c55) 
 (   0.25000) v(a53,c54,v52,c53) cre(v52) cre(c53) des(c54) des(a53) 
 (   0.25000) v(v53,c54,v52,c53) cre(v52) cre(c53) des(c54) des(v53) 
 (   0.25000) v(c56,a54,v52,c53) cre(v52) cre(c53) des(a54) des(c56) 
 (   0.25000) v(a55,a54,v52,c53) cre(v52) cre(c53) des(a54) des(a55) 
 (   0.25000) v(v54,a54,v52,c53) cre(v52) cre(c53) des(a54) des(v54) 
 (   0.25000) v(c57,v55,v52,c53) cre(v52) cre(c53) des(v55) des(c57) 
 (   0.25000) v(a56,v55,v52,c53) cre(v52) cre(c53) des(v55) des(a56) 
 (   0.25000) v(v56,v55,v52,c53) cre(v52) cre(c53) des(v55) des(v56) 
 (   0.25000) v(c59,c58,v52,a57) cre(v52) cre(a57) des(c58) des(c59) 
 (   0.25000) v(a58,c58,v52,a57) cre(v52) cre(a57) des(c58) des(a58) 
 (   0.25000) v(v57,c58,v52,a57) cre(v52) cre(a57) des(c58) des(v57) 
 (   0.25000) v(c60,a59,v52,a57) cre(v52) cre(a57) des(a59) des(c60) 
 (   0.25000) v(a60,a59,v52,a57) cre(v52) cre(a57) des(a59) des(a60) 
 (   0.25000) v(v58,a59,v52,a57) cre(v52) cre(a57) des(a59) des(v58) 
 (   0.25000) v(c61,v59,v52,a57) cre(v52) cre(a57) des(v59) des(c61) 
 (   0.25000) v(a61,v59,v52,a57) cre(v52) cre(a57) des(v59) des(a61) 
 (   0.25000) v(v60,v59,v52,a57) cre(v52) cre(a57) des(v59) des(v60) 
 (   0.25000) v(c63,c62,v52,v61) cre(v52) cre(v61) des(c62) des(c63) 
 (   0.25000) v(a62,c62,v52,v61) cre(v52) cre(v61) des(c62) des(a62) 
 (   0.25000) v(v62,c62,v52,v61) cre(v52) cre(v61) des(c62) des(v62) 
 (   0.25000) v(c64,a63,v52,v61) cre(v52) cre(v61) des(a63) des(c64) 
 (   0.25000) v(a64,a63,v52,v61) cre(v52) cre(v61) des(a63) des(a64) 
 (   0.25000) v(v63,a63,v52,v61) cre(v52) cre(v61) des(a63) des(v63) 
 (   0.25000) v(c65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(c65) 
 (   0.25000) v(a65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(a65) 
 (   0.25000) v(v65,v64,v52,v61) cre(v52) cre(v61) des(v64) des(v65) 
 (  -1.00000) v(v67,c67,c66,v66) cre(c66) cre(v66) des(c67) des(v67) 
 (  -1.00000) v(a67,c69,c68,a66) cre(c68) cre(a66) des(c69) des(a67) 
 (   1.00000) v(v69,c71,c70,v68) cre(v68) des(v69) des(c71) cre(c70) 
 (   1.00000) v(a69,c73,c72,a68) des(c73) cre(c72) cre(a68) des(a69) 
 (  -1.00000) e(a) t1(a,b) cre(a) des(b) 
 (  -1.00000) e(a) t1(a,b) cre(b) des(a) 
 (  -1.00000) e(a) t1(a,b) cre(a) des(b) 
 (  -1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) e(a) t1(a,b) cre(a) des(b) 
 (   1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) e(a) t1(a,b) cre(a) des(b) 
 (   1.00000) e(a) t1(a,b) cre(b) des(a) 
 (   1.00000) h(a,b) t1(a,c) cre(b) des(c) 
 (   1.00000) h(a,b) t1(a,c) cre(c) des(b) 
 (  -1.00000) h(a,b) t1(a,c) cre(b) des(c) 
 (  -1.00000) h(a,b) t1(a,c) cre(c) des(b) 
 (  -1.00000) t1(a,b) v(a,c,c,d) cre(b) des(d) 
 (  -1.00000) t1(a,b) v(c,d,a,c) cre(d) des(b) 
 (   1.00000) t1(a,b) v(a,c,c,d) cre(b) des(d) 
 (   1.00000) t1(a,b) v(c,d,a,c) cre(d) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   1.00000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   1.00000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   1.00000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   1.00000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (   0.50000) e(a) t1(a,b,c,d) cre(a) cre(b) des(c) des(d) 
 (   0.50000) e(a) t1(a,b,c,d) cre(c) cre(d) des(a) des(b) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -1.00000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(a) cre(d) des(b) des(c) 
 (  -0.50000) e(a) t1(b,c,a,d) cre(b) cre(c) des(a) des(d) 
 (   1.00000) h(a,b) t1(a,c,d,e) cre(b) cre(c) des(d) des(e) 
 (   1.00000) h(a,b) t1(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) h(a,b) t1(a,c,d,e) cre(b) cre(c) des(d) des(e) 
 (   0.50000) h(a,b) t1(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -1.00000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -1.00000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(b) cre(c) des(d) des(e) 
 (  -0.50000) h(a,b) t1(c,a,d,e) cre(d) cre(e) des(b) des(c) 
 (  -1.00000) h(a,b) t1(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -1.00000) h(a,b) t1(c,d,a,e) cre(c) cre(d) des(b) des(e) 
 (   1.00000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   1.00000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (  -0.50000) h(a,b) t1(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -0.50000) h(a,b) t1(c,d,a,e) cre(c) cre(d) des(b) des(e) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(b) cre(e) des(c) des(d) 
 (   0.50000) h(a,b) t1(c,d,e,a) cre(c) cre(d) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(a,b,e,f) cre(e) cre(f) des(c) des(d) 
 (   1.00000) t1(a,b,c,d) v(a,e,e,f) cre(c) cre(d) des(b) des(f) 
 (   0.50000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (   0.25000) t1(a,b,c,d) v(e,f,a,b) cre(c) cre(d) des(e) des(f) 
 (   1.00000) t1(a,b,c,d) v(e,f,a,e) cre(b) cre(f) des(c) des(d) 
 (   0.50000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (   0.12500) t1(a,b,c,d) v(a,b,e,f) cre(e) cre(f) des(c) des(d) 
 (   0.50000) t1(a,b,c,d) v(a,e,e,f) cre(c) cre(d) des(b) des(f) 
 (   0.12500) t1(a,b,c,d) v(e,f,a,b) cre(c) cre(d) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,a,e) cre(b) cre(f) des(c) des(d) 
 (  -0.50000) t1(a,b) v(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (  -0.50000) t1(a,b) v(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (   0.50000) t1(a,b) v(a,c,d,e) cre(d) cre(e) des(b) des(c) 
 (   0.50000) t1(a,b) v(c,d,a,e) cre(b) cre(e) des(c) des(d) 
 (  -0.50000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (  -0.25000) t1(a,b,c,d) v(c,d,e,f) cre(e) cre(f) des(a) des(b) 
 (  -1.00000) t1(a,b,c,d) v(c,e,e,f) cre(a) cre(b) des(d) des(f) 
 (  -0.25000) t1(a,b,c,d) v(e,f,c,d) cre(a) cre(b) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (  -1.00000) t1(a,b,c,d) v(e,f,c,e) cre(d) cre(f) des(a) des(b) 
 (  -1.00000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (   1.00000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (  -1.00000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (   1.00000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(b,e,e,f) cre(c) cre(d) des(a) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,b,e) cre(a) cre(f) des(c) des(d) 
 (  -0.12500) t1(a,b,c,d) v(c,d,e,f) cre(e) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(c,e,e,f) cre(a) cre(b) des(d) des(f) 
 (  -0.12500) t1(a,b,c,d) v(e,f,c,d) cre(a) cre(b) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,c,e) cre(d) cre(f) des(a) des(b) 
 (   0.50000) t1(a,b,c,d) v(d,e,e,f) cre(a) cre(b) des(c) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,d,e) cre(c) cre(f) des(a) des(b) 
 (  -0.50000) t1(a,b,c,d) v(a,e,f,g) cre(b) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.25000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (  -0.50000) t1(a,b,c,d) v(e,f,a,g) cre(c) cre(d) cre(g) des(b) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(a,e,f,g) cre(b) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.25000) t1(a,b,c,d) v(e,f,a,g) cre(c) cre(d) cre(g) des(b) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (   0.50000) t1(a,b,c,d) v(c,e,f,g) cre(d) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(e,f,c,g) cre(a) cre(b) cre(g) des(d) des(e) des(f) 
 (   0.50000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (  -0.50000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.50000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (  -0.50000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(b,e,f,g) cre(a) cre(f) cre(g) des(c) des(d) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,b,g) cre(c) cre(d) cre(g) des(a) des(e) des(f) 
 (   0.25000) t1(a,b,c,d) v(c,e,f,g) cre(d) cre(f) cre(g) des(a) des(b) des(e) 
 (   0.25000) t1(a,b,c,d) v(e,f,c,g) cre(a) cre(b) cre(g) des(d) des(e) des(f) 
 (  -0.25000) t1(a,b,c,d) v(d,e,f,g) cre(c) cre(f) cre(g) des(a) des(b) des(e) 
 (  -0.25000) t1(a,b,c,d) v(e,f,d,g) cre(a) cre(b) cre(g) des(c) des(e) des(f) 
First Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) kdelta(I,J) v(K,X,Y,Z) 
 (   1.00000) kdelta(I,K) v(J,X,Y,Z) 
 (  -1.00000) kdelta(X,Y) v(J,K,I,Z) 
 (   1.00000) kdelta(X,Z) v(J,K,I,Y) 
 (  -1.00000) e(J) kdelta(I,K) t1(J,X,Y,Z) 
 (   1.00000) e(K) kdelta(I,J) t1(K,X,Y,Z) 
 (   1.00000) h(X,x) kdelta(I,J) t1(K,x,Y,Z) 
 (  -1.00000) h(X,x) kdelta(I,K) t1(J,x,Y,Z) 
 (   1.00000) h(Y,x) kdelta(I,J) t1(K,X,Z,x) 
 (  -1.00000) h(Y,x) kdelta(I,K) t1(J,X,Z,x) 
 (  -1.00000) h(Z,x) kdelta(I,J) t1(K,X,Y,x) 
 (   1.00000) h(Z,x) kdelta(I,K) t1(J,X,Y,x) 
 (  -1.00000) kdelta(I,J) t1(K,X,Y,x) v(i,Z,i,x) 
 (   1.00000) kdelta(I,J) t1(K,X,Z,x) v(i,Y,i,x) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Y,Z) 
 (   1.00000) kdelta(I,J) t1(K,x) v(X,x,Y,Z) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,Z) v(i,x,i,X) 
 (   1.00000) kdelta(I,K) t1(J,X,Y,x) v(i,Z,i,x) 
 (  -1.00000) kdelta(I,K) t1(J,X,Z,x) v(i,Y,i,x) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Y,Z) 
 (  -1.00000) kdelta(I,K) t1(J,x) v(X,x,Y,Z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,Z) v(i,x,i,X) 
 (  -1.00000) v(J,K,I,Y) cre(X) des(Z) 
 (   1.00000) v(J,K,I,Z) cre(X) des(Y) 
 (   1.00000) kdelta(I,J) v(K,X,Y,x) cre(x) des(Z) 
 (  -1.00000) kdelta(I,J) v(K,X,Z,x) cre(x) des(Y) 
 (  -1.00000) kdelta(I,K) v(J,X,Y,x) cre(x) des(Z) 
 (   1.00000) kdelta(I,K) v(J,X,Z,x) cre(x) des(Y) 
 (   1.00000) kdelta(X,Y) v(J,K,I,x) cre(x) des(Z) 
 (  -1.00000) kdelta(X,Z) v(J,K,I,x) cre(x) des(Y) 
 (   1.00000) e(J) kdelta(I,K) t1(J,X,Y,x) cre(x) des(Z) 
 (  -1.00000) e(J) kdelta(I,K) t1(J,X,Z,x) cre(x) des(Y) 
 (  -1.00000) e(K) kdelta(I,J) t1(K,X,Y,x) cre(x) des(Z) 
 (   1.00000) e(K) kdelta(I,J) t1(K,X,Z,x) cre(x) des(Y) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(K,x,Y,y) cre(y) des(Z) 
 (   1.00000) h(X,x) kdelta(I,J) t1(K,x,Z,y) cre(y) des(Y) 
 (   1.00000) h(X,x) kdelta(I,K) t1(J,x,Y,y) cre(y) des(Z) 
 (  -1.00000) h(X,x) kdelta(I,K) t1(J,x,Z,y) cre(y) des(Y) 
 (   1.00000) h(Y,x) kdelta(I,J) t1(K,X,x,y) cre(y) des(Z) 
 (  -1.00000) h(Y,x) kdelta(I,K) t1(J,X,x,y) cre(y) des(Z) 
 (  -1.00000) h(Z,x) kdelta(I,J) t1(K,X,x,y) cre(y) des(Y) 
 (   1.00000) h(Z,x) kdelta(I,K) t1(J,X,x,y) cre(y) des(Y) 
 (   1.00000) h(x,y) kdelta(I,J) t1(K,X,Y,x) cre(y) des(Z) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(K,X,Z,x) cre(y) des(Y) 
 (  -1.00000) h(x,y) kdelta(I,K) t1(J,X,Y,x) cre(y) des(Z) 
 (   1.00000) h(x,y) kdelta(I,K) t1(J,X,Z,x) cre(y) des(Y) 
 (  -1.00000) kdelta(I,J) t1(K,X,Y,x) v(x,y,Z,z) cre(z) des(y) 
 (   1.00000) kdelta(I,J) t1(K,X,Y,x) v(i,y,i,x) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,X,Z,x) v(x,y,Y,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,J) t1(K,X,Z,x) v(i,y,i,x) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(i,Y,i,x) cre(y) des(Z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(i,Z,i,x) cre(y) des(Y) 
 (   0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Y,z) cre(z) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Z,z) cre(z) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Y,Z) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x) v(X,x,Y,y) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,x) v(X,x,Z,y) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,Z) v(X,y,x,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,y,Z,z) cre(z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,z,Z,x) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x,Y,y) v(i,x,i,X) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,y,Y,z) cre(z) des(x) 
 (  -1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,z,Y,x) cre(y) des(z) 
 (   1.00000) kdelta(I,J) t1(K,x,Z,y) v(i,x,i,X) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Y,Z) cre(z) des(x) 
 (   1.00000) kdelta(I,K) t1(J,X,Y,x) v(x,y,Z,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,K) t1(J,X,Y,x) v(i,y,i,x) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,X,Z,x) v(x,y,Y,z) cre(z) des(y) 
 (   1.00000) kdelta(I,K) t1(J,X,Z,x) v(i,y,i,x) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(i,Y,i,x) cre(y) des(Z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(i,Z,i,x) cre(y) des(Y) 
 (  -0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Y,z) cre(z) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Z,z) cre(z) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Y,Z) cre(y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x) v(X,x,Y,y) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,x) v(X,x,Z,y) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,Z) v(X,y,x,z) cre(z) des(y) 
 (   1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,y,Z,z) cre(z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,z,Z,x) cre(y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x,Y,y) v(i,x,i,X) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,y,Y,z) cre(z) des(x) 
 (   1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,z,Y,x) cre(y) des(z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Z,y) v(i,x,i,X) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Y,Z) cre(z) des(x) 
 (   1.00000) v(J,K,I,x) cre(X) cre(x) des(Y) des(Z) 
 (   0.50000) kdelta(I,J) v(K,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) kdelta(I,K) v(J,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (   0.50000) e(J) kdelta(I,K) t1(J,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) e(K) kdelta(I,J) t1(K,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) h(X,x) kdelta(I,J) t1(K,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) h(X,x) kdelta(I,K) t1(J,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   1.00000) h(x,y) kdelta(I,J) t1(K,X,x,z) cre(y) cre(z) des(Y) des(Z) 
 (  -1.00000) h(x,y) kdelta(I,K) t1(J,X,x,z) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,Y,x) v(x,y,z,w) cre(z) cre(w) des(Z) des(y) 
 (   0.50000) kdelta(I,J) t1(K,X,Z,x) v(x,y,z,w) cre(z) cre(w) des(Y) des(y) 
 (   0.25000) kdelta(I,J) t1(K,X,x,y) v(x,y,z,w) cre(z) cre(w) des(Y) des(Z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Y,w) cre(y) cre(w) des(Z) des(z) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Z,w) cre(y) cre(w) des(Y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(i,z,i,x) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,x) v(X,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,x,Y,y) v(X,y,z,w) cre(z) cre(w) des(Z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,z,x,w) cre(y) cre(w) des(Z) des(z) 
 (   0.50000) kdelta(I,J) t1(K,x,Z,y) v(X,y,z,w) cre(z) cre(w) des(Y) des(x) 
 (  -1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,z,x,w) cre(y) cre(w) des(Y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Y,w) cre(z) cre(w) des(Z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Z,w) cre(z) cre(w) des(Y) des(x) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,Y,x) cre(y) cre(z) des(Z) des(w) 
 (   0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,Z,x) cre(y) cre(z) des(Y) des(w) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(i,x,i,X) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,X,Y,x) v(x,y,z,w) cre(z) cre(w) des(Z) des(y) 
 (  -0.50000) kdelta(I,K) t1(J,X,Z,x) v(x,y,z,w) cre(z) cre(w) des(Y) des(y) 
 (  -0.25000) kdelta(I,K) t1(J,X,x,y) v(x,y,z,w) cre(z) cre(w) des(Y) des(Z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Y,w) cre(y) cre(w) des(Z) des(z) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Z,w) cre(y) cre(w) des(Y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(i,z,i,x) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,x) v(X,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,x,Y,y) v(X,y,z,w) cre(z) cre(w) des(Z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,z,x,w) cre(y) cre(w) des(Z) des(z) 
 (  -0.50000) kdelta(I,K) t1(J,x,Z,y) v(X,y,z,w) cre(z) cre(w) des(Y) des(x) 
 (   1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,z,x,w) cre(y) cre(w) des(Y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Y,w) cre(z) cre(w) des(Z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Z,w) cre(z) cre(w) des(Y) des(x) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,Y,x) cre(y) cre(z) des(Z) des(w) 
 (  -0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,Z,x) cre(y) cre(z) des(Y) des(w) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(i,x,i,X) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,z,w,u) cre(y) cre(w) cre(u) des(Y) des(Z) des(z) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,y,w,u) cre(z) cre(w) cre(u) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,x,u) cre(y) cre(z) cre(u) des(Y) des(Z) des(w) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,z,w,u) cre(y) cre(w) cre(u) des(Y) des(Z) des(z) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,y,w,u) cre(z) cre(w) cre(u) des(Y) des(Z) des(x) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,x,u) cre(y) cre(z) cre(u) des(Y) des(Z) des(w) 

Total terms : 131
SQA automation time :  10.631 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =- np.einsum('IJ, KXYZ->JKYZIX', np.identity(ncore_so), v_caaa_so, optimize = True)
temp += np.einsum('IK, JXYZ->JKYZIX', np.identity(ncore_so), v_caaa_so, optimize = True)
temp -= np.einsum('XY, JKIZ->JKYZIX', np.identity(ncas_so), v_ccca_so, optimize = True)
temp += np.einsum('XZ, JKIY->JKYZIX', np.identity(ncas_so), v_ccca_so, optimize = True)
temp -= np.einsum('J, IK, JXYZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp += np.einsum('K, IJ, KXYZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp += np.einsum('Xx, IJ, KxYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp -= np.einsum('Xx, IK, JxYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp += np.einsum('Yx, IJ, KXZx->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp -= np.einsum('Yx, IK, JXZx->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp -= np.einsum('Zx, IJ, KXYx->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp += np.einsum('Zx, IK, JXYx->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, optimize = True)
temp -= np.einsum('IJ, KXYx, iZix->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp += np.einsum('IJ, KXZx, iYix->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, KXxy, xyYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, optimize = True)
temp += np.einsum('IJ, Kx, XxYZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, optimize = True)
temp += np.einsum('IJ, KxYZ, ixiX->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp += np.einsum('IK, JXYx, iZix->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp -= np.einsum('IK, JXZx, iYix->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp += 0.5 * np.einsum('IK, JXxy, xyYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, optimize = True)
temp -= np.einsum('IK, Jx, XxYZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, optimize = True)
temp -= np.einsum('IK, JxYZ, ixiX->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, optimize = True)
temp -= np.einsum('JKIY, XZ->JKYZIX', v_ccca_so, rdm_ca_so, optimize = True)
temp += np.einsum('JKIZ, XY->JKYZIX', v_ccca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KXYx, xZ->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KXZx, xY->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JXYx, xZ->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JXZx, xY->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('XY, JKIx, xZ->JKYZIX', np.identity(ncas_so), v_ccca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('XZ, JKIx, xY->JKYZIX', np.identity(ncas_so), v_ccca_so, rdm_ca_so, optimize = True)
temp += np.einsum('J, IK, JXYx, xZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('J, IK, JXZx, xY->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('K, IJ, KXYx, xZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('K, IJ, KXZx, xY->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Xx, IJ, KxYy, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Xx, IJ, KxZy, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Xx, IK, JxYy, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Xx, IK, JxZy, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Yx, IJ, KXxy, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Yx, IK, JXxy, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('Zx, IJ, KXxy, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('Zx, IK, JXxy, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('xy, IJ, KXYx, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IJ, KXZx, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('xy, IK, JXYx, yZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp += np.einsum('xy, IK, JXZx, yY->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KXYx, xyZz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KXYx, iyix, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KXZx, xyYz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KXZx, iyix, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KXxy, iYix, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KXxy, iZix, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('IJ, KXxy, xyYz, zZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, KXxy, xyZz, zY->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KXxy, xzYZ, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, Kx, XxYy, yZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, Kx, XxZy, yY->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KxYZ, Xyxz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KxYy, XyZz, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KxYy, XzZx, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KxYy, ixiX, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KxZy, XyYz, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IJ, KxZy, XzYx, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, KxZy, ixiX, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IJ, Kxyz, XyYZ, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JXYx, xyZz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JXYx, iyix, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JXZx, xyYz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JXZx, iyix, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JXxy, iYix, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JXxy, iZix, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= 0.5 * np.einsum('IK, JXxy, xyYz, zZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += 0.5 * np.einsum('IK, JXxy, xyZz, zY->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JXxy, xzYZ, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, Jx, XxYy, yZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, Jx, XxZy, yY->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JxYZ, Xyxz, zy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JxYy, XyZz, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JxYy, XzZx, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JxYy, ixiX, yZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JxZy, XyYz, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('IK, JxZy, XzYx, yz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, JxZy, ixiX, yY->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('IK, Jxyz, XyYZ, zx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
temp += np.einsum('JKIx, XxYZ->JKYZIX', v_ccca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IJ, KXxy, xyYZ->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IK, JXxy, xyYZ->JKYZIX', np.identity(ncore_so), v_caaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('J, IK, JXxy, xyYZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('K, IJ, KXxy, xyYZ->JKYZIX', e_core_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('Xx, IJ, Kxyz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('Xx, IK, Jxyz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp += np.einsum('xy, IJ, KXxz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xy, IK, JXxz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore_so), t1_caaa, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, KXYx, xyzw, zwZy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IJ, KXZx, xyzw, zwYy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('IJ, KXxy, xyzw, zwYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IJ, KXxy, xzYw, ywZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IJ, KXxy, xzZw, ywYz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IJ, KXxy, izix, yzYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, Kx, Xxyz, yzYZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, KxYy, Xyzw, zwZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IJ, KxYy, Xzxw, ywZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IJ, KxZy, Xyzw, zwYx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IJ, KxZy, Xzxw, ywYz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IJ, Kxyz, XyYw, zwZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IJ, Kxyz, XyZw, zwYx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, Kxyz, XwYx, yzZw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IJ, Kxyz, XwZx, yzYw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, Kxyz, ixiX, yzYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, JXYx, xyzw, zwZy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IK, JXZx, xyzw, zwYy->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('IK, JXxy, xyzw, zwYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IK, JXxy, xzYw, ywZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IK, JXxy, xzZw, ywYz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IK, JXxy, izix, yzYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, Jx, Xxyz, yzYZ->JKYZIX', np.identity(ncore_so), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, JxYy, Xyzw, zwZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IK, JxYy, Xzxw, ywZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IK, JxZy, Xyzw, zwYx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IK, JxZy, Xzxw, ywYz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('IK, Jxyz, XyYw, zwZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('IK, Jxyz, XyZw, zwYx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, Jxyz, XwYx, yzZw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IK, Jxyz, XwZx, yzYw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, Jxyz, ixiX, yzYZ->JKYZIX', np.identity(ncore_so), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, KXxy, xzwu, ywuYZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, Kxyz, Xywu, zwuYZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('IJ, Kxyz, Xwxu, yzuYZw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, JXxy, xzwu, ywuYZz->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, Jxyz, Xywu, zwuYZx->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('IK, Jxyz, Xwxu, yzuYZw->JKYZIX', np.identity(ncore_so), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
