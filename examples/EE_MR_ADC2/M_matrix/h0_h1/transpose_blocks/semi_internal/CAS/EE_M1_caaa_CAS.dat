
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) h(J,Y) cre(X) des(Z) 
 (  -1.00000) h(J,Z) cre(X) des(Y) 
 (   1.00000) v(J,x,Y,Z) cre(X) des(x) 
 (  -1.00000) v(J,i,i,Y) cre(X) des(Z) 
 (   1.00000) v(J,i,i,Z) cre(X) des(Y) 
 (  -1.00000) e(J) t1(J,Y) cre(X) des(Z) 
 (   1.00000) e(J) t1(J,Z) cre(X) des(Y) 
 (  -1.00000) e(J) t1(J,x,Y,Z) cre(X) des(x) 
 (   1.00000) h(Y,x) t1(J,x) cre(X) des(Z) 
 (  -1.00000) h(Y,x) t1(J,y,Z,x) cre(X) des(y) 
 (  -1.00000) h(Z,x) t1(J,x) cre(X) des(Y) 
 (   1.00000) h(Z,x) t1(J,y,Y,x) cre(X) des(y) 
 (  -1.00000) h(x,y) t1(J,x,Y,Z) cre(X) des(y) 
 (   1.00000) t1(J,x) v(i,Y,i,x) cre(X) des(Z) 
 (  -1.00000) t1(J,x) v(i,Z,i,x) cre(X) des(Y) 
 (   1.00000) t1(J,x) v(x,y,Y,Z) cre(X) des(y) 
 (  -1.00000) t1(J,x,Y,Z) v(i,x,i,y) cre(X) des(y) 
 (   1.00000) t1(J,x,Y,y) v(i,Z,i,y) cre(X) des(x) 
 (  -1.00000) t1(J,x,Z,y) v(i,Y,i,y) cre(X) des(x) 
 (   0.50000) t1(J,x,y,z) v(y,z,Y,Z) cre(X) des(x) 
 (  -1.00000) h(J,x) cre(X) cre(x) des(Y) des(Z) 
 (  -1.00000) v(J,x,Y,y) cre(X) cre(y) des(Z) des(x) 
 (   1.00000) v(J,x,Z,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) v(J,i,i,x) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) e(J) t1(J,x) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) e(J) t1(J,x,Y,y) cre(X) cre(y) des(Z) des(x) 
 (  -1.00000) e(J) t1(J,x,Z,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) h(Y,x) t1(J,y,x,z) cre(X) cre(z) des(Z) des(y) 
 (   1.00000) h(Z,x) t1(J,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) h(x,y) t1(J,x) cre(X) cre(y) des(Y) des(Z) 
 (   1.00000) h(x,y) t1(J,x,Y,z) cre(X) cre(z) des(Z) des(y) 
 (  -1.00000) h(x,y) t1(J,x,Z,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) h(x,y) t1(J,z,Y,x) cre(X) cre(y) des(Z) des(z) 
 (   1.00000) h(x,y) t1(J,z,Z,x) cre(X) cre(y) des(Y) des(z) 
 (  -1.00000) t1(J,x) v(x,y,Y,z) cre(X) cre(z) des(Z) des(y) 
 (   1.00000) t1(J,x) v(x,y,Z,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) t1(J,x) v(i,y,i,x) cre(X) cre(y) des(Y) des(Z) 
 (   0.50000) t1(J,x,Y,Z) v(y,z,x,w) cre(X) cre(w) des(y) des(z) 
 (   1.00000) t1(J,x,Y,y) v(i,x,i,z) cre(X) cre(y) des(Z) des(z) 
 (  -1.00000) t1(J,x,Y,y) v(y,z,Z,w) cre(X) cre(w) des(x) des(z) 
 (   0.50000) t1(J,x,Y,y) v(z,w,Z,x) cre(X) cre(y) des(z) des(w) 
 (  -1.00000) t1(J,x,Y,y) v(i,z,i,y) cre(X) cre(z) des(Z) des(x) 
 (  -1.00000) t1(J,x,Z,y) v(i,x,i,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) t1(J,x,Z,y) v(y,z,Y,w) cre(X) cre(w) des(x) des(z) 
 (  -0.50000) t1(J,x,Z,y) v(z,w,Y,x) cre(X) cre(y) des(z) des(w) 
 (   1.00000) t1(J,x,Z,y) v(i,z,i,y) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(J,x,y,z) v(i,Y,i,y) cre(X) cre(z) des(Z) des(x) 
 (   1.00000) t1(J,x,y,z) v(i,Z,i,y) cre(X) cre(z) des(Y) des(x) 
 (  -0.50000) t1(J,x,y,z) v(y,z,Y,w) cre(X) cre(w) des(Z) des(x) 
 (   0.50000) t1(J,x,y,z) v(y,z,Z,w) cre(X) cre(w) des(Y) des(x) 
 (   1.00000) t1(J,x,y,z) v(y,w,Y,Z) cre(X) cre(z) des(x) des(w) 
 (  -0.50000) v(J,x,y,z) cre(X) cre(y) cre(z) des(Y) des(Z) des(x) 
 (   0.50000) e(J) t1(J,x,y,z) cre(X) cre(y) cre(z) des(Y) des(Z) des(x) 
 (   0.50000) h(x,y) t1(J,x,z,w) cre(X) cre(z) cre(w) des(Y) des(Z) des(y) 
 (  -1.00000) h(x,y) t1(J,z,x,w) cre(X) cre(y) cre(w) des(Y) des(Z) des(z) 
 (  -0.50000) t1(J,x) v(x,y,z,w) cre(X) cre(z) cre(w) des(Y) des(Z) des(y) 
 (  -0.50000) t1(J,x,Y,y) v(y,z,w,u) cre(X) cre(w) cre(u) des(Z) des(x) des(z) 
 (   0.50000) t1(J,x,Y,y) v(z,w,x,u) cre(X) cre(y) cre(u) des(Z) des(z) des(w) 
 (   0.50000) t1(J,x,Z,y) v(y,z,w,u) cre(X) cre(w) cre(u) des(Y) des(x) des(z) 
 (  -0.50000) t1(J,x,Z,y) v(z,w,x,u) cre(X) cre(y) cre(u) des(Y) des(z) des(w) 
 (   0.50000) t1(J,x,y,z) v(i,x,i,w) cre(X) cre(y) cre(z) des(Y) des(Z) des(w) 
 (  -0.25000) t1(J,x,y,z) v(y,z,w,u) cre(X) cre(w) cre(u) des(Y) des(Z) des(x) 
 (  -1.00000) t1(J,x,y,z) v(y,w,Y,u) cre(X) cre(z) cre(u) des(Z) des(x) des(w) 
 (   1.00000) t1(J,x,y,z) v(y,w,Z,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (  -0.25000) t1(J,x,y,z) v(w,u,Y,x) cre(X) cre(y) cre(z) des(Z) des(w) des(u) 
 (   0.25000) t1(J,x,y,z) v(w,u,Z,x) cre(X) cre(y) cre(z) des(Y) des(w) des(u) 
 (   1.00000) t1(J,x,y,z) v(i,w,i,y) cre(X) cre(z) cre(w) des(Y) des(Z) des(x) 
 (  -0.50000) t1(J,x,y,z) v(y,w,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(Z) des(x) des(w) 
 (  -0.25000) t1(J,x,y,z) v(w,u,x,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(Z) des(w) des(u) 

Total terms : 69
SQA automation time :  1.683 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =  np.einsum('JY, IXZ->JXYZI', h_ca_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('JZ, IXY->JXYZI', h_ca_so, trdm_ca_so, optimize = True)
    temp += np.einsum('JxYZ, IXx->JXYZI', v_caaa_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('JiiY, IXZ->JXYZI', v_ccca_so, trdm_ca_so, optimize = True)
    temp += np.einsum('JiiZ, IXY->JXYZI', v_ccca_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('J, JY, IXZ->JXYZI', e_core_so, t1_ca, trdm_ca_so, optimize = True)
    temp += np.einsum('J, JZ, IXY->JXYZI', e_core_so, t1_ca, trdm_ca_so, optimize = True)
    temp -= np.einsum('J, JxYZ, IXx->JXYZI', e_core_so, t1_caaa, trdm_ca_so, optimize = True)
    temp += np.einsum('Yx, Jx, IXZ->JXYZI', h_aa_so, t1_ca, trdm_ca_so, optimize = True)
    temp -= np.einsum('Yx, JyZx, IXy->JXYZI', h_aa_so, t1_caaa, trdm_ca_so, optimize = True)
    temp -= np.einsum('Zx, Jx, IXY->JXYZI', h_aa_so, t1_ca, trdm_ca_so, optimize = True)
    temp += np.einsum('Zx, JyYx, IXy->JXYZI', h_aa_so, t1_caaa, trdm_ca_so, optimize = True)
    temp -= np.einsum('xy, JxYZ, IXy->JXYZI', h_aa_so, t1_caaa, trdm_ca_so, optimize = True)
    temp += np.einsum('Jx, iYix, IXZ->JXYZI', t1_ca, v_caca_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('Jx, iZix, IXY->JXYZI', t1_ca, v_caca_so, trdm_ca_so, optimize = True)
    temp += np.einsum('Jx, xyYZ, IXy->JXYZI', t1_ca, v_aaaa_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('JxYZ, ixiy, IXy->JXYZI', t1_caaa, v_caca_so, trdm_ca_so, optimize = True)
    temp += np.einsum('JxYy, iZiy, IXx->JXYZI', t1_caaa, v_caca_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('JxZy, iYiy, IXx->JXYZI', t1_caaa, v_caca_so, trdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('Jxyz, yzYZ, IXx->JXYZI', t1_caaa, v_aaaa_so, trdm_ca_so, optimize = True)
    temp -= np.einsum('Jx, IXxYZ->JXYZI', h_ca_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('JxYy, IXyZx->JXYZI', v_caaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('JxZy, IXyYx->JXYZI', v_caaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('Jiix, IXxYZ->JXYZI', v_ccca_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('J, Jx, IXxYZ->JXYZI', e_core_so, t1_ca, trdm_ccaa_so, optimize = True)
    temp += np.einsum('J, JxYy, IXyZx->JXYZI', e_core_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('J, JxZy, IXyYx->JXYZI', e_core_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('Yx, Jyxz, IXzZy->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp += np.einsum('Zx, Jyxz, IXzYy->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('xy, Jx, IXyYZ->JXYZI', h_aa_so, t1_ca, trdm_ccaa_so, optimize = True)
    temp += np.einsum('xy, JxYz, IXzZy->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('xy, JxZz, IXzYy->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('xy, JzYx, IXyZz->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp += np.einsum('xy, JzZx, IXyYz->JXYZI', h_aa_so, t1_caaa, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('Jx, xyYz, IXzZy->JXYZI', t1_ca, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('Jx, xyZz, IXzYy->JXYZI', t1_ca, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('Jx, iyix, IXyYZ->JXYZI', t1_ca, v_caca_so, trdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('JxYZ, yzxw, IXwyz->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('JxYy, ixiz, IXyZz->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('JxYy, yzZw, IXwxz->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('JxYy, zwZx, IXyzw->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('JxYy, iziy, IXzZx->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('JxZy, ixiz, IXyYz->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('JxZy, yzYw, IXwxz->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('JxZy, zwYx, IXyzw->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('JxZy, iziy, IXzYx->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp -= np.einsum('Jxyz, iYiy, IXzZx->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('Jxyz, iZiy, IXzYx->JXYZI', t1_caaa, v_caca_so, trdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Jxyz, yzYw, IXwZx->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Jxyz, yzZw, IXwYx->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp += np.einsum('Jxyz, ywYZ, IXzxw->JXYZI', t1_caaa, v_aaaa_so, trdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Jxyz, IXyzYZx->JXYZI', v_caaa_so, trdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('J, Jxyz, IXyzYZx->JXYZI', e_core_so, t1_caaa, trdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('xy, Jxzw, IXzwYZy->JXYZI', h_aa_so, t1_caaa, trdm_cccaaa_so, optimize = True)
    temp -= np.einsum('xy, Jzxw, IXywYZz->JXYZI', h_aa_so, t1_caaa, trdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Jx, xyzw, IXzwYZy->JXYZI', t1_ca, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('JxYy, yzwu, IXwuZxz->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('JxYy, zwxu, IXyuZzw->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('JxZy, yzwu, IXwuYxz->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('JxZy, zwxu, IXyuYzw->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Jxyz, ixiw, IXyzYZw->JXYZI', t1_caaa, v_caca_so, trdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Jxyz, yzwu, IXwuYZx->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp -= np.einsum('Jxyz, ywYu, IXzuZxw->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += np.einsum('Jxyz, ywZu, IXzuYxw->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Jxyz, wuYx, IXyzZwu->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Jxyz, wuZx, IXyzYwu->JXYZI', t1_caaa, v_aaaa_so, trdm_cccaaa_so, optimize = True)
    temp += np.einsum('Jxyz, iwiy, IXzwYZx->JXYZI', t1_caaa, v_caca_so, trdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Jxyz, ywuv, IXzuvYZxw->JXYZI', t1_caaa, v_aaaa_so, trdm_ccccaaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Jxyz, wuxv, IXyzvYZwu->JXYZI', t1_caaa, v_aaaa_so, trdm_ccccaaaa_so, optimize = True)
