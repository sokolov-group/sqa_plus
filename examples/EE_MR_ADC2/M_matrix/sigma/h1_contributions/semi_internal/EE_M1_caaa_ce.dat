
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) X(I,a) h(Y,a) cre(X) des(Z) 
 (  -1.00000) X(I,a) h(Z,a) cre(X) des(Y) 
 (  -1.00000) X(I,a) v(Y,Z,x,a) cre(X) des(x) 
 (   1.00000) X(I,a) v(i,Y,i,a) cre(X) des(Z) 
 (  -1.00000) X(I,a) v(i,Z,i,a) cre(X) des(Y) 
 (  -1.00000) X(i,a) v(i,Y,I,a) cre(X) des(Z) 
 (   1.00000) X(i,a) v(i,Z,I,a) cre(X) des(Y) 
 (   1.00000) X(I,a) e(a) t1(Y,Z,a,x) cre(X) des(x) 
 (   1.00000) X(I,a) e(a) t1(Y,a) cre(X) des(Z) 
 (  -1.00000) X(I,a) e(a) t1(Z,a) cre(X) des(Y) 
 (   1.00000) X(I,a) h(Y,x) t1(Z,x,a,y) cre(X) des(y) 
 (  -1.00000) X(I,a) h(Y,x) t1(x,a) cre(X) des(Z) 
 (  -1.00000) X(I,a) h(Z,x) t1(Y,x,a,y) cre(X) des(y) 
 (   1.00000) X(I,a) h(Z,x) t1(x,a) cre(X) des(Y) 
 (   1.00000) X(I,a) h(x,y) t1(Y,Z,a,x) cre(X) des(y) 
 (   1.00000) X(I,a) t1(Y,Z,a,x) v(i,x,i,y) cre(X) des(y) 
 (  -1.00000) X(I,a) t1(Y,x,a,y) v(i,Z,i,x) cre(X) des(y) 
 (   1.00000) X(I,a) t1(Z,x,a,y) v(i,Y,i,x) cre(X) des(y) 
 (  -1.00000) X(I,a) t1(x,a) v(i,Y,i,x) cre(X) des(Z) 
 (   1.00000) X(I,a) t1(x,a) v(i,Z,i,x) cre(X) des(Y) 
 (  -1.00000) X(I,a) t1(x,a) v(x,y,Y,Z) cre(X) des(y) 
 (  -0.50000) X(I,a) t1(x,y,a,z) v(x,y,Y,Z) cre(X) des(z) 
 (  -1.00000) X(I,a) h(x,a) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) X(I,a) v(Y,y,x,a) cre(X) cre(y) des(Z) des(x) 
 (  -1.00000) X(I,a) v(Z,y,x,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) X(I,a) v(i,x,i,a) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) X(i,a) v(i,x,I,a) cre(X) cre(x) des(Y) des(Z) 
 (  -1.00000) X(I,a) e(a) t1(Y,x,a,y) cre(X) cre(x) des(Z) des(y) 
 (   1.00000) X(I,a) e(a) t1(Z,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) X(I,a) e(a) t1(x,a) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) X(I,a) h(Y,x) t1(x,y,a,z) cre(X) cre(y) des(Z) des(z) 
 (  -1.00000) X(I,a) h(Z,x) t1(x,y,a,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) X(I,a) h(x,y) t1(Y,x,a,z) cre(X) cre(y) des(Z) des(z) 
 (  -1.00000) X(I,a) h(x,y) t1(Y,z,a,x) cre(X) cre(z) des(Z) des(y) 
 (  -1.00000) X(I,a) h(x,y) t1(Z,x,a,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) X(I,a) h(x,y) t1(Z,z,a,x) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) X(I,a) h(x,y) t1(x,a) cre(X) cre(y) des(Y) des(Z) 
 (  -0.50000) X(I,a) t1(Y,Z,a,x) v(y,z,x,w) cre(X) cre(w) des(y) des(z) 
 (   1.00000) X(I,a) t1(Y,x,a,y) v(x,z,Z,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) X(I,a) t1(Y,x,a,y) v(i,y,i,z) cre(X) cre(x) des(Z) des(z) 
 (  -0.50000) X(I,a) t1(Y,x,a,y) v(z,w,Z,y) cre(X) cre(x) des(z) des(w) 
 (   1.00000) X(I,a) t1(Y,x,a,y) v(i,z,i,x) cre(X) cre(z) des(Z) des(y) 
 (  -1.00000) X(I,a) t1(Z,x,a,y) v(x,z,Y,w) cre(X) cre(w) des(y) des(z) 
 (   1.00000) X(I,a) t1(Z,x,a,y) v(i,y,i,z) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) X(I,a) t1(Z,x,a,y) v(z,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (  -1.00000) X(I,a) t1(Z,x,a,y) v(i,z,i,x) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) X(I,a) t1(x,a) v(x,y,Y,z) cre(X) cre(z) des(Z) des(y) 
 (  -1.00000) X(I,a) t1(x,a) v(x,y,Z,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) X(I,a) t1(x,a) v(i,y,i,x) cre(X) cre(y) des(Y) des(Z) 
 (   1.00000) X(I,a) t1(x,y,a,z) v(i,Y,i,x) cre(X) cre(y) des(Z) des(z) 
 (  -1.00000) X(I,a) t1(x,y,a,z) v(i,Z,i,x) cre(X) cre(y) des(Y) des(z) 
 (   0.50000) X(I,a) t1(x,y,a,z) v(x,y,Y,w) cre(X) cre(w) des(Z) des(z) 
 (  -0.50000) X(I,a) t1(x,y,a,z) v(x,y,Z,w) cre(X) cre(w) des(Y) des(z) 
 (  -1.00000) X(I,a) t1(x,y,a,z) v(x,w,Y,Z) cre(X) cre(y) des(z) des(w) 
 (   0.50000) X(I,a) v(y,z,x,a) cre(X) cre(y) cre(z) des(Y) des(Z) des(x) 
 (  -0.50000) X(I,a) e(a) t1(x,y,a,z) cre(X) cre(x) cre(y) des(Y) des(Z) des(z) 
 (   1.00000) X(I,a) h(x,y) t1(x,z,a,w) cre(X) cre(y) cre(z) des(Y) des(Z) des(w) 
 (  -0.50000) X(I,a) h(x,y) t1(z,w,a,x) cre(X) cre(z) cre(w) des(Y) des(Z) des(y) 
 (   0.50000) X(I,a) t1(Y,x,a,y) v(x,z,w,u) cre(X) cre(w) cre(u) des(Z) des(y) des(z) 
 (  -0.50000) X(I,a) t1(Y,x,a,y) v(z,w,y,u) cre(X) cre(x) cre(u) des(Z) des(z) des(w) 
 (  -0.50000) X(I,a) t1(Z,x,a,y) v(x,z,w,u) cre(X) cre(w) cre(u) des(Y) des(y) des(z) 
 (   0.50000) X(I,a) t1(Z,x,a,y) v(z,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (   0.50000) X(I,a) t1(x,a) v(x,y,z,w) cre(X) cre(z) cre(w) des(Y) des(Z) des(y) 
 (   0.25000) X(I,a) t1(x,y,a,z) v(x,y,w,u) cre(X) cre(w) cre(u) des(Y) des(Z) des(z) 
 (   1.00000) X(I,a) t1(x,y,a,z) v(x,w,Y,u) cre(X) cre(y) cre(u) des(Z) des(z) des(w) 
 (  -1.00000) X(I,a) t1(x,y,a,z) v(x,w,Z,u) cre(X) cre(y) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) X(I,a) t1(x,y,a,z) v(i,z,i,w) cre(X) cre(x) cre(y) des(Y) des(Z) des(w) 
 (   0.25000) X(I,a) t1(x,y,a,z) v(w,u,Y,z) cre(X) cre(x) cre(y) des(Z) des(w) des(u) 
 (  -0.25000) X(I,a) t1(x,y,a,z) v(w,u,Z,z) cre(X) cre(x) cre(y) des(Y) des(w) des(u) 
 (  -1.00000) X(I,a) t1(x,y,a,z) v(i,w,i,x) cre(X) cre(y) cre(w) des(Y) des(Z) des(z) 
 (   0.50000) X(I,a) t1(x,y,a,z) v(x,w,u,v) cre(X) cre(y) cre(u) cre(v) des(Y) des(Z) des(z) des(w) 
 (   0.25000) X(I,a) t1(x,y,a,z) v(w,u,z,v) cre(X) cre(x) cre(y) cre(v) des(Y) des(Z) des(w) des(u) 

Total terms : 72
SQA automation time :  0.624 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =  np.einsum('Ia, Ya, XZ->IXYZ', X, h_ae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, Za, XY->IXYZ', X, h_ae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, YZxa, Xx->IXYZ', X, v_aaae_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, iYia, XZ->IXYZ', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, iZia, XY->IXYZ', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('ia, iYIa, XZ->IXYZ', X, v_cace_so, rdm_ca_so, optimize = True)
    temp += np.einsum('ia, iZIa, XY->IXYZ', X, v_cace_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, a, YZax, Xx->IXYZ', X, e_extern_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, a, Ya, XZ->IXYZ', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, a, Za, XY->IXYZ', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, Yx, Zxay, Xy->IXYZ', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, Yx, xa, XZ->IXYZ', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, Zx, Yxay, Xy->IXYZ', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, Zx, xa, XY->IXYZ', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, xy, YZax, Xy->IXYZ', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, YZax, ixiy, Xy->IXYZ', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, Yxay, iZix, Xy->IXYZ', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, Zxay, iYix, Xy->IXYZ', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, xa, iYix, XZ->IXYZ', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ia, xa, iZix, XY->IXYZ', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, xa, xyYZ, Xy->IXYZ', X, t1_ae, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, xyaz, xyYZ, Xz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ia, xa, XxYZ->IXYZ', X, h_ae_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, Yyxa, XyZx->IXYZ', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, Zyxa, XyYx->IXYZ', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, ixia, XxYZ->IXYZ', X, v_cace_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('ia, ixIa, XxYZ->IXYZ', X, v_cace_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, a, Yxay, XxZy->IXYZ', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, a, Zxay, XxYy->IXYZ', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, a, xa, XxYZ->IXYZ', X, e_extern_so, t1_ae, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, Yx, xyaz, XyZz->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, Zx, xyaz, XyYz->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xy, Yxaz, XyZz->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, xy, Yzax, XzZy->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, xy, Zxaz, XyYz->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xy, Zzax, XzYy->IXYZ', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xy, xa, XyYZ->IXYZ', X, h_aa_so, t1_ae, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, YZax, yzxw, Xwyz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, Yxay, xzZw, Xwyz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, Yxay, iyiz, XxZz->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, Yxay, zwZy, Xxzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, Yxay, izix, XzZy->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, Zxay, xzYw, Xwyz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, Zxay, iyiz, XxYz->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, Zxay, zwYy, Xxzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, Zxay, izix, XzYy->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xa, xyYz, XzZy->IXYZ', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, xa, xyZz, XzYy->IXYZ', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xa, iyix, XyYZ->IXYZ', X, t1_ae, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ia, xyaz, iYix, XyZz->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, xyaz, iZix, XyYz->IXYZ', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, xyaz, xyYw, XwZz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, xyaz, xyZw, XwYz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ia, xyaz, xwYZ, Xyzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, yzxa, XyzYZx->IXYZ', X, v_aaae_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, a, xyaz, XxyYZz->IXYZ', X, e_extern_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ia, xy, xzaw, XyzYZw->IXYZ', X, h_aa_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, xy, zwax, XzwYZy->IXYZ', X, h_aa_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, Yxay, xzwu, XwuZyz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, Yxay, zwyu, XxuZzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, Zxay, xzwu, XwuYyz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, Zxay, zwyu, XxuYzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, xa, xyzw, XzwYZy->IXYZ', X, t1_ae, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ia, xyaz, xywu, XwuYZz->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ia, xyaz, xwYu, XyuZzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('Ia, xyaz, xwZu, XyuYzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ia, xyaz, iziw, XxyYZw->IXYZ', X, t1_aaea, v_caca_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ia, xyaz, wuYz, XxyZwu->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ia, xyaz, wuZz, XxyYwu->IXYZ', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('Ia, xyaz, iwix, XywYZz->IXYZ', X, t1_aaea, v_caca_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ia, xyaz, xwuv, XyuvYZzw->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ia, xyaz, wuzv, XxyvYZwu->IXYZ', X, t1_aaea, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
