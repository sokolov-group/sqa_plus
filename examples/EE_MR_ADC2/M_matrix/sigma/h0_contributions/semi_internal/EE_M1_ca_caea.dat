
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) X(I,x,a,X) h(y,a) cre(y) des(x) 
 (   1.00000) X(I,x,a,y) h(X,a) cre(y) des(x) 
 (  -1.00000) X(I,x,a,X) v(i,y,i,a) cre(y) des(x) 
 (  -1.00000) X(I,x,a,y) v(X,z,y,a) cre(z) des(x) 
 (   1.00000) X(I,x,a,y) v(i,X,i,a) cre(y) des(x) 
 (   1.00000) X(i,x,a,X) v(i,y,I,a) cre(y) des(x) 
 (  -1.00000) X(i,x,a,y) v(i,X,I,a) cre(y) des(x) 
 (  -1.00000) X(I,x,a,X) e(a) t1(y,a) cre(y) des(x) 
 (   1.00000) X(I,x,a,y) e(a) t1(X,a) cre(y) des(x) 
 (   1.00000) X(I,x,a,y) e(a) t1(X,z,a,y) cre(z) des(x) 
 (   1.00000) X(I,x,a,X) h(y,z) t1(y,a) cre(z) des(x) 
 (  -1.00000) X(I,x,a,y) h(X,z) t1(z,a) cre(y) des(x) 
 (  -1.00000) X(I,x,a,y) h(X,z) t1(z,w,a,y) cre(w) des(x) 
 (   1.00000) X(I,x,a,y) h(y,z) t1(X,w,a,z) cre(w) des(x) 
 (  -1.00000) X(I,x,a,y) h(z,w) t1(X,z,a,y) cre(w) des(x) 
 (   1.00000) X(I,x,a,X) t1(y,a) v(i,z,i,y) cre(z) des(x) 
 (  -1.00000) X(I,x,a,y) t1(X,z,a,y) v(i,w,i,z) cre(w) des(x) 
 (   1.00000) X(I,x,a,y) t1(X,z,a,w) v(i,w,i,y) cre(z) des(x) 
 (  -1.00000) X(I,x,a,y) t1(z,a) v(i,X,i,z) cre(y) des(x) 
 (   1.00000) X(I,x,a,y) t1(z,a) v(y,z,X,w) cre(w) des(x) 
 (  -1.00000) X(I,x,a,y) t1(z,w,a,y) v(i,X,i,z) cre(w) des(x) 
 (  -0.50000) X(I,x,a,y) t1(z,w,a,y) v(z,w,X,u) cre(u) des(x) 
 (  -1.00000) X(I,x,a,y) h(z,a) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) X(I,x,a,X) v(z,w,y,a) cre(z) cre(w) des(x) des(y) 
 (  -0.50000) X(I,x,a,y) v(z,w,y,a) cre(z) cre(w) des(X) des(x) 
 (   1.00000) X(I,x,a,y) v(X,w,z,a) cre(y) cre(w) des(x) des(z) 
 (  -1.00000) X(I,x,a,y) v(i,z,i,a) cre(y) cre(z) des(X) des(x) 
 (   1.00000) X(i,x,a,y) v(i,z,I,a) cre(y) cre(z) des(X) des(x) 
 (   0.50000) X(I,x,a,X) e(a) t1(y,z,a,w) cre(y) cre(z) des(x) des(w) 
 (  -1.00000) X(I,x,a,y) e(a) t1(X,z,a,w) cre(y) cre(z) des(x) des(w) 
 (  -1.00000) X(I,x,a,y) e(a) t1(z,a) cre(y) cre(z) des(X) des(x) 
 (   0.50000) X(I,x,a,y) e(a) t1(z,w,a,y) cre(z) cre(w) des(X) des(x) 
 (  -1.00000) X(I,x,a,X) h(y,z) t1(y,w,a,u) cre(z) cre(w) des(x) des(u) 
 (   0.50000) X(I,x,a,X) h(y,z) t1(w,u,a,y) cre(w) cre(u) des(x) des(z) 
 (   1.00000) X(I,x,a,y) h(X,z) t1(z,w,a,u) cre(y) cre(w) des(x) des(u) 
 (   0.50000) X(I,x,a,y) h(y,z) t1(w,u,a,z) cre(w) cre(u) des(X) des(x) 
 (   1.00000) X(I,x,a,y) h(z,w) t1(X,z,a,u) cre(y) cre(w) des(x) des(u) 
 (  -1.00000) X(I,x,a,y) h(z,w) t1(X,u,a,z) cre(y) cre(u) des(x) des(w) 
 (   1.00000) X(I,x,a,y) h(z,w) t1(z,a) cre(y) cre(w) des(X) des(x) 
 (  -1.00000) X(I,x,a,y) h(z,w) t1(z,u,a,y) cre(w) cre(u) des(X) des(x) 
 (  -0.50000) X(I,x,a,X) t1(y,a) v(y,z,w,u) cre(w) cre(u) des(x) des(z) 
 (  -0.25000) X(I,x,a,X) t1(y,z,a,w) v(y,z,u,v) cre(u) cre(v) des(x) des(w) 
 (   0.50000) X(I,x,a,X) t1(y,z,a,w) v(i,w,i,u) cre(y) cre(z) des(x) des(u) 
 (   1.00000) X(I,x,a,X) t1(y,z,a,w) v(i,u,i,y) cre(z) cre(u) des(x) des(w) 
 (   0.50000) X(I,x,a,y) t1(X,z,a,y) v(z,w,u,v) cre(u) cre(v) des(x) des(w) 
 (   0.50000) X(I,x,a,y) t1(X,z,a,w) v(y,z,u,v) cre(u) cre(v) des(x) des(w) 
 (  -1.00000) X(I,x,a,y) t1(X,z,a,w) v(y,u,w,v) cre(z) cre(v) des(x) des(u) 
 (  -1.00000) X(I,x,a,y) t1(X,z,a,w) v(i,w,i,u) cre(y) cre(z) des(x) des(u) 
 (   1.00000) X(I,x,a,y) t1(X,z,a,w) v(i,u,i,z) cre(y) cre(u) des(x) des(w) 
 (   0.50000) X(I,x,a,y) t1(z,a) v(y,z,w,u) cre(w) cre(u) des(X) des(x) 
 (   1.00000) X(I,x,a,y) t1(z,a) v(z,w,X,u) cre(y) cre(u) des(x) des(w) 
 (   1.00000) X(I,x,a,y) t1(z,a) v(i,w,i,z) cre(y) cre(w) des(X) des(x) 
 (  -0.25000) X(I,x,a,y) t1(z,w,a,y) v(z,w,u,v) cre(u) cre(v) des(X) des(x) 
 (   1.00000) X(I,x,a,y) t1(z,w,a,y) v(z,u,X,v) cre(w) cre(v) des(x) des(u) 
 (   1.00000) X(I,x,a,y) t1(z,w,a,y) v(i,u,i,z) cre(w) cre(u) des(X) des(x) 
 (   1.00000) X(I,x,a,y) t1(z,w,a,u) v(i,X,i,z) cre(y) cre(w) des(x) des(u) 
 (   1.00000) X(I,x,a,y) t1(z,w,a,u) v(y,z,X,v) cre(w) cre(v) des(x) des(u) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(y,v,X,u) cre(z) cre(w) des(x) des(v) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(z,w,X,v) cre(y) cre(v) des(x) des(u) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(i,u,i,y) cre(z) cre(w) des(X) des(x) 
 (   0.50000) X(I,x,a,y) v(w,u,z,a) cre(y) cre(w) cre(u) des(X) des(x) des(z) 
 (  -0.50000) X(I,x,a,y) e(a) t1(z,w,a,u) cre(y) cre(z) cre(w) des(X) des(x) des(u) 
 (   1.00000) X(I,x,a,y) h(z,w) t1(z,u,a,v) cre(y) cre(w) cre(u) des(X) des(x) des(v) 
 (  -0.50000) X(I,x,a,y) h(z,w) t1(u,v,a,z) cre(y) cre(u) cre(v) des(X) des(x) des(w) 
 (   0.50000) X(I,x,a,X) t1(y,z,a,w) v(y,u,v,s) cre(z) cre(v) cre(s) des(x) des(w) des(u) 
 (   0.25000) X(I,x,a,X) t1(y,z,a,w) v(u,v,w,s) cre(y) cre(z) cre(s) des(x) des(u) des(v) 
 (   0.50000) X(I,x,a,y) t1(X,z,a,w) v(z,u,v,s) cre(y) cre(v) cre(s) des(x) des(w) des(u) 
 (  -0.50000) X(I,x,a,y) t1(X,z,a,w) v(u,v,w,s) cre(y) cre(z) cre(s) des(x) des(u) des(v) 
 (   0.50000) X(I,x,a,y) t1(z,a) v(z,w,u,v) cre(y) cre(u) cre(v) des(X) des(x) des(w) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,y) v(z,u,v,s) cre(w) cre(v) cre(s) des(X) des(x) des(u) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(y,z,v,s) cre(w) cre(v) cre(s) des(X) des(x) des(u) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(y,v,u,s) cre(z) cre(w) cre(s) des(X) des(x) des(v) 
 (   0.25000) X(I,x,a,y) t1(z,w,a,u) v(z,w,v,s) cre(y) cre(v) cre(s) des(X) des(x) des(u) 
 (   1.00000) X(I,x,a,y) t1(z,w,a,u) v(z,v,X,s) cre(y) cre(w) cre(s) des(x) des(u) des(v) 
 (  -0.50000) X(I,x,a,y) t1(z,w,a,u) v(i,u,i,v) cre(y) cre(z) cre(w) des(X) des(x) des(v) 
 (   0.25000) X(I,x,a,y) t1(z,w,a,u) v(v,s,X,u) cre(y) cre(z) cre(w) des(x) des(v) des(s) 
 (  -1.00000) X(I,x,a,y) t1(z,w,a,u) v(i,v,i,z) cre(y) cre(w) cre(v) des(X) des(x) des(u) 
 (   0.50000) X(I,x,a,y) t1(z,w,a,u) v(z,v,s,t) cre(y) cre(w) cre(s) cre(t) des(X) des(x) des(u) des(v) 
 (   0.25000) X(I,x,a,y) t1(z,w,a,u) v(v,s,u,t) cre(y) cre(z) cre(w) cre(t) des(X) des(x) des(v) des(s) 

Total terms : 79
SQA automation time :  0.548 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =- np.einsum('IxaX, ya, yx->IX', X, h_ae_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, Xa, yx->IX', X, h_ae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IxaX, iyia, yx->IX', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, Xzya, zx->IX', X, v_aaae_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, iXia, yx->IX', X, v_cace_so, rdm_ca_so, optimize = True)
    temp += np.einsum('ixaX, iyIa, yx->IX', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('ixay, iXIa, yx->IX', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IxaX, a, ya, yx->IX', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, a, Xa, yx->IX', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, a, Xzay, zx->IX', X, e_extern_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('IxaX, yz, ya, zx->IX', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, Xz, za, yx->IX', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, Xz, zway, wx->IX', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, yz, Xwaz, wx->IX', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, zw, Xzay, wx->IX', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += np.einsum('IxaX, ya, iziy, zx->IX', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, Xzay, iwiz, wx->IX', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, Xzaw, iwiy, zx->IX', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, za, iXiz, yx->IX', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixay, za, yzXw, wx->IX', X, t1_ae, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, zway, iXiz, wx->IX', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, zway, zwXu, ux->IX', X, t1_aaea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, za, yzXx->IX', X, h_ae_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IxaX, zwya, zwxy->IX', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, zwya, zwXx->IX', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, Xwza, ywxz->IX', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, izia, yzXx->IX', X, v_cace_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixay, izIa, yzXx->IX', X, v_cace_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IxaX, a, yzaw, yzxw->IX', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, a, Xzaw, yzxw->IX', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, a, za, yzXx->IX', X, e_extern_so, t1_ae, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, a, zway, zwXx->IX', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IxaX, yz, ywau, zwxu->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IxaX, yz, wuay, wuxz->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, Xz, zwau, ywxu->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, yz, wuaz, wuXx->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zw, Xzau, ywxu->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, zw, Xuaz, yuxw->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zw, za, ywXx->IX', X, h_aa_so, t1_ae, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, zw, zuay, wuXx->IX', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IxaX, ya, yzwu, wuxz->IX', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('IxaX, yzaw, yzuv, uvxw->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IxaX, yzaw, iwiu, yzxu->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IxaX, yzaw, iuiy, zuxw->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, Xzay, zwuv, uvxw->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, Xzaw, yzuv, uvxw->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, Xzaw, yuwv, zvxu->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixay, Xzaw, iwiu, yzxu->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, Xzaw, iuiz, yuxw->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, za, yzwu, wuXx->IX', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, za, zwXu, yuxw->IX', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, za, iwiz, ywXx->IX', X, t1_ae, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixay, zway, zwuv, uvXx->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zway, zuXv, wvxu->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zway, iuiz, wuXx->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zwau, iXiz, ywxu->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixay, zwau, yzXv, wvxu->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, yvXu, zwxv->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, zwXv, yvxu->IX', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, iuiy, zwXx->IX', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, wuza, ywuXxz->IX', X, v_aaae_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, a, zwau, yzwXxu->IX', X, e_extern_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ixay, zw, zuav, ywuXxv->IX', X, h_aa_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, zw, uvaz, yuvXxw->IX', X, h_aa_so, t1_aaea, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IxaX, yzaw, yuvs, zvsxwu->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('IxaX, yzaw, uvws, yzsxuv->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, Xzaw, zuvs, yvsxwu->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, Xzaw, uvws, yzsxuv->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, za, zwuv, yuvXxw->IX', X, t1_ae, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zway, zuvs, wvsXxu->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, yzvs, wvsXxu->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, yvus, zwsXxv->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ixay, zwau, zwvs, yvsXxu->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ixay, zwau, zvXs, ywsxuv->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixay, zwau, iuiv, yzwXxv->IX', X, t1_aaea, v_caca_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ixay, zwau, vsXu, yzwxvs->IX', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('Ixay, zwau, iviz, ywvXxu->IX', X, t1_aaea, v_caca_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixay, zwau, zvst, ywstXxuv->IX', X, t1_aaea, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ixay, zwau, vsut, yzwtXxvs->IX', X, t1_aaea, v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
