
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) X(I,x,y,z) h(y,A) cre(z) des(x) 
 (  -0.50000) X(I,x,y,z) v(y,z,w,A) cre(w) des(x) 
 (   1.00000) X(I,x,y,z) v(i,y,i,A) cre(z) des(x) 
 (  -1.00000) X(i,x,y,z) v(I,y,i,A) cre(z) des(x) 
 (   1.00000) X(I,x,y,z) e(A) t1(y,A) cre(z) des(x) 
 (   0.50000) X(I,x,y,z) e(A) t1(y,z,A,w) cre(w) des(x) 
 (  -1.00000) X(I,x,y,z) h(y,w) t1(w,A) cre(z) des(x) 
 (   1.00000) X(I,x,y,z) h(y,w) t1(z,w,A,u) cre(u) des(x) 
 (   0.50000) X(I,x,y,z) h(w,u) t1(y,z,A,w) cre(u) des(x) 
 (  -0.50000) X(I,x,y,z) t1(w,A) v(y,z,w,u) cre(u) des(x) 
 (  -1.00000) X(I,x,y,z) t1(w,A) v(i,w,i,y) cre(z) des(x) 
 (   0.50000) X(I,x,y,z) t1(y,z,A,w) v(i,u,i,w) cre(u) des(x) 
 (  -1.00000) X(I,x,y,z) t1(y,w,A,u) v(i,w,i,z) cre(u) des(x) 
 (  -0.25000) X(I,x,y,z) t1(w,u,A,v) v(y,z,w,u) cre(v) des(x) 
 (   1.00000) X(I,x,y,z) v(y,w,u,A) cre(z) cre(u) des(x) des(w) 
 (   0.25000) X(I,x,y,z) v(w,u,x,A) cre(y) cre(z) des(w) des(u) 
 (   0.50000) X(i,x,y,z) v(I,w,i,A) cre(y) cre(z) des(x) des(w) 
 (  -1.00000) X(I,x,y,z) e(A) t1(y,w,A,u) cre(z) cre(u) des(x) des(w) 
 (  -0.25000) X(I,x,y,z) e(A) t1(w,u,A,x) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) X(I,x,y,z) h(x,w) t1(u,v,A,w) cre(y) cre(z) des(u) des(v) 
 (   1.00000) X(I,x,y,z) h(y,w) t1(w,u,A,v) cre(z) cre(v) des(x) des(u) 
 (   1.00000) X(I,x,y,z) h(w,u) t1(y,w,A,v) cre(z) cre(v) des(x) des(u) 
 (  -1.00000) X(I,x,y,z) h(w,u) t1(y,v,A,w) cre(z) cre(u) des(x) des(v) 
 (   0.50000) X(I,x,y,z) h(w,u) t1(w,v,A,x) cre(y) cre(z) des(u) des(v) 
 (   1.00000) X(I,x,y,z) t1(w,A) v(y,u,w,v) cre(z) cre(v) des(x) des(u) 
 (  -0.25000) X(I,x,y,z) t1(w,A) v(u,v,x,w) cre(y) cre(z) des(u) des(v) 
 (  -0.25000) X(I,x,y,z) t1(y,z,A,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (  -0.50000) X(I,x,y,z) t1(y,w,A,u) v(z,u,v,s) cre(v) cre(s) des(x) des(w) 
 (   1.00000) X(I,x,y,z) t1(y,w,A,u) v(z,v,w,s) cre(u) cre(s) des(x) des(v) 
 (   1.00000) X(I,x,y,z) t1(y,w,A,u) v(i,w,i,v) cre(z) cre(u) des(x) des(v) 
 (  -1.00000) X(I,x,y,z) t1(y,w,A,u) v(i,v,i,u) cre(z) cre(v) des(x) des(w) 
 (  -0.50000) X(I,x,y,z) t1(w,u,A,x) v(i,w,i,v) cre(y) cre(z) des(u) des(v) 
 (   0.12500) X(I,x,y,z) t1(w,u,A,x) v(v,s,w,u) cre(y) cre(z) des(v) des(s) 
 (  -0.25000) X(I,x,y,z) t1(w,u,A,v) v(i,x,i,v) cre(y) cre(z) des(w) des(u) 
 (  -0.50000) X(I,x,y,z) t1(w,u,A,v) v(y,z,w,s) cre(v) cre(s) des(x) des(u) 
 (   0.50000) X(I,x,y,z) t1(w,u,A,v) v(y,s,w,u) cre(z) cre(v) des(x) des(s) 
 (   1.00000) X(I,x,y,z) t1(w,u,A,v) v(i,w,i,y) cre(z) cre(v) des(x) des(u) 
 (  -0.50000) X(I,x,y,z) t1(y,w,A,u) v(u,v,s,t) cre(z) cre(s) cre(t) des(x) des(w) des(v) 
 (   0.50000) X(I,x,y,z) t1(y,w,A,u) v(v,s,w,t) cre(z) cre(u) cre(t) des(x) des(v) des(s) 
 (  -0.25000) X(I,x,y,z) t1(w,u,A,x) v(v,s,w,t) cre(y) cre(z) cre(t) des(u) des(v) des(s) 
 (   0.25000) X(I,x,y,z) t1(w,u,A,v) v(y,v,s,t) cre(z) cre(s) cre(t) des(x) des(w) des(u) 
 (   1.00000) X(I,x,y,z) t1(w,u,A,v) v(y,s,w,t) cre(z) cre(v) cre(t) des(x) des(u) des(s) 
 (  -0.25000) X(I,x,y,z) t1(w,u,A,v) v(v,s,x,t) cre(y) cre(z) cre(t) des(w) des(u) des(s) 
 (  -0.25000) X(I,x,y,z) t1(w,u,A,v) v(s,t,x,w) cre(y) cre(z) cre(v) des(u) des(s) des(t) 

Total terms : 44
SQA automation time :  0.444 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =  np.einsum('Ixyz, yA, zx->IA', X, h_ae_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, yzwA, wx->IA', X, v_aaae_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixyz, iyiA, zx->IA', X, v_cace_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('ixyz, IyiA, zx->IA', X, v_cace_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixyz, A, yA, zx->IA', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, A, yzAw, wx->IA', X, e_extern_so, t1_aaea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixyz, yw, wA, zx->IA', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixyz, yw, zwAu, ux->IA', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, wu, yzAw, ux->IA', X, h_aa_so, t1_aaea, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, wA, yzwu, ux->IA', X, t1_ae, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixyz, wA, iwiy, zx->IA', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, yzAw, iuiw, ux->IA', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixyz, ywAu, iwiz, ux->IA', X, t1_aaea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wuAv, yzwu, vx->IA', X, t1_aaea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Ixyz, ywuA, zuxw->IA', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ixyz, wuxA, yzwu->IA', X, v_aaae_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('ixyz, IwiA, yzxw->IA', X, v_cace_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixyz, A, ywAu, zuxw->IA', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, A, wuAx, yzwu->IA', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, xw, uvAw, yzuv->IA', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, yw, wuAv, zvxu->IA', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, wu, ywAv, zvxu->IA', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixyz, wu, yvAw, zuxv->IA', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, wu, wvAx, yzuv->IA', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, wA, yuwv, zvxu->IA', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wA, uvxw, yzuv->IA', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, yzAw, wuvs, vsxu->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, ywAu, zuvs, vsxw->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, ywAu, zvws, usxv->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, ywAu, iwiv, zuxv->IA', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ixyz, ywAu, iviu, zvxw->IA', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, wuAx, iwiv, yzuv->IA', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.125 * np.einsum('Ixyz, wuAx, vswu, yzvs->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wuAv, ixiv, yzwu->IA', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, wuAv, yzws, vsxu->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, wuAv, yswu, zvxs->IA', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ixyz, wuAv, iwiy, zvxu->IA', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Ixyz, ywAu, uvst, zstxwv->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Ixyz, ywAu, vswt, zutxvs->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wuAx, vswt, yztuvs->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.25 * np.einsum('Ixyz, wuAv, yvst, zstxwu->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ixyz, wuAv, yswt, zvtxus->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wuAv, vsxt, yztwus->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.25 * np.einsum('Ixyz, wuAv, stxw, yzvust->IA', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
