
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(0) ----------------------
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -0.50000) X(x,y,A,z) e(A) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) X(x,y,A,z) h(x,w) cre(X) cre(z) des(y) des(w) 
 (  -0.50000) X(x,y,A,z) h(z,w) cre(X) cre(w) des(x) des(y) 
 (  -1.00000) X(x,y,A,z) v(i,x,i,w) cre(X) cre(z) des(y) des(w) 
 (   0.25000) X(x,y,A,z) v(w,u,x,y) cre(X) cre(z) des(w) des(u) 
 (  -0.50000) X(x,y,A,z) v(i,w,i,z) cre(X) cre(w) des(x) des(y) 
 (  -0.25000) X(x,y,A,z) v(z,w,u,v) cre(X) cre(u) cre(v) des(x) des(y) des(w) 
 (  -0.50000) X(x,y,A,z) v(w,u,x,v) cre(X) cre(z) cre(v) des(y) des(w) des(u) 

Total terms : 8
SQA automation time :  0.016 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp = -0.5 * np.einsum('xyAz, A, Xzxy->XA', X, e_extern_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('xyAz, xw, Xzyw->XA', X, h_aa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyAz, zw, Xwxy->XA', X, h_aa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('xyAz, ixiw, Xzyw->XA', X, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.25 * np.einsum('xyAz, wuxy, Xzwu->XA', X, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyAz, iwiz, Xwxy->XA', X, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('xyAz, zwuv, Xuvxyw->XA', X, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyAz, wuxv, Xzvywu->XA', X, v_aaaa_so, rdm_cccaaa_so, optimize = True)
