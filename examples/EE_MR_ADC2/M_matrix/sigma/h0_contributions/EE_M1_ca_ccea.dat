
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) X(I,i,a,X) h(i,a) 
 (   1.00000) X(I,i,a,X) v(i,j,j,a) 
 (   1.00000) X(I,i,a,x) v(i,X,x,a) 
 (   0.50000) X(i,j,a,X) v(i,j,I,a) 
 (   1.00000) X(I,i,a,X) e(i) t1(i,a) 
 (  -1.00000) X(I,i,a,X) e(a) t1(i,a) 
 (   1.00000) X(I,i,a,x) e(i) t1(i,X,a,x) 
 (  -1.00000) X(I,i,a,x) e(a) t1(i,X,a,x) 
 (   1.00000) X(I,i,a,x) h(X,y) t1(i,y,a,x) 
 (  -1.00000) X(I,i,a,x) h(x,y) t1(i,X,a,y) 
 (  -1.00000) X(I,i,a,x) t1(i,X,a,y) v(j,y,j,x) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,x) v(j,X,j,y) 
 (   1.00000) X(I,i,a,x) h(i,a) cre(x) des(X) 
 (   1.00000) X(I,i,a,X) v(i,y,x,a) cre(y) des(x) 
 (  -1.00000) X(I,i,a,x) v(i,y,x,a) cre(y) des(X) 
 (  -1.00000) X(I,i,a,x) v(i,X,y,a) cre(x) des(y) 
 (  -1.00000) X(I,i,a,x) v(i,j,j,a) cre(x) des(X) 
 (  -0.50000) X(i,j,a,x) v(i,j,I,a) cre(x) des(X) 
 (   1.00000) X(I,i,a,X) e(i) t1(i,x,a,y) cre(x) des(y) 
 (  -1.00000) X(I,i,a,X) e(a) t1(i,x,a,y) cre(x) des(y) 
 (  -1.00000) X(I,i,a,x) e(i) t1(i,X,a,y) cre(x) des(y) 
 (  -1.00000) X(I,i,a,x) e(i) t1(i,a) cre(x) des(X) 
 (  -1.00000) X(I,i,a,x) e(i) t1(i,y,a,x) cre(y) des(X) 
 (   1.00000) X(I,i,a,x) e(a) t1(i,X,a,y) cre(x) des(y) 
 (   1.00000) X(I,i,a,x) e(a) t1(i,a) cre(x) des(X) 
 (   1.00000) X(I,i,a,x) e(a) t1(i,y,a,x) cre(y) des(X) 
 (   1.00000) X(I,i,a,X) h(x,y) t1(i,x,a,z) cre(y) des(z) 
 (  -1.00000) X(I,i,a,X) h(x,y) t1(i,z,a,x) cre(z) des(y) 
 (  -1.00000) X(I,i,a,x) h(X,y) t1(i,y,a,z) cre(x) des(z) 
 (   1.00000) X(I,i,a,x) h(x,y) t1(i,z,a,y) cre(z) des(X) 
 (   1.00000) X(I,i,a,x) h(y,z) t1(i,X,a,y) cre(x) des(z) 
 (  -1.00000) X(I,i,a,x) h(y,z) t1(i,y,a,x) cre(z) des(X) 
 (  -1.00000) X(I,i,a,X) t1(i,x,a,y) v(j,y,j,z) cre(x) des(z) 
 (   1.00000) X(I,i,a,X) t1(i,x,a,y) v(j,z,j,x) cre(z) des(y) 
 (  -1.00000) X(I,i,a,x) t1(i,X,a,y) v(x,z,y,w) cre(w) des(z) 
 (   1.00000) X(I,i,a,x) t1(i,X,a,y) v(j,y,j,z) cre(x) des(z) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,x) v(y,z,X,w) cre(w) des(z) 
 (  -1.00000) X(I,i,a,x) t1(i,y,a,x) v(j,z,j,y) cre(z) des(X) 
 (  -1.00000) X(I,i,a,x) t1(i,y,a,z) v(j,X,j,y) cre(x) des(z) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,z) v(x,y,X,w) cre(w) des(z) 
 (  -1.00000) X(I,i,a,x) t1(i,y,a,z) v(x,w,X,z) cre(y) des(w) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,z) v(j,z,j,x) cre(y) des(X) 
 (   1.00000) X(I,i,a,x) v(i,z,y,a) cre(x) cre(z) des(X) des(y) 
 (   1.00000) X(I,i,a,x) e(i) t1(i,y,a,z) cre(x) cre(y) des(X) des(z) 
 (  -1.00000) X(I,i,a,x) e(a) t1(i,y,a,z) cre(x) cre(y) des(X) des(z) 
 (   1.00000) X(I,i,a,x) h(y,z) t1(i,y,a,w) cre(x) cre(z) des(X) des(w) 
 (  -1.00000) X(I,i,a,x) h(y,z) t1(i,w,a,y) cre(x) cre(w) des(X) des(z) 
 (  -0.50000) X(I,i,a,X) t1(i,x,a,y) v(x,z,w,u) cre(w) cre(u) des(y) des(z) 
 (   0.50000) X(I,i,a,X) t1(i,x,a,y) v(z,w,y,u) cre(x) cre(u) des(z) des(w) 
 (  -0.50000) X(I,i,a,x) t1(i,X,a,y) v(z,w,y,u) cre(x) cre(u) des(z) des(w) 
 (   0.50000) X(I,i,a,x) t1(i,y,a,x) v(y,z,w,u) cre(w) cre(u) des(X) des(z) 
 (   0.50000) X(I,i,a,x) t1(i,y,a,z) v(x,y,w,u) cre(w) cre(u) des(X) des(z) 
 (  -1.00000) X(I,i,a,x) t1(i,y,a,z) v(x,w,z,u) cre(y) cre(u) des(X) des(w) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,z) v(y,w,X,u) cre(x) cre(u) des(z) des(w) 
 (  -1.00000) X(I,i,a,x) t1(i,y,a,z) v(j,z,j,w) cre(x) cre(y) des(X) des(w) 
 (  -0.50000) X(I,i,a,x) t1(i,y,a,z) v(w,u,X,z) cre(x) cre(y) des(w) des(u) 
 (   1.00000) X(I,i,a,x) t1(i,y,a,z) v(j,w,j,y) cre(x) cre(w) des(X) des(z) 
 (   0.50000) X(I,i,a,x) t1(i,y,a,z) v(y,w,u,v) cre(x) cre(u) cre(v) des(X) des(z) des(w) 
 (  -0.50000) X(I,i,a,x) t1(i,y,a,z) v(w,u,z,v) cre(x) cre(y) cre(v) des(X) des(w) des(u) 

Total terms : 59
SQA automation time :  0.826 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =- np.einsum('IiaX, ia->IX', X, h_ce_so, optimize = True)
    temp += np.einsum('IiaX, ijja->IX', X, v_ccce_so, optimize = True)
    temp += np.einsum('Iiax, iXxa->IX', X, v_caae_so, optimize = True)
    temp += 0.5 * np.einsum('ijaX, ijIa->IX', X, v_ccce_so, optimize = True)
    temp += np.einsum('IiaX, i, ia->IX', X, e_core_so, t1_ce, optimize = True)
    temp -= np.einsum('IiaX, a, ia->IX', X, e_extern_so, t1_ce, optimize = True)
    temp += np.einsum('Iiax, i, iXax->IX', X, e_core_so, t1_caea, optimize = True)
    temp -= np.einsum('Iiax, a, iXax->IX', X, e_extern_so, t1_caea, optimize = True)
    temp += np.einsum('Iiax, Xy, iyax->IX', X, h_aa_so, t1_caea, optimize = True)
    temp -= np.einsum('Iiax, xy, iXay->IX', X, h_aa_so, t1_caea, optimize = True)
    temp -= np.einsum('Iiax, iXay, jyjx->IX', X, t1_caea, v_caca_so, optimize = True)
    temp += np.einsum('Iiax, iyax, jXjy->IX', X, t1_caea, v_caca_so, optimize = True)
    temp += np.einsum('Iiax, ia, xX->IX', X, h_ce_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IiaX, iyxa, yx->IX', X, v_caae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iyxa, yX->IX', X, v_caae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iXya, xy->IX', X, v_caae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, ijja, xX->IX', X, v_ccce_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('ijax, ijIa, xX->IX', X, v_ccce_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IiaX, i, ixay, xy->IX', X, e_core_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('IiaX, a, ixay, xy->IX', X, e_extern_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, i, iXay, xy->IX', X, e_core_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, i, ia, xX->IX', X, e_core_so, t1_ce, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, i, iyax, yX->IX', X, e_core_so, t1_caea, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, a, iXay, xy->IX', X, e_extern_so, t1_caea, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, a, ia, xX->IX', X, e_extern_so, t1_ce, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, a, iyax, yX->IX', X, e_extern_so, t1_caea, rdm_ca_so, optimize = True)
    temp += np.einsum('IiaX, xy, ixaz, yz->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('IiaX, xy, izax, zy->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, Xy, iyaz, xz->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, xy, izay, zX->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, yz, iXay, xz->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, yz, iyax, zX->IX', X, h_aa_so, t1_caea, rdm_ca_so, optimize = True)
    temp -= np.einsum('IiaX, ixay, jyjz, xz->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IiaX, ixay, jzjx, zy->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iXay, xzyw, wz->IX', X, t1_caea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, iXay, jyjz, xz->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, iyax, yzXw, wz->IX', X, t1_caea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iyax, jzjy, zX->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iyaz, jXjy, xz->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, iyaz, xyXw, wz->IX', X, t1_caea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Iiax, iyaz, xwXz, yw->IX', X, t1_caea, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, iyaz, jzjx, yX->IX', X, t1_caea, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('Iiax, izya, xzXy->IX', X, v_caae_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Iiax, i, iyaz, xyXz->IX', X, e_core_so, t1_caea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Iiax, a, iyaz, xyXz->IX', X, e_extern_so, t1_caea, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Iiax, yz, iyaw, xzXw->IX', X, h_aa_so, t1_caea, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Iiax, yz, iway, xwXz->IX', X, h_aa_so, t1_caea, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IiaX, ixay, xzwu, wuyz->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IiaX, ixay, zwyu, xuzw->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Iiax, iXay, zwyu, xuzw->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Iiax, iyax, yzwu, wuXz->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Iiax, iyaz, xywu, wuXz->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Iiax, iyaz, xwzu, yuXw->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Iiax, iyaz, ywXu, xuzw->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Iiax, iyaz, jzjw, xyXw->IX', X, t1_caea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Iiax, iyaz, wuXz, xywu->IX', X, t1_caea, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('Iiax, iyaz, jwjy, xwXz->IX', X, t1_caea, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Iiax, iyaz, ywuv, xuvXzw->IX', X, t1_caea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Iiax, iyaz, wuzv, xyvXwu->IX', X, t1_caea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
