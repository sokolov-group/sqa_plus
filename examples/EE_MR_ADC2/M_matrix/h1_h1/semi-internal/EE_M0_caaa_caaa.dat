
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(0) ----------------------
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) kdelta(I,J) v(Y,Z,V,W) cre(U) des(X) 
 (   1.00000) h(V,Y) kdelta(I,J) kdelta(W,Z) cre(U) des(X) 
 (  -1.00000) h(V,Z) kdelta(I,J) kdelta(W,Y) cre(U) des(X) 
 (  -1.00000) h(W,Y) kdelta(I,J) kdelta(V,Z) cre(U) des(X) 
 (   1.00000) h(W,Z) kdelta(I,J) kdelta(V,Y) cre(U) des(X) 
 (   1.00000) v(i,V,i,Y) kdelta(I,J) kdelta(W,Z) cre(U) des(X) 
 (  -1.00000) v(i,V,i,Z) kdelta(I,J) kdelta(W,Y) cre(U) des(X) 
 (  -1.00000) v(i,W,i,Y) kdelta(I,J) kdelta(V,Z) cre(U) des(X) 
 (   1.00000) v(i,W,i,Z) kdelta(I,J) kdelta(V,Y) cre(U) des(X) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(U) des(X) 
 (   1.00000) e(J) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(U) des(X) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(x) des(X) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) v(i,x,i,U) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(x) des(X) 
 (   1.00000) v(i,x,i,U) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) h(V,Y) kdelta(I,J) cre(U) cre(Z) des(W) des(X) 
 (   1.00000) h(V,Z) kdelta(I,J) cre(U) cre(Y) des(W) des(X) 
 (   1.00000) h(W,Y) kdelta(I,J) cre(U) cre(Z) des(V) des(X) 
 (  -1.00000) h(W,Z) kdelta(I,J) cre(U) cre(Y) des(V) des(X) 
 (  -1.00000) kdelta(I,J) v(i,V,i,Y) cre(U) cre(Z) des(W) des(X) 
 (   1.00000) kdelta(I,J) v(i,V,i,Z) cre(U) cre(Y) des(W) des(X) 
 (   1.00000) kdelta(I,J) v(i,W,i,Y) cre(U) cre(Z) des(V) des(X) 
 (  -1.00000) kdelta(I,J) v(i,W,i,Z) cre(U) cre(Y) des(V) des(X) 
 (  -1.00000) kdelta(I,J) v(Y,Z,V,x) cre(U) cre(x) des(W) des(X) 
 (   1.00000) kdelta(I,J) v(Y,Z,W,x) cre(U) cre(x) des(V) des(X) 
 (   1.00000) kdelta(I,J) v(Y,x,V,W) cre(U) cre(Z) des(X) des(x) 
 (  -1.00000) kdelta(I,J) v(Z,x,V,W) cre(U) cre(Y) des(X) des(x) 
 (   1.00000) e(J) kdelta(I,J) kdelta(V,Y) cre(U) cre(Z) des(W) des(X) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(V,Z) cre(U) cre(Y) des(W) des(X) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(W,Y) cre(U) cre(Z) des(V) des(X) 
 (   1.00000) e(J) kdelta(I,J) kdelta(W,Z) cre(U) cre(Y) des(V) des(X) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(V,Y) cre(Z) cre(x) des(W) des(X) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(V,Z) cre(Y) cre(x) des(W) des(X) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(W,Y) cre(Z) cre(x) des(V) des(X) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(W,Z) cre(Y) cre(x) des(V) des(X) 
 (  -1.00000) h(V,x) kdelta(I,J) kdelta(W,Y) cre(U) cre(Z) des(X) des(x) 
 (   1.00000) h(V,x) kdelta(I,J) kdelta(W,Z) cre(U) cre(Y) des(X) des(x) 
 (   1.00000) h(W,x) kdelta(I,J) kdelta(V,Y) cre(U) cre(Z) des(X) des(x) 
 (  -1.00000) h(W,x) kdelta(I,J) kdelta(V,Z) cre(U) cre(Y) des(X) des(x) 
 (  -0.50000) v(U,Y,x,y) kdelta(I,J) kdelta(V,Z) cre(x) cre(y) des(W) des(X) 
 (   0.50000) v(U,Y,x,y) kdelta(I,J) kdelta(W,Z) cre(x) cre(y) des(V) des(X) 
 (   0.50000) v(U,Z,x,y) kdelta(I,J) kdelta(V,Y) cre(x) cre(y) des(W) des(X) 
 (  -0.50000) v(U,Z,x,y) kdelta(I,J) kdelta(W,Y) cre(x) cre(y) des(V) des(X) 
 (  -1.00000) v(i,V,i,x) kdelta(I,J) kdelta(W,Y) cre(U) cre(Z) des(X) des(x) 
 (   1.00000) v(i,V,i,x) kdelta(I,J) kdelta(W,Z) cre(U) cre(Y) des(X) des(x) 
 (   1.00000) v(i,W,i,x) kdelta(I,J) kdelta(V,Y) cre(U) cre(Z) des(X) des(x) 
 (  -1.00000) v(i,W,i,x) kdelta(I,J) kdelta(V,Z) cre(U) cre(Y) des(X) des(x) 
 (  -1.00000) v(Y,x,V,y) kdelta(I,J) kdelta(W,Z) cre(U) cre(y) des(X) des(x) 
 (   1.00000) v(Y,x,W,y) kdelta(I,J) kdelta(V,Z) cre(U) cre(y) des(X) des(x) 
 (   1.00000) v(Z,x,V,y) kdelta(I,J) kdelta(W,Y) cre(U) cre(y) des(X) des(x) 
 (  -1.00000) v(Z,x,W,y) kdelta(I,J) kdelta(V,Y) cre(U) cre(y) des(X) des(x) 
 (  -1.00000) v(i,x,i,U) kdelta(I,J) kdelta(V,Y) cre(Z) cre(x) des(W) des(X) 
 (   1.00000) v(i,x,i,U) kdelta(I,J) kdelta(V,Z) cre(Y) cre(x) des(W) des(X) 
 (   1.00000) v(i,x,i,U) kdelta(I,J) kdelta(W,Y) cre(Z) cre(x) des(V) des(X) 
 (  -1.00000) v(i,x,i,U) kdelta(I,J) kdelta(W,Z) cre(Y) cre(x) des(V) des(X) 
 (   0.50000) v(U,x,y,z) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) v(U,x,y,z) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(y) cre(z) des(X) des(x) 
 (   1.00000) e(J) kdelta(I,J) cre(U) cre(Y) cre(Z) des(V) des(W) des(X) 
 (   1.00000) h(U,x) kdelta(I,J) cre(Y) cre(Z) cre(x) des(V) des(W) des(X) 
 (  -1.00000) h(V,x) kdelta(I,J) cre(U) cre(Y) cre(Z) des(W) des(X) des(x) 
 (   1.00000) h(W,x) kdelta(I,J) cre(U) cre(Y) cre(Z) des(V) des(X) des(x) 
 (   0.50000) kdelta(I,J) v(U,Y,x,y) cre(Z) cre(x) cre(y) des(V) des(W) des(X) 
 (  -0.50000) kdelta(I,J) v(U,Z,x,y) cre(Y) cre(x) cre(y) des(V) des(W) des(X) 
 (  -1.00000) kdelta(I,J) v(i,V,i,x) cre(U) cre(Y) cre(Z) des(W) des(X) des(x) 
 (   1.00000) kdelta(I,J) v(i,W,i,x) cre(U) cre(Y) cre(Z) des(V) des(X) des(x) 
 (  -1.00000) kdelta(I,J) v(Y,x,V,y) cre(U) cre(Z) cre(y) des(W) des(X) des(x) 
 (   1.00000) kdelta(I,J) v(Y,x,W,y) cre(U) cre(Z) cre(y) des(V) des(X) des(x) 
 (   1.00000) kdelta(I,J) v(Z,x,V,y) cre(U) cre(Y) cre(y) des(W) des(X) des(x) 
 (  -1.00000) kdelta(I,J) v(Z,x,W,y) cre(U) cre(Y) cre(y) des(V) des(X) des(x) 
 (  -0.50000) kdelta(I,J) v(x,y,V,W) cre(U) cre(Y) cre(Z) des(X) des(x) des(y) 
 (   1.00000) kdelta(I,J) v(i,x,i,U) cre(Y) cre(Z) cre(x) des(V) des(W) des(X) 
 (  -0.50000) v(U,x,y,z) kdelta(I,J) kdelta(V,Y) cre(Z) cre(y) cre(z) des(W) des(X) des(x) 
 (   0.50000) v(U,x,y,z) kdelta(I,J) kdelta(V,Z) cre(Y) cre(y) cre(z) des(W) des(X) des(x) 
 (   0.50000) v(U,x,y,z) kdelta(I,J) kdelta(W,Y) cre(Z) cre(y) cre(z) des(V) des(X) des(x) 
 (  -0.50000) v(U,x,y,z) kdelta(I,J) kdelta(W,Z) cre(Y) cre(y) cre(z) des(V) des(X) des(x) 
 (  -0.50000) v(x,y,V,z) kdelta(I,J) kdelta(W,Y) cre(U) cre(Z) cre(z) des(X) des(x) des(y) 
 (   0.50000) v(x,y,V,z) kdelta(I,J) kdelta(W,Z) cre(U) cre(Y) cre(z) des(X) des(x) des(y) 
 (   0.50000) v(x,y,W,z) kdelta(I,J) kdelta(V,Y) cre(U) cre(Z) cre(z) des(X) des(x) des(y) 
 (  -0.50000) v(x,y,W,z) kdelta(I,J) kdelta(V,Z) cre(U) cre(Y) cre(z) des(X) des(x) des(y) 
 (  -0.50000) kdelta(I,J) v(U,x,y,z) cre(Y) cre(Z) cre(y) cre(z) des(V) des(W) des(X) des(x) 
 (   0.50000) kdelta(I,J) v(x,y,V,z) cre(U) cre(Y) cre(Z) cre(z) des(W) des(X) des(x) des(y) 
 (  -0.50000) kdelta(I,J) v(x,y,W,z) cre(U) cre(Y) cre(Z) cre(z) des(V) des(X) des(x) des(y) 

Total terms : 82
SQA automation time :  4.525 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
        temp =  np.einsum('IJ, YZVW, UX->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ca_so, optimize = True)
        temp += np.einsum('VY, IJ, WZ, UX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('VZ, IJ, WY, UX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('WY, IJ, VZ, UX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('WZ, IJ, VY, UX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('iViY, IJ, WZ, UX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('iViZ, IJ, WY, UX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('iWiY, IJ, VZ, UX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('iWiZ, IJ, VY, UX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('J, IJ, VY, WZ, UX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('J, IJ, VZ, WY, UX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('Ux, IJ, VY, WZ, xX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('Ux, IJ, VZ, WY, xX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('ixiU, IJ, VY, WZ, xX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp += np.einsum('ixiU, IJ, VZ, WY, xX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
        temp -= np.einsum('VY, IJ, UZWX->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
        temp += np.einsum('VZ, IJ, UYWX->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
        temp += np.einsum('WY, IJ, UZVX->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('WZ, IJ, UYVX->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('IJ, iViY, UZWX->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
        temp += np.einsum('IJ, iViZ, UYWX->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
        temp += np.einsum('IJ, iWiY, UZVX->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
        temp -= np.einsum('IJ, iWiZ, UYVX->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
        temp -= np.einsum('IJ, YZVx, UxWX->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
        temp += np.einsum('IJ, YZWx, UxVX->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
        temp += np.einsum('IJ, YxVW, UZXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
        temp -= np.einsum('IJ, ZxVW, UYXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
        temp += np.einsum('J, IJ, VY, UZWX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('J, IJ, VZ, UYWX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('J, IJ, WY, UZVX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('J, IJ, WZ, UYVX->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('Ux, IJ, VY, ZxWX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('Ux, IJ, VZ, YxWX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('Ux, IJ, WY, ZxVX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('Ux, IJ, WZ, YxVX->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('Vx, IJ, WY, UZXx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('Vx, IJ, WZ, UYXx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('Wx, IJ, VY, UZXx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('Wx, IJ, VZ, UYXx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= 0.5 * np.einsum('UYxy, IJ, VZ, xyWX->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += 0.5 * np.einsum('UYxy, IJ, WZ, xyVX->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += 0.5 * np.einsum('UZxy, IJ, VY, xyWX->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= 0.5 * np.einsum('UZxy, IJ, WY, xyVX->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('iVix, IJ, WY, UZXx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('iVix, IJ, WZ, UYXx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('iWix, IJ, VY, UZXx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('iWix, IJ, VZ, UYXx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('YxVy, IJ, WZ, UyXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('YxWy, IJ, VZ, UyXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('ZxVy, IJ, WY, UyXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('ZxWy, IJ, VY, UyXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('ixiU, IJ, VY, ZxWX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('ixiU, IJ, VZ, YxWX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('ixiU, IJ, WY, ZxVX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= np.einsum('ixiU, IJ, WZ, YxVX->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += 0.5 * np.einsum('Uxyz, IJ, VY, WZ, yzXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp -= 0.5 * np.einsum('Uxyz, IJ, VZ, WY, yzXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ccaa_so, optimize = True)
        temp += np.einsum('J, IJ, UYZVWX->IXYZJUVW', e_core_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
        temp += np.einsum('Ux, IJ, YZxVWX->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
        temp -= np.einsum('Vx, IJ, UYZWXx->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
        temp += np.einsum('Wx, IJ, UYZVXx->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
        temp += 0.5 * np.einsum('IJ, UYxy, ZxyVWX->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('IJ, UZxy, YxyVWX->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp -= np.einsum('IJ, iVix, UYZWXx->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
        temp += np.einsum('IJ, iWix, UYZVXx->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
        temp -= np.einsum('IJ, YxVy, UZyWXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp += np.einsum('IJ, YxWy, UZyVXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp += np.einsum('IJ, ZxVy, UYyWXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp -= np.einsum('IJ, ZxWy, UYyVXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('IJ, xyVW, UYZXxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
        temp += np.einsum('IJ, ixiU, YZxVWX->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('Uxyz, IJ, VY, ZyzWXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp += 0.5 * np.einsum('Uxyz, IJ, VZ, YyzWXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp += 0.5 * np.einsum('Uxyz, IJ, WY, ZyzVXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('Uxyz, IJ, WZ, YyzVXx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('xyVz, IJ, WY, UZzXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp += 0.5 * np.einsum('xyVz, IJ, WZ, UYzXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp += 0.5 * np.einsum('xyWz, IJ, VY, UZzXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('xyWz, IJ, VZ, UYzXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('IJ, Uxyz, YZyzVWXx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
        temp += 0.5 * np.einsum('IJ, xyVz, UYZzWXxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
        temp -= 0.5 * np.einsum('IJ, xyWz, UYZzVXxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
