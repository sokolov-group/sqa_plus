
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) kdelta(I,J) v(K,X,Y,Z) 
 (   1.00000) kdelta(I,K) v(J,X,Y,Z) 
 (  -1.00000) kdelta(X,Y) v(J,K,I,Z) 
 (   1.00000) kdelta(X,Z) v(J,K,I,Y) 
 (  -1.00000) e(J) kdelta(I,K) t1(J,X,Y,Z) 
 (   1.00000) e(K) kdelta(I,J) t1(K,X,Y,Z) 
 (   1.00000) h(X,x) kdelta(I,J) t1(K,x,Y,Z) 
 (  -1.00000) h(X,x) kdelta(I,K) t1(J,x,Y,Z) 
 (   1.00000) h(Y,x) kdelta(I,J) t1(K,X,Z,x) 
 (  -1.00000) h(Y,x) kdelta(I,K) t1(J,X,Z,x) 
 (  -1.00000) h(Z,x) kdelta(I,J) t1(K,X,Y,x) 
 (   1.00000) h(Z,x) kdelta(I,K) t1(J,X,Y,x) 
 (  -1.00000) kdelta(I,J) t1(K,X,Y,x) v(i,Z,i,x) 
 (   1.00000) kdelta(I,J) t1(K,X,Z,x) v(i,Y,i,x) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Y,Z) 
 (   1.00000) kdelta(I,J) t1(K,x) v(X,x,Y,Z) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,Z) v(i,x,i,X) 
 (   1.00000) kdelta(I,K) t1(J,X,Y,x) v(i,Z,i,x) 
 (  -1.00000) kdelta(I,K) t1(J,X,Z,x) v(i,Y,i,x) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Y,Z) 
 (  -1.00000) kdelta(I,K) t1(J,x) v(X,x,Y,Z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,Z) v(i,x,i,X) 
 (  -1.00000) v(J,K,I,Y) cre(X) des(Z) 
 (   1.00000) v(J,K,I,Z) cre(X) des(Y) 
 (   1.00000) kdelta(I,J) v(K,X,Y,x) cre(x) des(Z) 
 (  -1.00000) kdelta(I,J) v(K,X,Z,x) cre(x) des(Y) 
 (  -1.00000) kdelta(I,K) v(J,X,Y,x) cre(x) des(Z) 
 (   1.00000) kdelta(I,K) v(J,X,Z,x) cre(x) des(Y) 
 (   1.00000) kdelta(X,Y) v(J,K,I,x) cre(x) des(Z) 
 (  -1.00000) kdelta(X,Z) v(J,K,I,x) cre(x) des(Y) 
 (   1.00000) e(J) kdelta(I,K) t1(J,X,Y,x) cre(x) des(Z) 
 (  -1.00000) e(J) kdelta(I,K) t1(J,X,Z,x) cre(x) des(Y) 
 (  -1.00000) e(K) kdelta(I,J) t1(K,X,Y,x) cre(x) des(Z) 
 (   1.00000) e(K) kdelta(I,J) t1(K,X,Z,x) cre(x) des(Y) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(K,x,Y,y) cre(y) des(Z) 
 (   1.00000) h(X,x) kdelta(I,J) t1(K,x,Z,y) cre(y) des(Y) 
 (   1.00000) h(X,x) kdelta(I,K) t1(J,x,Y,y) cre(y) des(Z) 
 (  -1.00000) h(X,x) kdelta(I,K) t1(J,x,Z,y) cre(y) des(Y) 
 (   1.00000) h(Y,x) kdelta(I,J) t1(K,X,x,y) cre(y) des(Z) 
 (  -1.00000) h(Y,x) kdelta(I,K) t1(J,X,x,y) cre(y) des(Z) 
 (  -1.00000) h(Z,x) kdelta(I,J) t1(K,X,x,y) cre(y) des(Y) 
 (   1.00000) h(Z,x) kdelta(I,K) t1(J,X,x,y) cre(y) des(Y) 
 (   1.00000) h(x,y) kdelta(I,J) t1(K,X,Y,x) cre(y) des(Z) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(K,X,Z,x) cre(y) des(Y) 
 (  -1.00000) h(x,y) kdelta(I,K) t1(J,X,Y,x) cre(y) des(Z) 
 (   1.00000) h(x,y) kdelta(I,K) t1(J,X,Z,x) cre(y) des(Y) 
 (  -1.00000) kdelta(I,J) t1(K,X,Y,x) v(x,y,Z,z) cre(z) des(y) 
 (   1.00000) kdelta(I,J) t1(K,X,Y,x) v(i,y,i,x) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,X,Z,x) v(x,y,Y,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,J) t1(K,X,Z,x) v(i,y,i,x) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(i,Y,i,x) cre(y) des(Z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(i,Z,i,x) cre(y) des(Y) 
 (   0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Y,z) cre(z) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,y,Z,z) cre(z) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Y,Z) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x) v(X,x,Y,y) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,x) v(X,x,Z,y) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,Z) v(X,y,x,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,y,Z,z) cre(z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,z,Z,x) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x,Y,y) v(i,x,i,X) cre(y) des(Z) 
 (   1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,y,Y,z) cre(z) des(x) 
 (  -1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,z,Y,x) cre(y) des(z) 
 (   1.00000) kdelta(I,J) t1(K,x,Z,y) v(i,x,i,X) cre(y) des(Y) 
 (   1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Y,Z) cre(z) des(x) 
 (   1.00000) kdelta(I,K) t1(J,X,Y,x) v(x,y,Z,z) cre(z) des(y) 
 (  -1.00000) kdelta(I,K) t1(J,X,Y,x) v(i,y,i,x) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,X,Z,x) v(x,y,Y,z) cre(z) des(y) 
 (   1.00000) kdelta(I,K) t1(J,X,Z,x) v(i,y,i,x) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(i,Y,i,x) cre(y) des(Z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(i,Z,i,x) cre(y) des(Y) 
 (  -0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Y,z) cre(z) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,y,Z,z) cre(z) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Y,Z) cre(y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x) v(X,x,Y,y) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,x) v(X,x,Z,y) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,Z) v(X,y,x,z) cre(z) des(y) 
 (   1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,y,Z,z) cre(z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,z,Z,x) cre(y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x,Y,y) v(i,x,i,X) cre(y) des(Z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,y,Y,z) cre(z) des(x) 
 (   1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,z,Y,x) cre(y) des(z) 
 (  -1.00000) kdelta(I,K) t1(J,x,Z,y) v(i,x,i,X) cre(y) des(Y) 
 (  -1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Y,Z) cre(z) des(x) 
 (   1.00000) v(J,K,I,x) cre(X) cre(x) des(Y) des(Z) 
 (   0.50000) kdelta(I,J) v(K,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) kdelta(I,K) v(J,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (   0.50000) e(J) kdelta(I,K) t1(J,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) e(K) kdelta(I,J) t1(K,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (  -0.50000) h(X,x) kdelta(I,J) t1(K,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) h(X,x) kdelta(I,K) t1(J,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   1.00000) h(x,y) kdelta(I,J) t1(K,X,x,z) cre(y) cre(z) des(Y) des(Z) 
 (  -1.00000) h(x,y) kdelta(I,K) t1(J,X,x,z) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,Y,x) v(x,y,z,w) cre(z) cre(w) des(Z) des(y) 
 (   0.50000) kdelta(I,J) t1(K,X,Z,x) v(x,y,z,w) cre(z) cre(w) des(Y) des(y) 
 (   0.25000) kdelta(I,J) t1(K,X,x,y) v(x,y,z,w) cre(z) cre(w) des(Y) des(Z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Y,w) cre(y) cre(w) des(Z) des(z) 
 (   1.00000) kdelta(I,J) t1(K,X,x,y) v(x,z,Z,w) cre(y) cre(w) des(Y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,X,x,y) v(i,z,i,x) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,x) v(X,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,x,Y,y) v(X,y,z,w) cre(z) cre(w) des(Z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,Y,y) v(X,z,x,w) cre(y) cre(w) des(Z) des(z) 
 (   0.50000) kdelta(I,J) t1(K,x,Z,y) v(X,y,z,w) cre(z) cre(w) des(Y) des(x) 
 (  -1.00000) kdelta(I,J) t1(K,x,Z,y) v(X,z,x,w) cre(y) cre(w) des(Y) des(z) 
 (  -1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Y,w) cre(z) cre(w) des(Z) des(x) 
 (   1.00000) kdelta(I,J) t1(K,x,y,z) v(X,y,Z,w) cre(z) cre(w) des(Y) des(x) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,Y,x) cre(y) cre(z) des(Z) des(w) 
 (   0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,Z,x) cre(y) cre(z) des(Y) des(w) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(i,x,i,X) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,X,Y,x) v(x,y,z,w) cre(z) cre(w) des(Z) des(y) 
 (  -0.50000) kdelta(I,K) t1(J,X,Z,x) v(x,y,z,w) cre(z) cre(w) des(Y) des(y) 
 (  -0.25000) kdelta(I,K) t1(J,X,x,y) v(x,y,z,w) cre(z) cre(w) des(Y) des(Z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Y,w) cre(y) cre(w) des(Z) des(z) 
 (  -1.00000) kdelta(I,K) t1(J,X,x,y) v(x,z,Z,w) cre(y) cre(w) des(Y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,X,x,y) v(i,z,i,x) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,x) v(X,x,y,z) cre(y) cre(z) des(Y) des(Z) 
 (   0.50000) kdelta(I,K) t1(J,x,Y,y) v(X,y,z,w) cre(z) cre(w) des(Z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,Y,y) v(X,z,x,w) cre(y) cre(w) des(Z) des(z) 
 (  -0.50000) kdelta(I,K) t1(J,x,Z,y) v(X,y,z,w) cre(z) cre(w) des(Y) des(x) 
 (   1.00000) kdelta(I,K) t1(J,x,Z,y) v(X,z,x,w) cre(y) cre(w) des(Y) des(z) 
 (   1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Y,w) cre(z) cre(w) des(Z) des(x) 
 (  -1.00000) kdelta(I,K) t1(J,x,y,z) v(X,y,Z,w) cre(z) cre(w) des(Y) des(x) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,Y,x) cre(y) cre(z) des(Z) des(w) 
 (  -0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,Z,x) cre(y) cre(z) des(Y) des(w) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(i,x,i,X) cre(y) cre(z) des(Y) des(Z) 
 (  -0.50000) kdelta(I,J) t1(K,X,x,y) v(x,z,w,u) cre(y) cre(w) cre(u) des(Y) des(Z) des(z) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,y,w,u) cre(z) cre(w) cre(u) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) t1(K,x,y,z) v(X,w,x,u) cre(y) cre(z) cre(u) des(Y) des(Z) des(w) 
 (   0.50000) kdelta(I,K) t1(J,X,x,y) v(x,z,w,u) cre(y) cre(w) cre(u) des(Y) des(Z) des(z) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,y,w,u) cre(z) cre(w) cre(u) des(Y) des(Z) des(x) 
 (   0.50000) kdelta(I,K) t1(J,x,y,z) v(X,w,x,u) cre(y) cre(z) cre(u) des(Y) des(Z) des(w) 

Total terms : 131
SQA automation time :  2.872 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =- np.einsum('IJ, KXYZ->JKYZIX', np.identity(ncore), v_caaa_so, optimize = True)
    temp += np.einsum('IK, JXYZ->JKYZIX', np.identity(ncore), v_caaa_so, optimize = True)
    temp -= np.einsum('XY, JKIZ->JKYZIX', np.identity(ncas), v_ccca_so, optimize = True)
    temp += np.einsum('XZ, JKIY->JKYZIX', np.identity(ncas), v_ccca_so, optimize = True)
    temp -= np.einsum('J, IK, JXYZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, optimize = True)
    temp += np.einsum('K, IJ, KXYZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, optimize = True)
    temp += np.einsum('Xx, IJ, KxYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp -= np.einsum('Xx, IK, JxYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp += np.einsum('Yx, IJ, KXZx->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp -= np.einsum('Yx, IK, JXZx->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp -= np.einsum('Zx, IJ, KXYx->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp += np.einsum('Zx, IK, JXYx->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, optimize = True)
    temp -= np.einsum('IJ, KXYx, iZix->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp += np.einsum('IJ, KXZx, iYix->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, KXxy, xyYZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, optimize = True)
    temp += np.einsum('IJ, Kx, XxYZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, optimize = True)
    temp += np.einsum('IJ, KxYZ, ixiX->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp += np.einsum('IK, JXYx, iZix->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp -= np.einsum('IK, JXZx, iYix->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp += 0.5 * np.einsum('IK, JXxy, xyYZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, optimize = True)
    temp -= np.einsum('IK, Jx, XxYZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, optimize = True)
    temp -= np.einsum('IK, JxYZ, ixiX->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, optimize = True)
    temp -= np.einsum('JKIY, XZ->JKYZIX', v_ccca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('JKIZ, XY->JKYZIX', v_ccca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KXYx, xZ->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KXZx, xY->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JXYx, xZ->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JXZx, xY->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('XY, JKIx, xZ->JKYZIX', np.identity(ncas), v_ccca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('XZ, JKIx, xY->JKYZIX', np.identity(ncas), v_ccca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('J, IK, JXYx, xZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('J, IK, JXZx, xY->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IJ, KXYx, xZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('K, IJ, KXZx, xY->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('Xx, IJ, KxYy, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('Xx, IJ, KxZy, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('Xx, IK, JxYy, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('Xx, IK, JxZy, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('Yx, IJ, KXxy, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('Yx, IK, JXxy, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('Zx, IJ, KXxy, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('Zx, IK, JXxy, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('xy, IJ, KXYx, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('xy, IJ, KXZx, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('xy, IK, JXYx, yZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp += np.einsum('xy, IK, JXZx, yY->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KXYx, xyZz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KXYx, iyix, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KXZx, xyYz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KXZx, iyix, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KXxy, iYix, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KXxy, iZix, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, KXxy, xyYz, zZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, KXxy, xyZz, zY->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KXxy, xzYZ, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, Kx, XxYy, yZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, Kx, XxZy, yY->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KxYZ, Xyxz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KxYy, XyZz, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KxYy, XzZx, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KxYy, ixiX, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KxZy, XyYz, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IJ, KxZy, XzYx, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, KxZy, ixiX, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IJ, Kxyz, XyYZ, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JXYx, xyZz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JXYx, iyix, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JXZx, xyYz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JXZx, iyix, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JXxy, iYix, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JXxy, iZix, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= 0.5 * np.einsum('IK, JXxy, xyYz, zZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += 0.5 * np.einsum('IK, JXxy, xyZz, zY->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JXxy, xzYZ, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, Jx, XxYy, yZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, Jx, XxZy, yY->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JxYZ, Xyxz, zy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JxYy, XyZz, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JxYy, XzZx, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JxYy, ixiX, yZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JxZy, XyYz, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('IK, JxZy, XzYx, yz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, JxZy, ixiX, yY->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('IK, Jxyz, XyYZ, zx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('JKIx, XxYZ->JKYZIX', v_ccca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, KXxy, xyYZ->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IK, JXxy, xyYZ->JKYZIX', np.identity(ncore), v_caaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('J, IK, JXxy, xyYZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('K, IJ, KXxy, xyYZ->JKYZIX', e_core_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Xx, IJ, Kxyz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Xx, IK, Jxyz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp += np.einsum('xy, IJ, KXxz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('xy, IK, JXxz, yzYZ->JKYZIX', h_aa_so, np.identity(ncore), t1_caaa, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, KXYx, xyzw, zwZy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, KXZx, xyzw, zwYy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.25 * np.einsum('IJ, KXxy, xyzw, zwYZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, KXxy, xzYw, ywZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, KXxy, xzZw, ywYz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, KXxy, izix, yzYZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Kx, Xxyz, yzYZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, KxYy, Xyzw, zwZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, KxYy, Xzxw, ywZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, KxZy, Xyzw, zwYx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, KxZy, Xzxw, ywYz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, Kxyz, XyYw, zwZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, Kxyz, XyZw, zwYx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Kxyz, XwYx, yzZw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, Kxyz, XwZx, yzYw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Kxyz, ixiX, yzYZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, JXYx, xyzw, zwZy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IK, JXZx, xyzw, zwYy->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.25 * np.einsum('IK, JXxy, xyzw, zwYZ->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IK, JXxy, xzYw, ywZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IK, JXxy, xzZw, ywYz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IK, JXxy, izix, yzYZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, Jx, Xxyz, yzYZ->JKYZIX', np.identity(ncore), t1_ca, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, JxYy, Xyzw, zwZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IK, JxYy, Xzxw, ywZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IK, JxZy, Xyzw, zwYx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IK, JxZy, Xzxw, ywYz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IK, Jxyz, XyYw, zwZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IK, Jxyz, XyZw, zwYx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, Jxyz, XwYx, yzZw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IK, Jxyz, XwZx, yzYw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, Jxyz, ixiX, yzYZ->JKYZIX', np.identity(ncore), t1_caaa, v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, KXxy, xzwu, ywuYZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Kxyz, Xywu, zwuYZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Kxyz, Xwxu, yzuYZw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, JXxy, xzwu, ywuYZz->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, Jxyz, Xywu, zwuYZx->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IK, Jxyz, Xwxu, yzuYZw->JKYZIX', np.identity(ncore), t1_caaa, v_aaaa_so, rdm_cccaaa_so, optimize = True)
