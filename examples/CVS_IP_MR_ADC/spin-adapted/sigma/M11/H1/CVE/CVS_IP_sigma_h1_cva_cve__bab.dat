
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------- Spin-Adapted CVS-IP: Sigma H1 CVA_CVE (bab) ----------------------------


## Generating operators ...


## Right operator terms:
 (   1.00000) X_aaa(i,j,a) cre(i) cre(j) des(a) 
 (   1.00000) X_abb(i,j,a) cre(i) cre(j) des(a) 
 (   1.00000) X_bab(i,j,a) cre(i) cre(j) des(a) 

## Left operator terms:
 (   1.00000) cre(W) des(L) des(K) 

----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(0), a_S^\dag a_T^\dag a_U] ...

## Calculating a_P^\dag a_Q a_R [H(0), a_S^\dag a_T^\dag a_U] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) X_aaa(k,L,b) v(k,W,K,b) 
 (  -1.00000) X_bab(K,L,b) h(W,b) 
 (  -1.00000) X_bab(K,L,b) v(k,W,k,b) 
 (  -1.00000) X_bab(K,L,b) v(k,W,k,b) 
 (  -1.00000) X_bab(K,L,b) v(k,W,k,b) 
 (  -1.00000) X_bab(K,L,b) v(k,W,k,b) 
 (   1.00000) X_bab(K,k,b) v(k,W,L,b) 
 (   1.00000) X_bab(k,L,b) v(k,W,K,b) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(W,b) 
 (   1.00000) X_bab(K,L,b) h(W,z) t1(z,b) 
 (  -1.00000) X_aaa(k,L,b) v(k,z,K,b) cre(W) des(z) 
 (   1.00000) X_bab(K,L,b) h(z,b) cre(W) des(z) 
 (  -1.00000) X_bab(K,L,b) v(W,z,b,w) cre(w) des(z) 
 (  -1.00000) X_bab(K,L,b) v(W,z,b,w) cre(w) des(z) 
 (   1.00000) X_bab(K,L,b) v(k,z,k,b) cre(W) des(z) 
 (   1.00000) X_bab(K,L,b) v(k,z,k,b) cre(W) des(z) 
 (   1.00000) X_bab(K,L,b) v(k,z,k,b) cre(W) des(z) 
 (   1.00000) X_bab(K,L,b) v(k,z,k,b) cre(W) des(z) 
 (  -1.00000) X_bab(K,k,b) v(k,z,L,b) cre(W) des(z) 
 (  -1.00000) X_bab(k,L,b) v(k,z,K,b) cre(W) des(z) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(W,z,b,w) cre(w) des(z) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(W,z,b,w) cre(w) des(z) 
 (   1.00000) X_bab(K,L,b) e(b) t1(z,b) cre(W) des(z) 
 (   1.00000) X_bab(K,L,b) h(W,z) t1(z,w,b,u) cre(u) des(w) 
 (   1.00000) X_bab(K,L,b) h(W,z) t1(z,w,b,u) cre(u) des(w) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(W,z,b,u) cre(u) des(w) 
 (  -1.00000) X_bab(K,L,b) h(z,w) t1(W,u,b,z) cre(w) des(u) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(W,z,b,u) cre(u) des(w) 
 (  -1.00000) X_bab(K,L,b) h(z,w) t1(W,u,b,z) cre(w) des(u) 
 (  -1.00000) X_bab(K,L,b) h(z,w) t1(z,b) cre(W) des(w) 
 (   2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,z,k,u) cre(w) des(u) 
 (   2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,z,k,u) cre(w) des(u) 
 (   2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,z,k,u) cre(w) des(u) 
 (   2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,z,k,u) cre(w) des(u) 
 (  -2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,w,k,u) cre(u) des(z) 
 (  -2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,w,k,u) cre(u) des(z) 
 (  -2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,w,k,u) cre(u) des(z) 
 (  -2.00000) X_bab(K,L,b) t1(W,z,b,w) v(k,w,k,u) cre(u) des(z) 
 (   1.00000) X_bab(K,L,b) t1(z,b) v(W,w,z,u) cre(u) des(w) 
 (   1.00000) X_bab(K,L,b) t1(z,b) v(W,w,z,u) cre(u) des(w) 
 (   1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,w) cre(u) des(v) 
 (   0.50000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,w) cre(u) des(v) 
 (  -1.00000) X_bab(K,L,b) v(z,w,b,u) cre(W) cre(u) des(z) des(w) 
 (  -0.50000) X_bab(K,L,b) v(z,w,b,u) cre(W) cre(u) des(z) des(w) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(z,w,b,u) cre(W) cre(u) des(z) des(w) 
 (  -0.50000) X_bab(K,L,b) e(b) t1(z,w,b,u) cre(W) cre(u) des(z) des(w) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(z,u,b,v) cre(W) cre(v) des(w) des(u) 
 (  -1.00000) X_bab(K,L,b) h(z,w) t1(u,v,b,z) cre(W) cre(w) des(u) des(v) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(z,u,b,v) cre(W) cre(v) des(w) des(u) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(z,u,b,v) cre(W) cre(v) des(w) des(u) 
 (  -0.50000) X_bab(K,L,b) h(z,w) t1(u,v,b,z) cre(W) cre(w) des(u) des(v) 
 (  -0.50000) X_bab(K,L,b) t1(W,z,b,w) v(z,u,v,s) cre(w) cre(u) des(v) des(s) 
 (  -1.00000) X_bab(K,L,b) t1(W,z,b,w) v(z,u,v,s) cre(w) cre(u) des(v) des(s) 
 (   0.50000) X_bab(K,L,b) t1(W,z,b,w) v(w,u,v,s) cre(v) cre(s) des(z) des(u) 
 (   1.00000) X_bab(K,L,b) t1(W,z,b,w) v(w,u,v,s) cre(v) cre(s) des(z) des(u) 
 (  -1.00000) X_bab(K,L,b) t1(W,z,b,w) v(z,u,v,s) cre(w) cre(u) des(v) des(s) 
 (  -0.50000) X_bab(K,L,b) t1(W,z,b,w) v(z,u,v,s) cre(w) cre(u) des(v) des(s) 
 (   1.00000) X_bab(K,L,b) t1(W,z,b,w) v(w,u,v,s) cre(v) cre(s) des(z) des(u) 
 (   0.50000) X_bab(K,L,b) t1(W,z,b,w) v(w,u,v,s) cre(v) cre(s) des(z) des(u) 
 (   1.00000) X_bab(K,L,b) t1(z,b) v(z,w,u,v) cre(W) cre(w) des(u) des(v) 
 (   0.50000) X_bab(K,L,b) t1(z,b) v(z,w,u,v) cre(W) cre(w) des(u) des(v) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,u,v,s) cre(v) cre(s) des(z) des(w) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,s) cre(u) cre(s) des(w) des(v) 
 (   1.00000) X_bab(K,L,b) t1(z,w,b,u) v(z,w,v,s) cre(W) cre(u) des(v) des(s) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,z,k,v) cre(W) cre(u) des(w) des(v) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,z,k,v) cre(W) cre(u) des(w) des(v) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,z,k,v) cre(W) cre(u) des(w) des(v) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,z,k,v) cre(W) cre(u) des(w) des(v) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,u,k,v) cre(W) cre(v) des(z) des(w) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,u,k,v) cre(W) cre(v) des(z) des(w) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,u,k,v) cre(W) cre(v) des(z) des(w) 
 (  -2.00000) X_bab(K,L,b) t1(z,w,b,u) v(k,u,k,v) cre(W) cre(v) des(z) des(w) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,s) cre(u) cre(s) des(w) des(v) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,s) cre(u) cre(s) des(w) des(v) 
 (  -0.25000) X_bab(K,L,b) t1(z,w,b,u) v(W,u,v,s) cre(v) cre(s) des(z) des(w) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,s) cre(u) cre(s) des(w) des(v) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(W,v,z,s) cre(u) cre(s) des(w) des(v) 
 (   0.25000) X_bab(K,L,b) t1(z,w,b,u) v(z,w,v,s) cre(W) cre(u) des(v) des(s) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,b,u) v(u,v,s,t) cre(W) cre(s) cre(t) des(z) des(w) des(v) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(u,v,s,t) cre(W) cre(s) cre(t) des(z) des(w) des(v) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -1.00000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,b,u) v(z,v,s,t) cre(W) cre(u) cre(v) des(w) des(s) des(t) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,b,u) v(u,v,s,t) cre(W) cre(s) cre(t) des(z) des(w) des(v) 
 (  -0.25000) X_bab(K,L,b) t1(z,w,b,u) v(u,v,s,t) cre(W) cre(s) cre(t) des(z) des(w) des(v) 

Total terms : 88
SQA automation time :  373.720 seconds
----------------------------------------------------------------------------------------------------

----------------------- Converting Sigma vector to spin-adapted formulation ------------------------

----------------------------------------------------------------------------------------------------

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 269 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

175 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) X_aaa(k,L,b) v(K,W,b,k) 
 (  -1.00000) X_bab(K,L,b) h(W,b) 
 (   1.00000) X_bab(K,L,b) v(k,W,b,k) 
 (  -2.00000) X_bab(K,L,b) v(k,k,W,b) 
 (   1.00000) X_bab(K,L,b) v(k,W,b,k) 
 (  -2.00000) X_bab(K,L,b) v(k,k,W,b) 
 (   1.00000) X_bab(K,k,b) v(k,L,W,b) 
 (  -1.00000) X_bab(k,L,b) v(K,W,b,k) 
 (   1.00000) X_bab(k,L,b) v(k,K,W,b) 
 (   0.50000) X_aaa(k,L,b) v(K,z,b,k) rdm(W,z) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(W,b) 
 (   0.50000) X_bab(K,L,b) h(z,b) rdm(W,z) 
 (   1.00000) X_bab(K,L,b) h(W,z) t1(z,b) 
 (   0.50000) X_bab(K,L,b) v(W,z,w,b) rdm(w,z) 
 (   1.00000) X_bab(K,L,b) v(k,k,z,b) rdm(W,z) 
 (  -0.50000) X_bab(K,L,b) v(k,z,b,k) rdm(W,z) 
 (   1.00000) X_bab(K,L,b) v(k,k,z,b) rdm(W,z) 
 (  -0.50000) X_bab(K,L,b) v(k,z,b,k) rdm(W,z) 
 (  -1.00000) X_bab(K,L,b) v(z,w,W,b) rdm(z,w) 
 (   0.50000) X_bab(K,L,b) v(z,w,u,b) rdm(W,w,u,z) 
 (  -0.50000) X_bab(K,k,b) v(k,L,z,b) rdm(W,z) 
 (   0.50000) X_bab(k,L,b) v(K,z,b,k) rdm(W,z) 
 (  -0.50000) X_bab(k,L,b) v(k,K,z,b) rdm(W,z) 
 (   0.50000) X_bab(K,L,b) e(b) t1(W,z,w,b) rdm(z,w) 
 (  -1.00000) X_bab(K,L,b) e(b) t1(z,W,w,b) rdm(z,w) 
 (   0.50000) X_bab(K,L,b) e(b) t1(z,b) rdm(W,z) 
 (   0.50000) X_bab(K,L,b) e(b) t1(z,w,u,b) rdm(W,u,w,z) 
 (   1.00000) X_bab(K,L,b) h(W,z) t1(w,z,u,b) rdm(u,w) 
 (  -0.50000) X_bab(K,L,b) h(W,z) t1(z,w,u,b) rdm(u,w) 
 (   0.50000) X_bab(K,L,b) h(z,w) t1(W,u,z,b) rdm(w,u) 
 (  -0.50000) X_bab(K,L,b) h(z,w) t1(W,z,u,b) rdm(w,u) 
 (  -1.00000) X_bab(K,L,b) h(z,w) t1(u,W,z,b) rdm(w,u) 
 (   0.50000) X_bab(K,L,b) h(z,w) t1(u,v,z,b) rdm(W,w,v,u) 
 (  -0.50000) X_bab(K,L,b) h(z,w) t1(u,z,v,b) rdm(W,v,w,u) 
 (   1.00000) X_bab(K,L,b) h(z,w) t1(z,W,u,b) rdm(w,u) 
 (  -0.50000) X_bab(K,L,b) h(z,w) t1(z,b) rdm(W,w) 
 (  -0.50000) X_bab(K,L,b) h(z,w) t1(z,u,v,b) rdm(W,v,u,w) 
 (   0.50000) X_bab(K,L,b) t1(W,z,w,b) v(w,u,v,s) rdm(z,v,u,s) 
 (  -0.50000) X_bab(K,L,b) t1(W,z,w,b) v(z,u,v,s) rdm(w,v,u,s) 
 (  -2.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,k,w,u) rdm(z,u) 
 (   2.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,k,z,u) rdm(w,u) 
 (   1.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,w,u,k) rdm(z,u) 
 (  -1.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,z,u,k) rdm(w,u) 
 (  -2.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,k,w,u) rdm(z,u) 
 (   2.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,k,z,u) rdm(w,u) 
 (   1.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,w,u,k) rdm(z,u) 
 (  -1.00000) X_bab(K,L,b) t1(z,W,w,b) v(k,z,u,k) rdm(w,u) 
 (  -1.00000) X_bab(K,L,b) t1(z,W,w,b) v(w,u,v,s) rdm(z,v,u,s) 
 (   1.00000) X_bab(K,L,b) t1(z,W,w,b) v(z,u,v,s) rdm(w,v,u,s) 
 (  -0.50000) X_bab(K,L,b) t1(z,b) v(W,w,u,z) rdm(u,w) 
 (   1.00000) X_bab(K,L,b) t1(z,b) v(W,z,w,u) rdm(w,u) 
 (  -0.50000) X_bab(K,L,b) t1(z,b) v(z,w,u,v) rdm(W,u,w,v) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,u,b) v(W,v,s,w) rdm(u,v,z,s) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,u,b) v(W,v,s,z) rdm(u,v,s,w) 
 (   0.50000) X_bab(K,L,b) t1(z,w,u,b) v(W,v,u,s) rdm(w,z,v,s) 
 (   1.00000) X_bab(K,L,b) t1(z,w,u,b) v(W,w,v,s) rdm(u,s,z,v) 
 (   1.00000) X_bab(K,L,b) t1(z,w,u,b) v(W,w,v,z) rdm(u,v) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,u,b) v(W,z,v,s) rdm(u,s,w,v) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,u,b) v(W,z,v,w) rdm(u,v) 
 (   1.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,k,u,v) rdm(W,v,w,z) 
 (   0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,k,u,v) rdm(W,v,z,w) 
 (  -0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,k,z,v) rdm(W,u,v,w) 
 (  -1.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,k,z,v) rdm(W,u,w,v) 
 (  -0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,u,v,k) rdm(W,v,w,z) 
 (  -0.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,u,v,k) rdm(W,v,z,w) 
 (   0.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,z,v,k) rdm(W,u,v,w) 
 (   0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,z,v,k) rdm(W,u,w,v) 
 (   1.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,k,u,v) rdm(W,v,w,z) 
 (   0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,k,u,v) rdm(W,v,z,w) 
 (  -0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,k,z,v) rdm(W,u,v,w) 
 (  -1.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,k,z,v) rdm(W,u,w,v) 
 (  -0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,u,v,k) rdm(W,v,w,z) 
 (  -0.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,u,v,k) rdm(W,v,z,w) 
 (   0.33333) X_bab(K,L,b) t1(z,w,u,b) v(k,z,v,k) rdm(W,u,v,w) 
 (   0.66667) X_bab(K,L,b) t1(z,w,u,b) v(k,z,v,k) rdm(W,u,w,v) 
 (  -0.04167) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,s,w,z) 
 (  -0.04167) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,s,z,w) 
 (  -0.04167) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,w,s,z) 
 (   0.45833) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,w,z,s) 
 (  -0.04167) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,z,s,w) 
 (  -0.04167) X_bab(K,L,b) t1(z,w,u,b) v(u,v,s,t) rdm(W,v,t,z,w,s) 
 (   0.16667) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,t,v,z) 
 (   0.16667) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,t,z,v) 
 (   0.16667) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,v,t,z) 
 (  -0.33333) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,v,z,t) 
 (   0.16667) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,z,t,v) 
 (   0.16667) X_bab(K,L,b) t1(z,w,u,b) v(w,v,s,t) rdm(W,u,s,z,v,t) 
 (  -0.50000) X_bab(K,L,b) t1(z,w,u,b) v(w,v,z,s) rdm(W,u,v,s) 
 (   0.08333) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,t,v,w) 
 (   0.08333) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,t,w,v) 
 (   0.08333) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,v,t,w) 
 (   0.08333) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,v,w,t) 
 (   0.08333) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,w,t,v) 
 (  -0.41667) X_bab(K,L,b) t1(z,w,u,b) v(z,v,s,t) rdm(W,u,s,w,v,t) 

Total spin-integrated terms: 88
Total spin-adapted terms: 94
Spin-adaptation automation time :  14.327 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

32 terms removed:
 (   1.00000) X_bab(K,L,a) v(i,W,a,i) 
 (  -2.00000) X_bab(K,L,a) v(i,i,W,a) 
 (   1.00000) X_bab(K,L,a) v(i,W,a,i) 
 (  -2.00000) X_bab(K,L,a) v(i,i,W,a) 
 (   1.00000) X_bab(K,L,a) v(i,i,x,a) rdm(W,x) 
 (  -0.50000) X_bab(K,L,a) v(i,x,a,i) rdm(W,x) 
 (   1.00000) X_bab(K,L,a) v(i,i,x,a) rdm(W,x) 
 (  -0.50000) X_bab(K,L,a) v(i,x,a,i) rdm(W,x) 
 (  -2.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,i,y,z) rdm(x,z) 
 (   2.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,i,x,z) rdm(y,z) 
 (   1.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,y,z,i) rdm(x,z) 
 (  -1.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,x,z,i) rdm(y,z) 
 (  -2.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,i,y,z) rdm(x,z) 
 (   2.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,i,x,z) rdm(y,z) 
 (   1.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,y,z,i) rdm(x,z) 
 (  -1.00000) X_bab(K,L,a) t1(x,W,y,a) v(i,x,z,i) rdm(y,z) 
 (   1.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,i,z,w) rdm(W,w,y,x) 
 (   0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,i,z,w) rdm(W,w,x,y) 
 (  -0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,i,x,w) rdm(W,z,w,y) 
 (  -1.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,i,x,w) rdm(W,z,y,w) 
 (  -0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,z,w,i) rdm(W,w,y,x) 
 (  -0.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,z,w,i) rdm(W,w,x,y) 
 (   0.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,x,w,i) rdm(W,z,w,y) 
 (   0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,x,w,i) rdm(W,z,y,w) 
 (   1.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,i,z,w) rdm(W,w,y,x) 
 (   0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,i,z,w) rdm(W,w,x,y) 
 (  -0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,i,x,w) rdm(W,z,w,y) 
 (  -1.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,i,x,w) rdm(W,z,y,w) 
 (  -0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,z,w,i) rdm(W,w,y,x) 
 (  -0.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,z,w,i) rdm(W,w,x,y) 
 (   0.33333) X_bab(K,L,a) t1(x,y,z,a) v(i,x,w,i) rdm(W,z,w,y) 
 (   0.66667) X_bab(K,L,a) t1(x,y,z,a) v(i,x,w,i) rdm(W,z,y,w) 
----------------------------------------------------------------------------------------------------
Remaining terms: 62


--------------------------------------- genEinsum equations ----------------------------------------

sigma_cva =- einsum('iLa,KWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
sigma_cva -= einsum('KLa,Wa->KLW', X_bab, h_ae, optimize = einsum_type)
sigma_cva += einsum('Kia,iLWa->KLW', X_bab, v_vvae, optimize = einsum_type)
sigma_cva -= einsum('iLa,KWai->KLW', X_bab, v_xaex, optimize = einsum_type)
sigma_cva += einsum('iLa,iKWa->KLW', X_bab, v_xxae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,a,Wa->KLW', X_bab, e_extern, t1_ae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xa,Wx->KLW', X_bab, h_ae, rdm_ca, optimize = einsum_type)
sigma_cva += einsum('KLa,Wx,xa->KLW', X_bab, h_aa, t1_ae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,Wxya,yx->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,xyWa,xy->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_bab, v_vvae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,a,xWya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_bab, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,Wx,yxza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,xy,zWxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xy,xWza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_bab, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xWya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva += einsum('KLa,xa,Wxyz,yz->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xyza,Wywu,zuxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xyza,Wywx,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvuyx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvuxy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvyux->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 11/24 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvxuy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvxyu->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuvwy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuvyw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuwvy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuwyv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuyvw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 5/12 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

-------------------------------- genEinsum equations --------------------------------

sigma_cva =- einsum('iLa,KWai->KLW', X_aaa, v_xaex, optimize = einsum_type)
sigma_cva -= einsum('KLa,Wa->KLW', X_bab, h_ae, optimize = einsum_type)
sigma_cva += einsum('Kia,iLWa->KLW', X_bab, v_vvae, optimize = einsum_type)
sigma_cva -= einsum('iLa,KWai->KLW', X_bab, v_xaex, optimize = einsum_type)
sigma_cva += einsum('iLa,iKWa->KLW', X_bab, v_xxae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,a,Wa->KLW', X_bab, e_extern, t1_ae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xa,Wx->KLW', X_bab, h_ae, rdm_ca, optimize = einsum_type)
sigma_cva += einsum('KLa,Wx,xa->KLW', X_bab, h_aa, t1_ae, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,Wxya,yx->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,xyWa,xy->KLW', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xyza,Wyzx->KLW', X_bab, v_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('Kia,iLxa,Wx->KLW', X_bab, v_vvae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('iLa,Kxai,Wx->KLW', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('iLa,iKxa,Wx->KLW', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,Wxya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,a,xWya,xy->KLW', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,xa,Wx->KLW', X_bab, e_extern, t1_ae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,a,xyza,Wzyx->KLW', X_bab, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,Wx,yxza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,Wx,xyza,zy->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xy,Wzxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,Wxza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= einsum('KLa,xy,zWxa,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xy,zwxa,Wywz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,zxwa,Wwyz->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xy,xWza,yz->KLW', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,xa,Wy->KLW', X_bab, h_aa, t1_ae, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xy,xzwa,Wwzy->KLW', X_bab, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,Wxya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,Wxya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= einsum('KLa,xWya,yzwu,xwzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xWya,xzwu,ywzu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xa,Wyzx,zy->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva += einsum('KLa,xa,Wxyz,yz->KLW', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xa,xyzw,Wzyw->KLW', X_bab, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wwuy,zwxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wwux,zwuy->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/2 * einsum('KLa,xyza,Wwzu,yxwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xyza,Wywu,zuxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += einsum('KLa,xyza,Wywx,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwu,zuyw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,Wxwy,zw->KLW', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvuyx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvuxy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvyux->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 11/24 * einsum('KLa,xyza,zwuv,Wwvyxu->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvxuy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/24 * einsum('KLa,xyza,zwuv,Wwvxyu->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvwx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuvxw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuwvx->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/3 * einsum('KLa,xyza,ywuv,Wzuwxv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxvw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/6 * einsum('KLa,xyza,ywuv,Wzuxwv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 1/2 * einsum('KLa,xyza,ywxu,Wzwu->KLW', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuvwy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuvyw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuwvy->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuwyv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva += 1/12 * einsum('KLa,xyza,xwuv,Wzuyvw->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_cva -= 5/12 * einsum('KLa,xyza,xwuv,Wzuywv->KLW', X_bab, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)

-------------------------------------------------------------------------------------

> Total elapsed time: 668.89 seconds.
