
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------- Spin-Adapted CVS-IP: Sigma H1 CCE_CCA (bab) ----------------------------


## Generating operators ...


## Right operator terms:
 (   0.50000) X_aaa(i,j,x) cre(i) cre(j) des(x) 
 (   0.50000) X_abb(i,j,x) cre(i) cre(j) des(x) 
 (   0.50000) X_bab(i,j,x) cre(i) cre(j) des(x) 

## Left operator terms:
 (   1.00000) cre(B) des(L) des(K) 

----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(0), a_S^\dag a_T^\dag a_U] ...

## Calculating a_P^\dag a_Q a_R [H(0), a_S^\dag a_T^\dag a_U] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) X_aaa(L,k,z) v(K,z,k,B) 
 (   0.50000) X_abb(L,K,z) h(z,B) 
 (   0.50000) X_abb(L,K,z) v(k,z,k,B) 
 (   0.50000) X_abb(L,K,z) v(k,z,k,B) 
 (   0.50000) X_abb(L,K,z) v(k,z,k,B) 
 (   0.50000) X_abb(L,K,z) v(k,z,k,B) 
 (  -0.50000) X_abb(L,k,z) v(K,z,k,B) 
 (  -0.50000) X_abb(k,K,z) v(L,z,k,B) 
 (  -0.50000) X_bab(K,L,z) h(z,B) 
 (  -0.50000) X_bab(K,L,z) v(k,z,k,B) 
 (  -0.50000) X_bab(K,L,z) v(k,z,k,B) 
 (  -0.50000) X_bab(K,L,z) v(k,z,k,B) 
 (  -0.50000) X_bab(K,L,z) v(k,z,k,B) 
 (   0.50000) X_bab(K,k,z) v(L,z,k,B) 
 (   0.50000) X_bab(k,L,z) v(K,z,k,B) 
 (   0.50000) X_abb(L,K,z) e(B) t1(z,B) 
 (  -0.50000) X_abb(L,K,z) h(z,w) t1(w,B) 
 (  -0.50000) X_bab(K,L,z) e(B) t1(z,B) 
 (   0.50000) X_bab(K,L,z) h(z,w) t1(w,B) 
 (   1.00000) X_aaa(L,j,x) v(K,z,j,B) cre(z) des(x) 
 (   0.50000) X_abb(L,K,z) v(z,w,B,u) cre(w) des(u) 
 (   0.50000) X_abb(L,K,z) v(z,w,B,u) cre(w) des(u) 
 (   0.50000) X_abb(L,j,x) v(K,z,j,B) cre(z) des(x) 
 (   0.50000) X_abb(i,K,x) v(L,z,i,B) cre(z) des(x) 
 (  -0.50000) X_bab(K,L,z) v(z,w,B,u) cre(w) des(u) 
 (  -0.50000) X_bab(K,L,z) v(z,w,B,u) cre(w) des(u) 
 (  -0.50000) X_bab(K,j,x) v(L,z,j,B) cre(z) des(x) 
 (  -0.50000) X_bab(i,L,x) v(K,z,i,B) cre(z) des(x) 
 (   0.50000) X_abb(L,K,z) e(B) t1(z,w,B,u) cre(w) des(u) 
 (   0.50000) X_abb(L,K,z) e(B) t1(z,w,B,u) cre(w) des(u) 
 (  -0.50000) X_abb(L,K,z) h(z,w) t1(w,u,B,v) cre(u) des(v) 
 (  -0.50000) X_abb(L,K,z) h(z,w) t1(w,u,B,v) cre(u) des(v) 
 (  -0.50000) X_abb(L,K,z) h(w,u) t1(z,w,B,v) cre(u) des(v) 
 (   0.50000) X_abb(L,K,z) h(w,u) t1(z,v,B,w) cre(v) des(u) 
 (  -0.50000) X_abb(L,K,z) h(w,u) t1(z,w,B,v) cre(u) des(v) 
 (   0.50000) X_abb(L,K,z) h(w,u) t1(z,v,B,w) cre(v) des(u) 
 (  -0.50000) X_abb(L,K,z) t1(w,B) v(z,u,w,v) cre(u) des(v) 
 (  -0.50000) X_abb(L,K,z) t1(w,B) v(z,u,w,v) cre(u) des(v) 
 (  -1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (  -1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (  -1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (  -1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (   1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (   1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (   1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (   1.00000) X_abb(L,K,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (  -0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,u) cre(s) des(v) 
 (  -0.25000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,u) cre(s) des(v) 
 (  -0.50000) X_bab(K,L,z) e(B) t1(z,w,B,u) cre(w) des(u) 
 (  -0.50000) X_bab(K,L,z) e(B) t1(z,w,B,u) cre(w) des(u) 
 (   0.50000) X_bab(K,L,z) h(z,w) t1(w,u,B,v) cre(u) des(v) 
 (   0.50000) X_bab(K,L,z) h(z,w) t1(w,u,B,v) cre(u) des(v) 
 (   0.50000) X_bab(K,L,z) h(w,u) t1(z,w,B,v) cre(u) des(v) 
 (  -0.50000) X_bab(K,L,z) h(w,u) t1(z,v,B,w) cre(v) des(u) 
 (   0.50000) X_bab(K,L,z) h(w,u) t1(z,w,B,v) cre(u) des(v) 
 (  -0.50000) X_bab(K,L,z) h(w,u) t1(z,v,B,w) cre(v) des(u) 
 (   0.50000) X_bab(K,L,z) t1(w,B) v(z,u,w,v) cre(u) des(v) 
 (   0.50000) X_bab(K,L,z) t1(w,B) v(z,u,w,v) cre(u) des(v) 
 (   1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (   1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (   1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (   1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,w,k,v) cre(v) des(u) 
 (  -1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (  -1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (  -1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (  -1.00000) X_bab(K,L,z) t1(z,w,B,u) v(k,u,k,v) cre(w) des(v) 
 (   0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,u) cre(s) des(v) 
 (   0.25000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,u) cre(s) des(v) 
 (   0.25000) X_abb(L,K,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (   0.50000) X_abb(L,K,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (  -0.25000) X_abb(L,K,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (  -0.50000) X_abb(L,K,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (   0.50000) X_abb(L,K,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (   0.25000) X_abb(L,K,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (  -0.50000) X_abb(L,K,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (  -0.25000) X_abb(L,K,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,v,s,t) cre(w) cre(u) des(s) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (   0.12500) X_abb(L,K,z) t1(w,u,B,v) v(z,v,s,t) cre(w) cre(u) des(s) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (   0.50000) X_abb(L,K,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (  -0.25000) X_bab(K,L,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (  -0.50000) X_bab(K,L,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (   0.25000) X_bab(K,L,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (   0.50000) X_bab(K,L,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (  -0.25000) X_bab(K,L,z) t1(z,w,B,u) v(w,v,s,t) cre(s) cre(t) des(u) des(v) 
 (   0.50000) X_bab(K,L,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (   0.25000) X_bab(K,L,z) t1(z,w,B,u) v(u,v,s,t) cre(w) cre(v) des(s) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,v,s,t) cre(w) cre(u) des(s) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (  -0.12500) X_bab(K,L,z) t1(w,u,B,v) v(z,v,s,t) cre(w) cre(u) des(s) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 
 (  -0.50000) X_bab(K,L,z) t1(w,u,B,v) v(z,s,w,t) cre(u) cre(s) des(v) des(t) 

Total terms : 98
SQA automation time :  152.307 seconds
----------------------------------------------------------------------------------------------------

----------------------- Converting Sigma vector to spin-adapted formulation ------------------------

----------------------------------------------------------------------------------------------------

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 234 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

144 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) X_aaa(L,k,z) v(k,z,B,K) 
 (   0.50000) X_abb(L,K,z) h(z,B) 
 (   1.00000) X_abb(L,K,z) v(k,k,z,B) 
 (  -0.50000) X_abb(L,K,z) v(k,z,B,k) 
 (   1.00000) X_abb(L,K,z) v(k,k,z,B) 
 (  -0.50000) X_abb(L,K,z) v(k,z,B,k) 
 (  -0.50000) X_abb(L,k,z) v(K,k,z,B) 
 (   0.50000) X_abb(L,k,z) v(k,z,B,K) 
 (  -0.50000) X_abb(k,K,z) v(L,k,z,B) 
 (  -0.50000) X_bab(K,L,z) h(z,B) 
 (  -1.00000) X_bab(K,L,z) v(k,k,z,B) 
 (   0.50000) X_bab(K,L,z) v(k,z,B,k) 
 (  -1.00000) X_bab(K,L,z) v(k,k,z,B) 
 (   0.50000) X_bab(K,L,z) v(k,z,B,k) 
 (   0.50000) X_bab(K,k,z) v(L,k,z,B) 
 (   0.50000) X_bab(k,L,z) v(K,k,z,B) 
 (  -0.50000) X_bab(k,L,z) v(k,z,B,K) 
 (  -0.50000) X_aaa(L,j,x) v(j,z,B,K) rdm(x,z) 
 (   0.50000) X_abb(L,K,z) e(B) t1(z,B) 
 (  -0.50000) X_abb(L,K,z) h(z,w) t1(w,B) 
 (   0.50000) X_abb(L,K,z) v(w,u,z,B) rdm(u,w) 
 (  -0.25000) X_abb(L,K,z) v(z,w,u,B) rdm(w,u) 
 (   0.25000) X_abb(L,j,x) v(K,j,z,B) rdm(x,z) 
 (  -0.25000) X_abb(L,j,x) v(j,z,B,K) rdm(x,z) 
 (   0.25000) X_abb(i,K,x) v(L,i,z,B) rdm(x,z) 
 (  -0.50000) X_bab(K,L,z) e(B) t1(z,B) 
 (   0.50000) X_bab(K,L,z) h(z,w) t1(w,B) 
 (  -0.50000) X_bab(K,L,z) v(w,u,z,B) rdm(u,w) 
 (   0.25000) X_bab(K,L,z) v(z,w,u,B) rdm(w,u) 
 (  -0.25000) X_bab(K,j,x) v(L,j,z,B) rdm(x,z) 
 (  -0.25000) X_bab(i,L,x) v(K,i,z,B) rdm(x,z) 
 (   0.25000) X_bab(i,L,x) v(i,z,B,K) rdm(x,z) 
 (   0.50000) X_abb(L,K,z) e(B) t1(w,z,u,B) rdm(u,w) 
 (  -0.25000) X_abb(L,K,z) e(B) t1(z,w,u,B) rdm(u,w) 
 (   0.50000) X_abb(L,K,z) h(w,u) t1(v,z,w,B) rdm(u,v) 
 (  -0.50000) X_abb(L,K,z) h(w,u) t1(w,z,v,B) rdm(u,v) 
 (  -0.25000) X_abb(L,K,z) h(w,u) t1(z,v,w,B) rdm(u,v) 
 (   0.25000) X_abb(L,K,z) h(w,u) t1(z,w,v,B) rdm(u,v) 
 (  -0.50000) X_abb(L,K,z) h(z,w) t1(u,w,v,B) rdm(v,u) 
 (   0.25000) X_abb(L,K,z) h(z,w) t1(w,u,v,B) rdm(v,u) 
 (   0.25000) X_abb(L,K,z) t1(w,B) v(z,u,v,w) rdm(v,u) 
 (  -0.50000) X_abb(L,K,z) t1(w,B) v(z,w,u,v) rdm(u,v) 
 (   0.25000) X_abb(L,K,z) t1(w,u,v,B) v(z,s,t,u) rdm(v,s,w,t) 
 (   0.25000) X_abb(L,K,z) t1(w,u,v,B) v(z,s,t,w) rdm(v,s,t,u) 
 (  -0.25000) X_abb(L,K,z) t1(w,u,v,B) v(z,s,v,t) rdm(u,w,s,t) 
 (  -0.50000) X_abb(L,K,z) t1(w,u,v,B) v(z,u,s,t) rdm(v,t,w,s) 
 (  -0.50000) X_abb(L,K,z) t1(w,u,v,B) v(z,u,s,w) rdm(v,s) 
 (   0.25000) X_abb(L,K,z) t1(w,u,v,B) v(z,w,s,t) rdm(v,t,u,s) 
 (   0.25000) X_abb(L,K,z) t1(w,u,v,B) v(z,w,s,u) rdm(v,s) 
 (   1.00000) X_abb(L,K,z) t1(w,z,u,B) v(k,k,u,v) rdm(w,v) 
 (  -1.00000) X_abb(L,K,z) t1(w,z,u,B) v(k,k,w,v) rdm(u,v) 
 (  -0.50000) X_abb(L,K,z) t1(w,z,u,B) v(k,u,v,k) rdm(w,v) 
 (   0.50000) X_abb(L,K,z) t1(w,z,u,B) v(k,w,v,k) rdm(u,v) 
 (   1.00000) X_abb(L,K,z) t1(w,z,u,B) v(k,k,u,v) rdm(w,v) 
 (  -1.00000) X_abb(L,K,z) t1(w,z,u,B) v(k,k,w,v) rdm(u,v) 
 (  -0.50000) X_abb(L,K,z) t1(w,z,u,B) v(k,u,v,k) rdm(w,v) 
 (   0.50000) X_abb(L,K,z) t1(w,z,u,B) v(k,w,v,k) rdm(u,v) 
 (   0.50000) X_abb(L,K,z) t1(w,z,u,B) v(u,v,s,t) rdm(w,s,v,t) 
 (  -0.50000) X_abb(L,K,z) t1(w,z,u,B) v(w,v,s,t) rdm(u,s,v,t) 
 (  -0.25000) X_abb(L,K,z) t1(z,w,u,B) v(u,v,s,t) rdm(w,s,v,t) 
 (   0.25000) X_abb(L,K,z) t1(z,w,u,B) v(w,v,s,t) rdm(u,s,v,t) 
 (  -0.50000) X_bab(K,L,z) e(B) t1(w,z,u,B) rdm(u,w) 
 (   0.25000) X_bab(K,L,z) e(B) t1(z,w,u,B) rdm(u,w) 
 (  -0.50000) X_bab(K,L,z) h(w,u) t1(v,z,w,B) rdm(u,v) 
 (   0.50000) X_bab(K,L,z) h(w,u) t1(w,z,v,B) rdm(u,v) 
 (   0.25000) X_bab(K,L,z) h(w,u) t1(z,v,w,B) rdm(u,v) 
 (  -0.25000) X_bab(K,L,z) h(w,u) t1(z,w,v,B) rdm(u,v) 
 (   0.50000) X_bab(K,L,z) h(z,w) t1(u,w,v,B) rdm(v,u) 
 (  -0.25000) X_bab(K,L,z) h(z,w) t1(w,u,v,B) rdm(v,u) 
 (  -0.25000) X_bab(K,L,z) t1(w,B) v(z,u,v,w) rdm(v,u) 
 (   0.50000) X_bab(K,L,z) t1(w,B) v(z,w,u,v) rdm(u,v) 
 (  -0.25000) X_bab(K,L,z) t1(w,u,v,B) v(z,s,t,u) rdm(v,s,w,t) 
 (  -0.25000) X_bab(K,L,z) t1(w,u,v,B) v(z,s,t,w) rdm(v,s,t,u) 
 (   0.25000) X_bab(K,L,z) t1(w,u,v,B) v(z,s,v,t) rdm(u,w,s,t) 
 (   0.50000) X_bab(K,L,z) t1(w,u,v,B) v(z,u,s,t) rdm(v,t,w,s) 
 (   0.50000) X_bab(K,L,z) t1(w,u,v,B) v(z,u,s,w) rdm(v,s) 
 (  -0.25000) X_bab(K,L,z) t1(w,u,v,B) v(z,w,s,t) rdm(v,t,u,s) 
 (  -0.25000) X_bab(K,L,z) t1(w,u,v,B) v(z,w,s,u) rdm(v,s) 
 (  -1.00000) X_bab(K,L,z) t1(w,z,u,B) v(k,k,u,v) rdm(w,v) 
 (   1.00000) X_bab(K,L,z) t1(w,z,u,B) v(k,k,w,v) rdm(u,v) 
 (   0.50000) X_bab(K,L,z) t1(w,z,u,B) v(k,u,v,k) rdm(w,v) 
 (  -0.50000) X_bab(K,L,z) t1(w,z,u,B) v(k,w,v,k) rdm(u,v) 
 (  -1.00000) X_bab(K,L,z) t1(w,z,u,B) v(k,k,u,v) rdm(w,v) 
 (   1.00000) X_bab(K,L,z) t1(w,z,u,B) v(k,k,w,v) rdm(u,v) 
 (   0.50000) X_bab(K,L,z) t1(w,z,u,B) v(k,u,v,k) rdm(w,v) 
 (  -0.50000) X_bab(K,L,z) t1(w,z,u,B) v(k,w,v,k) rdm(u,v) 
 (  -0.50000) X_bab(K,L,z) t1(w,z,u,B) v(u,v,s,t) rdm(w,s,v,t) 
 (   0.50000) X_bab(K,L,z) t1(w,z,u,B) v(w,v,s,t) rdm(u,s,v,t) 
 (   0.25000) X_bab(K,L,z) t1(z,w,u,B) v(u,v,s,t) rdm(w,s,v,t) 
 (  -0.25000) X_bab(K,L,z) t1(z,w,u,B) v(w,v,s,t) rdm(u,s,v,t) 

Total spin-integrated terms: 98
Total spin-adapted terms: 90
Spin-adaptation automation time :  4.016 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

24 terms removed:
 (   1.00000) X_abb(L,K,x) v(i,i,x,B) 
 (  -0.50000) X_abb(L,K,x) v(i,x,B,i) 
 (   1.00000) X_abb(L,K,x) v(i,i,x,B) 
 (  -0.50000) X_abb(L,K,x) v(i,x,B,i) 
 (  -1.00000) X_bab(K,L,x) v(i,i,x,B) 
 (   0.50000) X_bab(K,L,x) v(i,x,B,i) 
 (  -1.00000) X_bab(K,L,x) v(i,i,x,B) 
 (   0.50000) X_bab(K,L,x) v(i,x,B,i) 
 (   1.00000) X_abb(L,K,x) t1(y,x,z,B) v(i,i,z,w) rdm(y,w) 
 (  -1.00000) X_abb(L,K,x) t1(y,x,z,B) v(i,i,y,w) rdm(z,w) 
 (  -0.50000) X_abb(L,K,x) t1(y,x,z,B) v(i,z,w,i) rdm(y,w) 
 (   0.50000) X_abb(L,K,x) t1(y,x,z,B) v(i,y,w,i) rdm(z,w) 
 (   1.00000) X_abb(L,K,x) t1(y,x,z,B) v(i,i,z,w) rdm(y,w) 
 (  -1.00000) X_abb(L,K,x) t1(y,x,z,B) v(i,i,y,w) rdm(z,w) 
 (  -0.50000) X_abb(L,K,x) t1(y,x,z,B) v(i,z,w,i) rdm(y,w) 
 (   0.50000) X_abb(L,K,x) t1(y,x,z,B) v(i,y,w,i) rdm(z,w) 
 (  -1.00000) X_bab(K,L,x) t1(y,x,z,B) v(i,i,z,w) rdm(y,w) 
 (   1.00000) X_bab(K,L,x) t1(y,x,z,B) v(i,i,y,w) rdm(z,w) 
 (   0.50000) X_bab(K,L,x) t1(y,x,z,B) v(i,z,w,i) rdm(y,w) 
 (  -0.50000) X_bab(K,L,x) t1(y,x,z,B) v(i,y,w,i) rdm(z,w) 
 (  -1.00000) X_bab(K,L,x) t1(y,x,z,B) v(i,i,z,w) rdm(y,w) 
 (   1.00000) X_bab(K,L,x) t1(y,x,z,B) v(i,i,y,w) rdm(z,w) 
 (   0.50000) X_bab(K,L,x) t1(y,x,z,B) v(i,z,w,i) rdm(y,w) 
 (  -0.50000) X_bab(K,L,x) t1(y,x,z,B) v(i,y,w,i) rdm(z,w) 
----------------------------------------------------------------------------------------------------
Remaining terms: 66


--------------------------------------- genEinsum equations ----------------------------------------

sigma_cce  = einsum('Lix,ixBK->KLB', X_aaa, v_xaex, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,xB->KLB', X_abb, h_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('Lix,KixB->KLB', X_abb, v_xxae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('Lix,ixBK->KLB', X_abb, v_xaex, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('iKx,LixB->KLB', X_abb, v_xxae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,xB->KLB', X_bab, h_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('Kix,LixB->KLB', X_bab, v_xxae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('iLx,KixB->KLB', X_bab, v_xxae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('iLx,ixBK->KLB', X_bab, v_xaex, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,B,xB->KLB', X_abb, e_extern, t1_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,xy,yB->KLB', X_abb, h_aa, t1_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yzxB,zy->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,xyzB,yz->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('Lix,KiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('Lix,iyBK,xy->KLB', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('iKx,LiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,B,xB->KLB', X_bab, e_extern, t1_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,xy,yB->KLB', X_bab, h_aa, t1_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yzxB,zy->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,xyzB,yz->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('Kix,LiyB,xy->KLB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('iLx,KiyB,xy->KLB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('iLx,iyBK,xy->KLB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,B,yxzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,B,xyzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yz,wxyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yz,yxwB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,yz,xwyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yz,xywB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,xy,zywB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,xy,yzwB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yB,xzwy,wz->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yB,xyzw,zw->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xuvz,wuyv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xuvy,wuvz->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,yzwB,xuwv,zyuv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yzwB,xzuv,wvyu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yzwB,xzuy,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xyuv,wvzu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xyuz,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yxzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yxzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,xyzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,xyzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,B,yxzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,B,xyzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yz,wxyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yz,yxwB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,yz,xwyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yz,xywB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,xy,zywB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,xy,yzwB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yB,xzwy,wz->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yB,xyzw,zw->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yzwB,xzuv,wvyu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yzwB,xzuy,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xyuz,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yxzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yxzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

-------------------------------- genEinsum equations --------------------------------

sigma_cce  = einsum('Lix,ixBK->KLB', X_aaa, v_xaex, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,xB->KLB', X_abb, h_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('Lix,KixB->KLB', X_abb, v_xxae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('Lix,ixBK->KLB', X_abb, v_xaex, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('iKx,LixB->KLB', X_abb, v_xxae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,xB->KLB', X_bab, h_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('Kix,LixB->KLB', X_bab, v_xxae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('iLx,KixB->KLB', X_bab, v_xxae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('iLx,ixBK->KLB', X_bab, v_xaex, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('Lix,iyBK,xy->KLB', X_aaa, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,B,xB->KLB', X_abb, e_extern, t1_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,xy,yB->KLB', X_abb, h_aa, t1_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yzxB,zy->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,xyzB,yz->KLB', X_abb, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('Lix,KiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('Lix,iyBK,xy->KLB', X_abb, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('iKx,LiyB,xy->KLB', X_abb, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,B,xB->KLB', X_bab, e_extern, t1_ae, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,xy,yB->KLB', X_bab, h_aa, t1_ae, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yzxB,zy->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,xyzB,yz->KLB', X_bab, v_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('Kix,LiyB,xy->KLB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('iLx,KiyB,xy->KLB', X_bab, v_xxae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('iLx,iyBK,xy->KLB', X_bab, v_xaex, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,B,yxzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,B,xyzB,zy->KLB', X_abb, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yz,wxyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yz,yxwB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,yz,xwyB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yz,xywB,zw->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,xy,zywB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,xy,yzwB,wz->KLB', X_abb, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yB,xzwy,wz->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yB,xyzw,zw->KLB', X_abb, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xuvz,wuyv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xuvy,wuvz->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,yzwB,xuwv,zyuv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yzwB,xzuv,wvyu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yzwB,xzuy,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xyuv,wvzu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,yzwB,xyuz,wu->KLB', X_abb, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('LKx,yxzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('LKx,yxzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('LKx,xyzB,zwuv,yuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('LKx,xyzB,ywuv,zuwv->KLB', X_abb, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,B,yxzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,B,xyzB,zy->KLB', X_bab, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yz,wxyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yz,yxwB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,yz,xwyB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yz,xywB,zw->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,xy,zywB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,xy,yzwB,wz->KLB', X_bab, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yB,xzwy,wz->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yB,xyzw,zw->KLB', X_bab, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xuvz,wuyv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xuvy,wuvz->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,yzwB,xuwv,zyuv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yzwB,xzuv,wvyu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yzwB,xzuy,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xyuv,wvzu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,yzwB,xyuz,wu->KLB', X_bab, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_cce -= 1/2 * einsum('KLx,yxzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/2 * einsum('KLx,yxzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce += 1/4 * einsum('KLx,xyzB,zwuv,yuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_cce -= 1/4 * einsum('KLx,xyzB,ywuv,zuwv->KLB', X_bab, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)

-------------------------------------------------------------------------------------

> Total elapsed time: 504.84 seconds.
