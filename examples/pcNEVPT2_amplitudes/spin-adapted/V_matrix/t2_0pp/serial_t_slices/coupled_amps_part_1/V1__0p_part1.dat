
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------------------- Spin-Adapted V(X,Y) ----------------------------------------

# Defining a^\dag_p a_q...

## Creating spin-integrated V...
248 spin-integrated V terms created.

## Creating spin-integrated T - T^\dag...
74 spin-integrated A terms created.

## Selecting spin-integrated T - T^\dag...

# Selecting t1_ce...
 (   1.00000) t1(cc182a,ee176a) cre(ee176a) des(cc182a) 
 (   1.00000) t1(cc182b,ee176b) cre(ee176b) des(cc182b) 
 (  -1.00000) t1(cc182a,ee176a) cre(cc182a) des(ee176a) 
 (  -1.00000) t1(cc182b,ee176b) cre(cc182b) des(ee176b) 
>>> Slice t1_ce: 4 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t1_ce: 468 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t1_ce: 468 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -2.00000) h(i,a) t1(i,a) cre(X) des(Y) 
 (  -2.00000) h(i,a) t1(i,a) cre(X) des(Y) 
 (  -1.00000) t1(i,a) v(i,x,a,Y) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (  -1.00000) t1(i,a) v(i,Y,a,x) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (  -1.00000) t1(i,a) v(i,x,a,Y) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (  -1.00000) t1(i,a) v(i,Y,a,x) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,a) v(i,x,a,y) cre(X) cre(x) des(Y) des(y) 

Total terms : 22
SQA automation time :  0.575 seconds
>>> Slice t1_ce: 22 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 22 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 44 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

33 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -2.00000) h(i,a) t1(i,a) rdm(X,Y) 
 (   0.50000) t1(i,a) v(i,Y,x,a) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,Y,x) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,x,Y) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,x,y) rdm(X,x,Y,y) 
 (  -1.00000) t1(i,a) v(i,a,x,y) rdm(X,y,Y,x) 
 (   2.00000) t1(i,a) v(i,j,j,a) rdm(X,Y) 
 (   0.50000) t1(i,a) v(i,x,Y,a) rdm(X,x) 
 (   0.50000) t1(i,a) v(i,x,y,a) rdm(X,x,Y,y) 
 (   0.50000) t1(i,a) v(i,x,y,a) rdm(X,y,Y,x) 
 (  -4.00000) t1(i,a) v(j,j,i,a) rdm(X,Y) 

Total spin-integrated terms: 22
Total spin-adapted terms: 11
Spin-adaptation automation time :  0.282 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t1_ce: 11 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_caea...
 (   1.00000) t1(cc183a,aa180a,ee177a,aa181a) cre(ee177a) cre(aa181a) des(aa180a) des(cc183a) 
 (   1.00000) t1(cc183b,aa180b,ee177b,aa181b) cre(ee177b) cre(aa181b) des(aa180b) des(cc183b) 
 (   1.00000) t1(cc184a,aa182b,ee178a,aa183b) cre(ee178a) cre(aa183b) des(aa182b) des(cc184a) 
 (   1.00000) t1(cc185a,aa184b,ee178b,aa182a) cre(ee178b) cre(aa182a) des(aa184b) des(cc185a) 
 (   1.00000) t1(cc184b,aa183a,ee179b,aa184a) cre(ee179b) cre(aa184a) des(aa183a) des(cc184b) 
 (   1.00000) t1(cc185b,aa185a,ee179a,aa185b) cre(ee179a) cre(aa185b) des(aa185a) des(cc185b) 
 (  -1.00000) t1(cc183a,aa180a,ee177a,aa181a) cre(cc183a) cre(aa180a) des(aa181a) des(ee177a) 
 (  -1.00000) t1(cc183b,aa180b,ee177b,aa181b) cre(cc183b) cre(aa180b) des(aa181b) des(ee177b) 
 (  -1.00000) t1(cc184a,aa182b,ee178a,aa183b) cre(cc184a) cre(aa182b) des(aa183b) des(ee178a) 
 (  -1.00000) t1(cc185a,aa184b,ee178b,aa182a) cre(cc185a) cre(aa184b) des(aa182a) des(ee178b) 
 (  -1.00000) t1(cc184b,aa183a,ee179b,aa184a) cre(cc184b) cre(aa183a) des(aa184a) des(ee179b) 
 (  -1.00000) t1(cc185b,aa185a,ee179a,aa185b) cre(cc185b) cre(aa185a) des(aa185b) des(ee179a) 
>>> Slice t2_caea: 12 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_caea: 2936 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_caea: 2936 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) h(i,a) t1(i,Y,a,x) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,Y,a,x) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 

Total terms : 94
SQA automation time :  9.335 seconds
>>> Slice t2_caea: 94 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 94 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 410 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

336 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) h(i,a) t1(i,Y,a,x) rdm(X,x) 
 (   0.50000) h(i,a) t1(i,Y,x,a) rdm(X,x) 
 (   0.50000) h(i,a) t1(i,x,Y,a) rdm(X,x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) rdm(X,x) 
 (  -1.00000) h(i,a) t1(i,x,a,y) rdm(X,x,Y,y) 
 (  -1.00000) h(i,a) t1(i,x,a,y) rdm(X,y,Y,x) 
 (   0.50000) h(i,a) t1(i,x,y,a) rdm(X,x,Y,y) 
 (   0.50000) h(i,a) t1(i,x,y,a) rdm(X,y,Y,x) 
 (  -1.00000) t1(i,Y,a,x) v(i,a,y,x) rdm(X,y) 
 (  -1.00000) t1(i,Y,a,x) v(i,a,y,z) rdm(X,z,x,y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,Y,a,x) v(i,x,y,a) rdm(X,y) 
 (   0.50000) t1(i,Y,a,x) v(i,y,z,a) rdm(X,y,x,z) 
 (  -2.00000) t1(i,Y,a,x) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,Y,x,a) v(i,a,y,x) rdm(X,y) 
 (   0.50000) t1(i,Y,x,a) v(i,a,y,z) rdm(X,z,x,y) 
 (  -0.50000) t1(i,Y,x,a) v(i,j,j,a) rdm(X,x) 
 (  -1.00000) t1(i,Y,x,a) v(i,x,y,a) rdm(X,y) 
 (   0.50000) t1(i,Y,x,a) v(i,y,z,a) rdm(X,y,z,x) 
 (   1.00000) t1(i,Y,x,a) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,x,Y,a) v(i,a,y,z) rdm(X,y,x,z) 
 (  -0.50000) t1(i,x,Y,a) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,x,Y,a) v(i,y,z,a) rdm(X,z,y,x) 
 (   1.00000) t1(i,x,Y,a) v(j,j,i,a) rdm(X,x) 
 (  -1.00000) t1(i,x,a,Y) v(i,a,y,z) rdm(X,y,x,z) 
 (   1.00000) t1(i,x,a,Y) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,Y) v(i,y,z,a) rdm(X,z,x,y) 
 (  -2.00000) t1(i,x,a,Y) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,y) v(i,Y,z,a) rdm(X,x,z,y) 
 (  -1.00000) t1(i,x,a,y) v(i,a,Y,y) rdm(X,x) 
 (  -1.00000) t1(i,x,a,y) v(i,a,Y,z) rdm(X,y,z,x) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,Y) rdm(X,x,z,y) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,w) rdm(X,x,w,Y,y,z) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,w) rdm(X,y,z,Y,x,w) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,y) rdm(X,x,Y,z) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,y) rdm(X,z,Y,x) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,y,Y,x) 
 (   0.50000) t1(i,x,a,y) v(i,y,Y,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,y) v(i,y,z,a) rdm(X,x,Y,z) 
 (   0.50000) t1(i,x,a,y) v(i,y,z,a) rdm(X,z,Y,x) 
 (   0.50000) t1(i,x,a,y) v(i,z,Y,a) rdm(X,y,z,x) 
 (   0.50000) t1(i,x,a,y) v(i,z,w,a) rdm(X,x,z,Y,y,w) 
 (   0.50000) t1(i,x,a,y) v(i,z,w,a) rdm(X,y,w,Y,x,z) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,x,Y,y) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,y,Y,x) 
 (   0.50000) t1(i,x,y,a) v(i,Y,z,a) rdm(X,x,y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,Y,y) rdm(X,x) 
 (   0.50000) t1(i,x,y,a) v(i,a,Y,z) rdm(X,y,z,x) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,Y) rdm(X,x,z,y) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,w) rdm(X,x,w,Y,y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,w) rdm(X,y,z,Y,x,w) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,y) rdm(X,x,Y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,y) rdm(X,z,Y,x) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,y,Y,x) 
 (  -1.00000) t1(i,x,y,a) v(i,y,Y,a) rdm(X,x) 
 (  -1.00000) t1(i,x,y,a) v(i,y,z,a) rdm(X,x,Y,z) 
 (  -1.00000) t1(i,x,y,a) v(i,y,z,a) rdm(X,z,Y,x) 
 (   0.50000) t1(i,x,y,a) v(i,z,Y,a) rdm(X,y,x,z) 
 (   0.33333) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,Y,w,y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,Y,y,w) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,w,Y,y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,w,y,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,y,Y,w) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,y,w,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,Y,x,z) 
 (   0.33333) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,Y,z,x) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,x,Y,z) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,x,z,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,z,Y,x) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,z,x,Y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,y,Y,x) 

Total spin-integrated terms: 94
Total spin-adapted terms: 74
Spin-adaptation automation time :  38.397 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_caea: 74 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

18 terms removed:
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) rdm(X,x) 
 (  -2.00000) t1(i,Y,a,x) v(j,j,i,a) rdm(X,x) 
 (  -0.50000) t1(i,Y,x,a) v(i,j,j,a) rdm(X,x) 
 (   1.00000) t1(i,Y,x,a) v(j,j,i,a) rdm(X,x) 
 (   2.00000) t1(i,a) v(i,j,j,a) rdm(X,Y) 
 (  -4.00000) t1(i,a) v(j,j,i,a) rdm(X,Y) 
 (  -0.50000) t1(i,x,Y,a) v(i,j,j,a) rdm(X,x) 
 (   1.00000) t1(i,x,Y,a) v(j,j,i,a) rdm(X,x) 
 (   1.00000) t1(i,x,a,Y) v(i,j,j,a) rdm(X,x) 
 (  -2.00000) t1(i,x,a,Y) v(j,j,i,a) rdm(X,x) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,y,Y,x) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,x,Y,y) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,y,Y,x) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,y,Y,x) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,y,Y,x) 
----------------------------------------------------------------------------------------------------
Remaining terms: 67


--------------------------------------- genEinsum equations ----------------------------------------

V1 =- einsum('ia,iYax,Xx->XY', h_ce, t1_caea, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,iYxa,Xx->XY', h_ce, t1_caae, rdm_ca, optimize = einsum_type)
V1 -= 2 * einsum('ia,ia,XY->XY', h_ce, t1_ce, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixYa,Xx->XY', h_ce, t1_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,ixaY,Xx->XY', h_ce, t1_caea, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,ixay,XxYy->XY', h_ce, t1_caea, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ia,ixay,XyYx->XY', h_ce, t1_caea, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XxYy->XY', h_ce, t1_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XyYx->XY', h_ce, t1_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYax,iayx,Xy->XY', t1_caea, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('iYax,iayz,Xzxy->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYax,ixya,Xy->XY', t1_caea, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYax,iyza,Xyxz->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iayx,Xy->XY', t1_caae, v_ceaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iayz,Xzxy->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYxa,ixya,Xy->XY', t1_caae, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iyza,Xyzx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,iYxa,Xx->XY', t1_ce, v_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaYx,Xx->XY', t1_ce, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaxY,Xx->XY', t1_ce, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaxy,XxYy->XY', t1_ce, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ia,iaxy,XyYx->XY', t1_ce, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixYa,Xx->XY', t1_ce, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XxYy->XY', t1_ce, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XyYx->XY', t1_ce, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYa,iayz,Xyxz->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYa,iyza,Xzyx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixaY,iayz,Xyxz->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixaY,iyza,Xzxy->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iYza,Xxzy->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iaYy,Xx->XY', t1_caea, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixay,iaYz,Xyzx->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazY,Xxzy->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazw,XxwYyz->XY', t1_caea, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixay,iazw,XyzYxw->XY', t1_caea, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixay,iazy,XxYz->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazy,XzYx->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyYa,Xx->XY', t1_caea, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyza,XxYz->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyza,XzYx->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izYa,Xyzx->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izwa,XxzYyw->XY', t1_caea, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izwa,XywYxz->XY', t1_caea, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iYza,Xxyz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iaYy,Xx->XY', t1_caae, v_ceaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iaYz,Xyzx->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazY,Xxzy->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazw,XxwYyz->XY', t1_caae, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazw,XyzYxw->XY', t1_caae, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazy,XxYz->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazy,XzYx->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixya,iyYa,Xx->XY', t1_caae, v_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixya,iyza,XxYz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixya,iyza,XzYx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,izYa,Xyxz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixya,izwa,XxzYwy->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzYyw->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzwYy->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzwyY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzyYw->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzywY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywYxz->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixya,izwa,XywYzx->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywxYz->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywxzY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywzYx->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywzxY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 102.36 seconds.
