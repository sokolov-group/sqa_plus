
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------------------- Spin-Adapted V(X,Y) ----------------------------------------

# Defining a^\dag_p a_q...

## Creating spin-integrated V...
248 spin-integrated V terms created.

## Creating spin-integrated T - T^\dag...
74 spin-integrated A terms created.

## Selecting spin-integrated T - T^\dag...

# Selecting t1_ae...
 (   1.00000) t1(aa193a,ee180a) cre(ee180a) des(aa193a) 
 (   1.00000) t1(aa193b,ee180b) cre(ee180b) des(aa193b) 
 (  -1.00000) t1(aa193a,ee180a) cre(aa193a) des(ee180a) 
 (  -1.00000) t1(aa193b,ee180b) cre(aa193b) des(ee180b) 
>>> Slice t1_ae: 4 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t1_ae: 456 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t1_ae: 456 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) h(Y,a) t1(x,a) cre(X) des(x) 
 (  -1.00000) h(x,a) t1(Y,a) cre(X) des(x) 
 (  -1.00000) t1(Y,a) v(i,x,i,a) cre(X) des(x) 
 (  -1.00000) t1(Y,a) v(i,x,i,a) cre(X) des(x) 
 (  -1.00000) t1(x,a) v(i,Y,i,a) cre(X) des(x) 
 (  -1.00000) t1(x,a) v(i,Y,i,a) cre(X) des(x) 
 (   1.00000) h(x,a) t1(y,a) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(x,a) t1(y,a) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(x,a) t1(y,a) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(x,a) t1(y,a) cre(X) cre(y) des(Y) des(x) 
 (   0.50000) t1(Y,a) v(x,y,a,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(Y,a) v(x,y,a,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,a) v(Y,y,a,z) cre(X) cre(y) des(x) des(z) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(x,a) v(Y,y,a,z) cre(X) cre(y) des(x) des(z) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(y) des(Y) des(x) 
 (  -0.50000) t1(x,a) v(y,z,a,Y) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(x,a) v(Y,y,a,z) cre(X) cre(y) des(x) des(z) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(x,a) v(y,z,a,Y) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(x,a) v(i,y,i,a) cre(X) cre(x) des(Y) des(y) 
 (   0.50000) t1(x,a) v(y,z,a,w) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   1.00000) t1(x,a) v(y,z,a,w) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   0.50000) t1(x,a) v(y,z,a,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(x,a) v(y,z,a,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(x,a) v(y,z,a,w) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   0.50000) t1(x,a) v(y,z,a,w) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   1.00000) t1(x,a) v(y,z,a,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   0.50000) t1(x,a) v(y,z,a,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 

Total terms : 33
SQA automation time :  0.445 seconds
>>> Slice t1_ae: 33 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 33 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 104 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

86 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) h(Y,a) t1(x,a) rdm(X,x) 
 (  -0.50000) h(x,a) t1(Y,a) rdm(X,x) 
 (  -0.50000) h(x,a) t1(y,a) rdm(X,x,Y,y) 
 (  -0.50000) h(x,a) t1(y,a) rdm(X,y,Y,x) 
 (  -1.00000) t1(Y,a) v(i,i,x,a) rdm(X,x) 
 (   0.50000) t1(Y,a) v(i,x,a,i) rdm(X,x) 
 (  -0.50000) t1(Y,a) v(x,y,z,a) rdm(X,y,z,x) 
 (  -0.50000) t1(x,a) v(Y,y,z,a) rdm(X,z,y,x) 
 (   0.50000) t1(x,a) v(i,Y,a,i) rdm(X,x) 
 (  -1.00000) t1(x,a) v(i,i,Y,a) rdm(X,x) 
 (  -1.00000) t1(x,a) v(i,i,y,a) rdm(X,x,Y,y) 
 (  -1.00000) t1(x,a) v(i,i,y,a) rdm(X,y,Y,x) 
 (   0.50000) t1(x,a) v(i,y,a,i) rdm(X,x,Y,y) 
 (   0.50000) t1(x,a) v(i,y,a,i) rdm(X,y,Y,x) 
 (  -0.50000) t1(x,a) v(y,Y,z,a) rdm(X,x,y,z) 
 (  -0.50000) t1(x,a) v(y,z,Y,a) rdm(X,y,x,z) 
 (  -0.50000) t1(x,a) v(y,z,w,a) rdm(X,w,y,Y,x,z) 
 (  -0.50000) t1(x,a) v(y,z,w,a) rdm(X,x,z,Y,w,y) 

Total spin-integrated terms: 33
Total spin-adapted terms: 18
Spin-adaptation automation time :  7.225 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t1_ae: 18 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t1_ca...
 (   1.00000) t1(cc186a,aa186a) cre(aa186a) des(cc186a) 
 (   1.00000) t1(cc186b,aa186b) cre(aa186b) des(cc186b) 
 (  -1.00000) t1(cc186a,aa186a) cre(cc186a) des(aa186a) 
 (  -1.00000) t1(cc186b,aa186b) cre(cc186b) des(aa186b) 
>>> Slice t1_ca: 4 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t1_ca: 452 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t1_ca: 452 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) h(i,Y) t1(i,x) cre(X) des(x) 
 (   1.00000) h(i,x) t1(i,Y) cre(X) des(x) 
 (  -2.00000) h(i,x) t1(i,x) cre(X) des(Y) 
 (  -2.00000) h(i,x) t1(i,x) cre(X) des(Y) 
 (  -1.00000) t1(i,Y) v(j,x,i,j) cre(X) des(x) 
 (  -1.00000) t1(i,Y) v(j,x,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x) v(i,y,Y,x) cre(X) des(y) 
 (  -1.00000) t1(i,x) v(i,j,j,Y) cre(X) des(x) 
 (   1.00000) t1(i,x) v(i,j,j,x) cre(X) des(Y) 
 (  -1.00000) t1(i,x) v(i,j,j,Y) cre(X) des(x) 
 (   1.00000) t1(i,x) v(i,j,j,x) cre(X) des(Y) 
 (  -1.00000) t1(i,x) v(x,y,i,Y) cre(X) des(y) 
 (   1.00000) t1(i,x) v(j,x,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,x) v(j,x,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,x) v(i,y,Y,x) cre(X) des(y) 
 (   1.00000) t1(i,x) v(i,j,j,x) cre(X) des(Y) 
 (   1.00000) t1(i,x) v(i,j,j,x) cre(X) des(Y) 
 (  -1.00000) t1(i,x) v(x,y,i,Y) cre(X) des(y) 
 (   1.00000) t1(i,x) v(j,x,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,x) v(j,x,i,j) cre(X) des(Y) 
 (  -1.00000) h(i,x) t1(i,y) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) h(i,x) t1(i,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) h(i,x) t1(i,y) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) h(i,x) t1(i,y) cre(X) cre(y) des(Y) des(x) 
 (  -0.50000) t1(i,Y) v(x,y,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y) v(x,y,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x) v(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x) v(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(i,j,j,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x) v(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x) v(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(i,j,j,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x) v(x,y,i,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(x,y,i,z) cre(X) cre(z) des(Y) des(y) 
 (   0.50000) t1(i,x) v(y,z,i,Y) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(i,x) v(j,y,i,j) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,x) v(j,y,i,j) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x) v(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x) v(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(i,j,j,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x) v(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(i,j,j,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x) v(x,y,i,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(x,y,i,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,x) v(y,z,i,Y) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(i,x) v(j,y,i,j) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,x) v(j,y,i,j) cre(X) cre(x) des(Y) des(y) 
 (  -0.50000) t1(i,x) v(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -1.00000) t1(i,x) v(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.50000) t1(i,x) v(y,z,i,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x) v(y,z,i,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x) v(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.50000) t1(i,x) v(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -1.00000) t1(i,x) v(y,z,i,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -0.50000) t1(i,x) v(y,z,i,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 

Total terms : 55
SQA automation time :  0.824 seconds
>>> Slice t1_ca: 55 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 55 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 148 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

119 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   0.50000) h(i,Y) t1(i,x) rdm(X,x) 
 (   0.50000) h(i,x) t1(i,Y) rdm(X,x) 
 (  -2.00000) h(i,x) t1(i,x) rdm(X,Y) 
 (   0.50000) h(i,x) t1(i,y) rdm(X,x,Y,y) 
 (   0.50000) h(i,x) t1(i,y) rdm(X,y,Y,x) 
 (  -0.50000) t1(i,Y) v(i,j,j,x) rdm(X,x) 
 (   0.50000) t1(i,Y) v(i,x,y,z) rdm(X,y,x,z) 
 (   1.00000) t1(i,Y) v(j,j,i,x) rdm(X,x) 
 (   0.50000) t1(i,x) v(i,Y,y,x) rdm(X,y) 
 (   0.50000) t1(i,x) v(i,Y,y,z) rdm(X,z,x,y) 
 (  -0.50000) t1(i,x) v(i,j,j,Y) rdm(X,x) 
 (   2.00000) t1(i,x) v(i,j,j,x) rdm(X,Y) 
 (  -0.50000) t1(i,x) v(i,j,j,y) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x) v(i,j,j,y) rdm(X,y,Y,x) 
 (  -1.00000) t1(i,x) v(i,x,Y,y) rdm(X,y) 
 (  -1.00000) t1(i,x) v(i,x,y,Y) rdm(X,y) 
 (  -1.00000) t1(i,x) v(i,x,y,z) rdm(X,y,Y,z) 
 (  -1.00000) t1(i,x) v(i,x,y,z) rdm(X,z,Y,y) 
 (   0.50000) t1(i,x) v(i,y,Y,x) rdm(X,y) 
 (   0.50000) t1(i,x) v(i,y,Y,z) rdm(X,x,z,y) 
 (   0.50000) t1(i,x) v(i,y,z,Y) rdm(X,y,z,x) 
 (   0.50000) t1(i,x) v(i,y,z,w) rdm(X,x,z,Y,y,w) 
 (   0.50000) t1(i,x) v(i,y,z,w) rdm(X,y,w,Y,x,z) 
 (   0.50000) t1(i,x) v(i,y,z,x) rdm(X,y,Y,z) 
 (   0.50000) t1(i,x) v(i,y,z,x) rdm(X,z,Y,y) 
 (   1.00000) t1(i,x) v(j,j,i,Y) rdm(X,x) 
 (  -4.00000) t1(i,x) v(j,j,i,x) rdm(X,Y) 
 (   1.00000) t1(i,x) v(j,j,i,y) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x) v(j,j,i,y) rdm(X,y,Y,x) 

Total spin-integrated terms: 55
Total spin-adapted terms: 29
Spin-adaptation automation time :  7.500 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t1_ca: 29 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t1_ce...
 (   1.00000) t1(cc182a,ee176a) cre(ee176a) des(cc182a) 
 (   1.00000) t1(cc182b,ee176b) cre(ee176b) des(cc182b) 
 (  -1.00000) t1(cc182a,ee176a) cre(cc182a) des(ee176a) 
 (  -1.00000) t1(cc182b,ee176b) cre(cc182b) des(ee176b) 
>>> Slice t1_ce: 4 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t1_ce: 468 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t1_ce: 468 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -2.00000) h(i,a) t1(i,a) cre(X) des(Y) 
 (  -2.00000) h(i,a) t1(i,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,x,Y,a) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(x,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,a) v(j,a,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(j,a,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,x,Y,a) cre(X) des(x) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(i,j,j,a) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(x,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,a) v(j,a,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,a) v(j,a,i,j) cre(X) des(Y) 
 (  -1.00000) t1(i,a) v(i,x,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(i,x,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(x,a,i,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(x,a,i,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(i,x,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(i,x,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(x,a,i,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,a) v(x,a,i,y) cre(X) cre(y) des(Y) des(x) 

Total terms : 22
SQA automation time :  0.611 seconds
>>> Slice t1_ce: 22 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 22 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 44 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

33 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -2.00000) h(i,a) t1(i,a) rdm(X,Y) 
 (   0.50000) t1(i,a) v(i,Y,x,a) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,Y,x) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,x,Y) rdm(X,x) 
 (  -1.00000) t1(i,a) v(i,a,x,y) rdm(X,x,Y,y) 
 (  -1.00000) t1(i,a) v(i,a,x,y) rdm(X,y,Y,x) 
 (   2.00000) t1(i,a) v(i,j,j,a) rdm(X,Y) 
 (   0.50000) t1(i,a) v(i,x,Y,a) rdm(X,x) 
 (   0.50000) t1(i,a) v(i,x,y,a) rdm(X,x,Y,y) 
 (   0.50000) t1(i,a) v(i,x,y,a) rdm(X,y,Y,x) 
 (  -4.00000) t1(i,a) v(j,j,i,a) rdm(X,Y) 

Total spin-integrated terms: 22
Total spin-adapted terms: 11
Spin-adaptation automation time :  0.272 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t1_ce: 11 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_aaea...
 (   0.50000) t1(aa194a,aa195a,ee181a,aa196a) cre(ee181a) cre(aa196a) des(aa195a) des(aa194a) 
 (   0.50000) t1(aa194b,aa195b,ee181b,aa196b) cre(ee181b) cre(aa196b) des(aa195b) des(aa194b) 
 (   1.00000) t1(aa197a,aa197b,ee182a,aa198b) cre(ee182a) cre(aa198b) des(aa197b) des(aa197a) 
 (   1.00000) t1(aa199b,aa198a,ee182b,aa199a) cre(ee182b) cre(aa199a) des(aa198a) des(aa199b) 
 (  -0.50000) t1(aa194a,aa195a,ee181a,aa196a) cre(aa194a) cre(aa195a) des(aa196a) des(ee181a) 
 (  -0.50000) t1(aa194b,aa195b,ee181b,aa196b) cre(aa194b) cre(aa195b) des(aa196b) des(ee181b) 
 (  -1.00000) t1(aa197a,aa197b,ee182a,aa198b) cre(aa197a) cre(aa197b) des(aa198b) des(ee182a) 
 (  -1.00000) t1(aa199b,aa198a,ee182b,aa199a) cre(aa199b) cre(aa198a) des(aa199a) des(ee182b) 
>>> Slice t2_aaea: 8 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_aaea: 1708 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_aaea: 1708 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -0.50000) h(Y,a) t1(x,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) h(Y,a) t1(x,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) h(x,a) t1(Y,y,z,a) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) h(x,a) t1(Y,y,z,a) cre(X) cre(y) des(x) des(z) 
 (   0.50000) h(x,a) t1(y,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) h(x,a) t1(Y,y,z,a) cre(X) cre(y) des(x) des(z) 
 (   1.00000) h(x,a) t1(y,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (   0.50000) t1(Y,x,y,a) v(z,w,y,a) cre(X) cre(x) des(z) des(w) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,y,a) v(z,w,y,a) cre(X) cre(x) des(z) des(w) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,y,a) v(z,w,y,a) cre(X) cre(x) des(z) des(w) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,y,a) v(i,z,i,a) cre(X) cre(x) des(y) des(z) 
 (   0.50000) t1(x,y,Y,a) v(i,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   0.50000) t1(x,y,Y,a) v(i,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   0.50000) t1(x,y,z,a) v(z,a,Y,w) cre(X) cre(w) des(x) des(y) 
 (  -0.50000) t1(x,y,z,a) v(i,a,i,Y) cre(X) cre(z) des(x) des(y) 
 (  -0.50000) t1(x,y,z,a) v(i,a,i,Y) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(z,a,Y,w) cre(X) cre(w) des(x) des(y) 
 (  -1.00000) t1(x,y,z,a) v(i,a,i,Y) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(x,y,z,a) v(i,a,i,Y) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,y,Y,a) v(i,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,y,Y,a) v(i,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(z,a,Y,w) cre(X) cre(w) des(x) des(y) 
 (  -0.50000) h(x,a) t1(y,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -0.50000) h(x,a) t1(y,z,w,a) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -1.00000) h(x,a) t1(y,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) h(x,a) t1(y,z,w,a) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -1.00000) h(x,a) t1(y,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) h(x,a) t1(y,z,w,a) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.50000) h(x,a) t1(y,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -0.50000) h(x,a) t1(y,z,w,a) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.50000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -1.00000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -0.50000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -1.00000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -1.00000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -0.50000) t1(Y,x,y,a) v(z,w,u,a) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (  -0.25000) t1(x,y,Y,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (  -0.50000) t1(x,y,Y,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   0.25000) t1(x,y,z,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(Y) des(x) des(y) 
 (   0.50000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.50000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.25000) t1(x,y,z,a) v(w,u,Y,a) cre(X) cre(x) cre(y) des(z) des(w) des(u) 
 (   0.25000) t1(x,y,z,a) v(w,u,z,a) cre(X) cre(x) cre(y) des(Y) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.50000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   1.00000) t1(x,y,z,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(Y) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   1.00000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   1.00000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.50000) t1(x,y,z,a) v(w,u,Y,a) cre(X) cre(x) cre(y) des(z) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(w,u,z,a) cre(X) cre(x) cre(y) des(Y) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   1.00000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (  -1.00000) t1(x,y,Y,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (  -0.50000) t1(x,y,Y,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   1.00000) t1(x,y,z,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(Y) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   1.00000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   1.00000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -1.00000) t1(x,y,z,a) v(w,u,Y,a) cre(X) cre(x) cre(y) des(z) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(w,u,z,a) cre(X) cre(x) cre(y) des(Y) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   1.00000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.25000) t1(x,y,z,a) v(z,a,w,u) cre(X) cre(w) cre(u) des(Y) des(x) des(y) 
 (   0.50000) t1(x,y,z,a) v(w,a,Y,u) cre(X) cre(z) cre(u) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.50000) t1(x,y,z,a) v(i,a,i,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.50000) t1(x,y,z,a) v(w,u,Y,a) cre(X) cre(x) cre(y) des(z) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.25000) t1(x,y,z,a) v(w,u,z,a) cre(X) cre(x) cre(y) des(Y) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(i,w,i,a) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.25000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.25000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   1.00000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   1.00000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   1.00000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   0.50000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.25000) t1(x,y,z,a) v(w,a,u,v) cre(X) cre(z) cre(u) cre(v) des(Y) des(x) des(y) des(w) 
 (   0.50000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 
 (   0.25000) t1(x,y,z,a) v(w,u,v,a) cre(X) cre(x) cre(y) cre(v) des(Y) des(z) des(w) des(u) 

Total terms : 95
SQA automation time :  4.433 seconds
>>> Slice t2_aaea: 95 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 95 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 1008 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

908 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) h(Y,a) t1(x,y,z,a) rdm(X,z,y,x) 
 (  -0.50000) h(x,a) t1(Y,y,z,a) rdm(X,y,z,x) 
 (  -0.50000) h(x,a) t1(y,Y,z,a) rdm(X,y,x,z) 
 (  -0.50000) h(x,a) t1(y,z,Y,a) rdm(X,x,y,z) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,x,w,Y,y,z) 
 (  -0.33333) h(x,a) t1(y,z,w,a) rdm(X,x,w,Y,z,y) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,x,w,y,Y,z) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,x,w,y,z,Y) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,x,w,z,Y,y) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,x,w,z,y,Y) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,z,y,Y,w,x) 
 (  -0.33333) h(x,a) t1(y,z,w,a) rdm(X,z,y,Y,x,w) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,z,y,w,Y,x) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,z,y,w,x,Y) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,z,y,x,Y,w) 
 (   0.16667) h(x,a) t1(y,z,w,a) rdm(X,z,y,x,w,Y) 
 (  -1.00000) t1(Y,x,y,a) v(i,i,z,a) rdm(X,x,y,z) 
 (   0.50000) t1(Y,x,y,a) v(i,z,a,i) rdm(X,x,y,z) 
 (   0.16667) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,u,y,z) 
 (   0.16667) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,u,z,y) 
 (  -0.33333) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,y,u,z) 
 (   0.16667) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,y,z,u) 
 (   0.16667) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,z,u,y) 
 (   0.16667) t1(Y,x,y,a) v(z,w,u,a) rdm(X,x,w,z,y,u) 
 (  -0.50000) t1(Y,x,y,a) v(z,y,w,a) rdm(X,x,z,w) 
 (  -1.00000) t1(x,Y,y,a) v(i,i,z,a) rdm(X,x,z,y) 
 (   0.50000) t1(x,Y,y,a) v(i,z,a,i) rdm(X,x,z,y) 
 (  -0.50000) t1(x,Y,y,a) v(z,w,u,a) rdm(X,x,w,u,y,z) 
 (  -0.50000) t1(x,Y,y,a) v(z,y,w,a) rdm(X,x,w,z) 
 (  -1.00000) t1(x,y,Y,a) v(i,i,z,a) rdm(X,z,x,y) 
 (   0.50000) t1(x,y,Y,a) v(i,z,a,i) rdm(X,z,x,y) 
 (   0.16667) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,w,x,y) 
 (   0.16667) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,w,y,x) 
 (   0.16667) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,x,w,y) 
 (  -0.33333) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,x,y,w) 
 (   0.16667) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,y,w,x) 
 (   0.16667) t1(x,y,Y,a) v(z,w,u,a) rdm(X,u,z,y,x,w) 
 (  -0.50000) t1(x,y,z,a) v(Y,w,u,a) rdm(X,z,u,w,x,y) 
 (  -0.50000) t1(x,y,z,a) v(Y,z,w,a) rdm(X,w,x,y) 
 (   0.50000) t1(x,y,z,a) v(i,Y,a,i) rdm(X,z,y,x) 
 (  -1.00000) t1(x,y,z,a) v(i,i,Y,a) rdm(X,z,y,x) 
 (  -1.00000) t1(x,y,z,a) v(i,i,w,a) rdm(X,y,x,Y,w,z) 
 (  -1.00000) t1(x,y,z,a) v(i,i,w,a) rdm(X,z,w,Y,x,y) 
 (   0.50000) t1(x,y,z,a) v(i,w,a,i) rdm(X,y,x,Y,w,z) 
 (   0.50000) t1(x,y,z,a) v(i,w,a,i) rdm(X,z,w,Y,x,y) 
 (   0.16667) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,u,w,z) 
 (   0.16667) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,u,z,w) 
 (  -0.33333) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,w,u,z) 
 (   0.16667) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,w,z,u) 
 (   0.16667) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,z,u,w) 
 (   0.16667) t1(x,y,z,a) v(w,Y,u,a) rdm(X,y,x,z,w,u) 
 (   0.16667) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,u,x,y) 
 (   0.16667) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,u,y,x) 
 (   0.16667) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,x,u,y) 
 (   0.16667) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,x,y,u) 
 (   0.16667) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,y,u,x) 
 (  -0.33333) t1(x,y,z,a) v(w,u,Y,a) rdm(X,z,w,y,x,u) 
 (   0.09167) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,v,w,z) 
 (  -0.35833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,v,z,w) 
 (   0.09167) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,w,v,z) 
 (   0.14167) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,w,z,v) 
 (   0.24167) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,z,v,w) 
 (   0.04167) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,Y,z,w,v) 
 (   0.00833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,v,Y,w,z) 
 (   0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,v,Y,z,w) 
 (  -0.07500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,v,w,Y,z) 
 (  -0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,v,z,Y,w) 
 (   0.00833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,w,Y,v,z) 
 (   0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,w,Y,z,v) 
 (  -0.07500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,w,v,Y,z) 
 (  -0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,w,z,Y,v) 
 (   0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,Y,v,w) 
 (   0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,Y,w,v) 
 (  -0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,v,Y,w) 
 (  -0.03333) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,v,w,Y) 
 (  -0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,w,Y,v) 
 (  -0.03333) t1(x,y,z,a) v(w,u,v,a) rdm(X,y,x,u,z,w,v,Y) 
 (   0.09167) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,u,x,y) 
 (   0.09167) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,u,y,x) 
 (   0.14167) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,x,u,y) 
 (  -0.35833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,x,y,u) 
 (   0.14167) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,y,u,x) 
 (   0.14167) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,Y,y,x,u) 
 (  -0.03333) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,u,Y,x,y) 
 (  -0.03333) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,u,Y,y,x) 
 (  -0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,Y,u,y) 
 (  -0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,Y,y,u) 
 (  -0.07500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,u,Y,y) 
 (  -0.07500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,u,y,Y) 
 (  -0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,y,Y,u) 
 (  -0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,x,y,u,Y) 
 (   0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,Y,u,x) 
 (   0.02500) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,Y,x,u) 
 (   0.00833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,u,Y,x) 
 (   0.00833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,u,x,Y) 
 (   0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,x,Y,u) 
 (   0.05833) t1(x,y,z,a) v(w,u,v,a) rdm(X,z,v,w,y,x,u,Y) 
 (  -0.50000) t1(x,y,z,a) v(w,z,Y,a) rdm(X,w,y,x) 
 (  -0.50000) t1(x,y,z,a) v(w,z,u,a) rdm(X,u,w,Y,y,x) 
 (  -0.50000) t1(x,y,z,a) v(w,z,u,a) rdm(X,y,x,Y,u,w) 

Total spin-integrated terms: 95
Total spin-adapted terms: 100
Spin-adaptation automation time :  1225.988 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_aaea: 100 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_aaee...
 (   0.25000) t1(aa207a,aa208a,ee192a,ee193a) cre(ee192a) cre(ee193a) des(aa208a) des(aa207a) 
 (   0.25000) t1(aa207b,aa208b,ee192b,ee193b) cre(ee192b) cre(ee193b) des(aa208b) des(aa207b) 
 (   1.00000) t1(aa209a,aa209b,ee194a,ee194b) cre(ee194a) cre(ee194b) des(aa209b) des(aa209a) 
 (  -0.25000) t1(aa207a,aa208a,ee192a,ee193a) cre(aa207a) cre(aa208a) des(ee193a) des(ee192a) 
 (  -0.25000) t1(aa207b,aa208b,ee192b,ee193b) cre(aa207b) cre(aa208b) des(ee193b) des(ee192b) 
 (  -1.00000) t1(aa209a,aa209b,ee194a,ee194b) cre(aa209a) cre(aa209b) des(ee194b) des(ee194a) 
>>> Slice t2_aaee: 6 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_aaee: 1014 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_aaee: 1014 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   0.25000) t1(Y,x,a,b) v(y,z,a,b) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(Y,x,a,b) v(y,z,a,b) cre(X) cre(x) des(y) des(z) 
 (   0.25000) t1(x,y,a,b) v(a,b,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(x,y,a,b) v(a,b,Y,z) cre(X) cre(z) des(x) des(y) 
 (   0.12500) t1(x,y,a,b) v(a,b,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.12500) t1(x,y,a,b) v(z,w,a,b) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   1.00000) t1(x,y,a,b) v(a,b,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   1.00000) t1(x,y,a,b) v(z,w,a,b) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.12500) t1(x,y,a,b) v(a,b,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.12500) t1(x,y,a,b) v(z,w,a,b) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 

Total terms : 10
SQA automation time :  1.316 seconds
>>> Slice t2_aaee: 10 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 10 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 84 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

80 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) t1(Y,x,a,b) v(y,a,z,b) rdm(X,x,y,z) 
 (  -0.50000) t1(x,y,a,b) v(Y,a,z,b) rdm(X,z,x,y) 
 (  -0.25000) t1(x,y,a,b) v(z,a,w,b) rdm(X,x,y,Y,z,w) 
 (  -0.25000) t1(x,y,a,b) v(z,a,w,b) rdm(X,z,w,Y,x,y) 

Total spin-integrated terms: 10
Total spin-adapted terms: 4
Spin-adaptation automation time :  14.422 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_aaee: 4 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_caaa...
 (   0.50000) t1(cc187a,aa187a,aa188a,aa189a) cre(aa188a) cre(aa189a) des(aa187a) des(cc187a) 
 (   0.50000) t1(cc187b,aa187b,aa188b,aa189b) cre(aa188b) cre(aa189b) des(aa187b) des(cc187b) 
 (   1.00000) t1(cc188a,aa190b,aa190a,aa191b) cre(aa190a) cre(aa191b) des(aa190b) des(cc188a) 
 (   1.00000) t1(cc188b,aa191a,aa192b,aa192a) cre(aa192b) cre(aa192a) des(aa191a) des(cc188b) 
 (  -0.50000) t1(cc187a,aa187a,aa188a,aa189a) cre(cc187a) cre(aa187a) des(aa189a) des(aa188a) 
 (  -0.50000) t1(cc187b,aa187b,aa188b,aa189b) cre(cc187b) cre(aa187b) des(aa189b) des(aa188b) 
 (  -1.00000) t1(cc188a,aa190b,aa190a,aa191b) cre(cc188a) cre(aa190b) des(aa191b) des(aa190a) 
 (  -1.00000) t1(cc188b,aa191a,aa192b,aa192a) cre(cc188b) cre(aa191a) des(aa192a) des(aa192b) 
>>> Slice t2_caaa: 8 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_caaa: 1696 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_caaa: 1696 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) h(i,x) t1(i,Y,x,y) cre(X) des(y) 
 (   1.00000) h(i,x) t1(i,y,Y,x) cre(X) des(y) 
 (  -1.00000) h(i,x) t1(i,Y,x,y) cre(X) des(y) 
 (   1.00000) h(i,x) t1(i,y,Y,x) cre(X) des(y) 
 (  -0.50000) t1(i,Y,x,y) v(i,z,x,y) cre(X) des(z) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) cre(X) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) cre(X) des(y) 
 (  -1.00000) t1(i,Y,x,y) v(i,z,x,y) cre(X) des(z) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) cre(X) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) cre(X) des(y) 
 (  -1.00000) t1(i,x,Y,y) v(j,y,i,j) cre(X) des(x) 
 (  -1.00000) t1(i,x,Y,y) v(j,y,i,j) cre(X) des(x) 
 (  -0.50000) t1(i,x,y,z) v(y,z,i,Y) cre(X) des(x) 
 (  -1.00000) t1(i,x,Y,y) v(j,y,i,j) cre(X) des(x) 
 (  -1.00000) t1(i,x,Y,y) v(j,y,i,j) cre(X) des(x) 
 (  -1.00000) t1(i,x,y,z) v(y,z,i,Y) cre(X) des(x) 
 (  -0.50000) h(i,Y) t1(i,x,y,z) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) h(i,Y) t1(i,x,y,z) cre(X) cre(x) des(y) des(z) 
 (   0.50000) h(i,x) t1(i,Y,y,z) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) h(i,x) t1(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) h(i,x) t1(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) h(i,x) t1(i,Y,y,z) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) h(i,x) t1(i,y,Y,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) h(i,x) t1(i,y,x,z) cre(X) cre(z) des(Y) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,z,x,w) cre(X) cre(w) des(y) des(z) 
 (   1.00000) t1(i,Y,x,y) v(i,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) t1(i,Y,x,y) v(i,j,j,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,Y,x,y) v(i,z,x,w) cre(X) cre(w) des(y) des(z) 
 (  -1.00000) t1(i,Y,x,y) v(i,j,j,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,Y,y) v(y,z,i,w) cre(X) cre(w) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(y,z,i,w) cre(X) cre(w) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (   1.00000) t1(i,x,y,z) v(i,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (   0.50000) t1(i,x,y,z) v(i,w,y,z) cre(X) cre(x) des(Y) des(w) 
 (   0.50000) t1(i,x,y,z) v(i,j,j,Y) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) t1(i,x,y,z) v(i,j,j,Y) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) t1(i,x,y,z) v(y,z,i,w) cre(X) cre(w) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(y,w,i,Y) cre(X) cre(z) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,x,Y,y) v(y,z,i,w) cre(X) cre(w) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (   1.00000) t1(i,x,y,z) v(i,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,Y) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,z) cre(X) cre(x) des(Y) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,Y) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,z,i,w) cre(X) cre(w) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(y,w,i,Y) cre(X) cre(z) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,y,z) v(i,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (  -1.00000) t1(i,x,Y,y) v(y,z,i,w) cre(X) cre(w) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(y,z,i,w) cre(X) cre(w) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,Y,y) v(j,z,i,j) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,y,z) v(y,w,i,Y) cre(X) cre(z) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,z) cre(X) cre(x) des(Y) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,z,i,w) cre(X) cre(w) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(y,w,i,Y) cre(X) cre(z) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,y,z) v(i,w,Y,y) cre(X) cre(x) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) t1(i,x,y,z) v(i,w,y,z) cre(X) cre(x) des(Y) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,y) cre(X) cre(x) des(Y) des(z) 
 (   0.50000) t1(i,x,y,z) v(y,z,i,w) cre(X) cre(w) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(y,w,i,Y) cre(X) cre(z) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,x,y,z) v(j,y,i,j) cre(X) cre(z) des(Y) des(x) 
 (  -0.50000) h(i,x) t1(i,y,z,w) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (  -0.50000) h(i,x) t1(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -1.00000) h(i,x) t1(i,y,z,w) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (  -1.00000) h(i,x) t1(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -1.00000) h(i,x) t1(i,y,z,w) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (  -1.00000) h(i,x) t1(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (  -0.50000) h(i,x) t1(i,y,z,w) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (  -0.50000) h(i,x) t1(i,y,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.25000) t1(i,Y,x,y) v(i,z,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   0.50000) t1(i,Y,x,y) v(i,z,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   1.00000) t1(i,Y,x,y) v(i,z,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   0.50000) t1(i,Y,x,y) v(i,z,w,u) cre(X) cre(w) cre(u) des(x) des(y) des(z) 
 (   0.50000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (   1.00000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -0.50000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   0.25000) t1(i,x,y,z) v(w,u,i,Y) cre(X) cre(y) cre(z) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.50000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   0.50000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (   1.00000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   0.50000) t1(i,x,y,z) v(w,u,i,Y) cre(X) cre(y) cre(z) des(x) des(w) des(u) 
 (  -1.00000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (   0.50000) t1(i,x,Y,y) v(z,w,i,u) cre(X) cre(y) cre(u) des(x) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(w,u,i,Y) cre(X) cre(y) cre(z) des(x) des(w) des(u) 
 (  -1.00000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -1.00000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,w,Y,u) cre(X) cre(x) cre(u) des(y) des(z) des(w) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(i,w,y,u) cre(X) cre(x) cre(u) des(Y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,w) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   1.00000) t1(i,x,y,z) v(y,w,i,u) cre(X) cre(z) cre(u) des(Y) des(x) des(w) 
 (   0.50000) t1(i,x,y,z) v(w,u,i,Y) cre(X) cre(y) cre(z) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.50000) t1(i,x,y,z) v(j,w,i,j) cre(X) cre(y) cre(z) des(Y) des(x) des(w) 
 (  -0.25000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.25000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -1.00000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -1.00000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -1.00000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -0.50000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.25000) t1(i,x,y,z) v(i,w,u,v) cre(X) cre(x) cre(u) cre(v) des(Y) des(y) des(z) des(w) 
 (  -0.50000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 
 (  -0.25000) t1(i,x,y,z) v(w,u,i,v) cre(X) cre(y) cre(z) cre(v) des(Y) des(x) des(w) des(u) 

Total terms : 169
SQA automation time :  12.122 seconds
>>> Slice t2_caaa: 169 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 169 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 1312 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

1142 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   0.50000) h(i,Y) t1(i,x,y,z) rdm(X,x,y,z) 
 (  -1.00000) h(i,x) t1(i,Y,x,y) rdm(X,y) 
 (   0.50000) h(i,x) t1(i,Y,y,x) rdm(X,y) 
 (   0.50000) h(i,x) t1(i,Y,y,z) rdm(X,x,z,y) 
 (   0.50000) h(i,x) t1(i,y,Y,x) rdm(X,y) 
 (   0.50000) h(i,x) t1(i,y,Y,z) rdm(X,z,x,y) 
 (  -1.00000) h(i,x) t1(i,y,x,Y) rdm(X,y) 
 (  -1.00000) h(i,x) t1(i,y,x,z) rdm(X,y,Y,z) 
 (  -1.00000) h(i,x) t1(i,y,x,z) rdm(X,z,Y,y) 
 (   0.50000) h(i,x) t1(i,y,z,Y) rdm(X,z,y,x) 
 (   0.50000) h(i,x) t1(i,y,z,w) rdm(X,x,y,Y,z,w) 
 (   0.50000) h(i,x) t1(i,y,z,w) rdm(X,z,w,Y,x,y) 
 (   0.50000) h(i,x) t1(i,y,z,x) rdm(X,y,Y,z) 
 (   0.50000) h(i,x) t1(i,y,z,x) rdm(X,z,Y,y) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) rdm(X,y) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,z) rdm(X,z,y,x) 
 (  -1.00000) t1(i,Y,x,y) v(i,x,z,w) rdm(X,w,y,z) 
 (  -1.00000) t1(i,Y,x,y) v(i,x,z,y) rdm(X,z) 
 (   0.50000) t1(i,Y,x,y) v(i,y,z,w) rdm(X,w,x,z) 
 (   0.50000) t1(i,Y,x,y) v(i,y,z,x) rdm(X,z) 
 (  -0.16667) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,w,x,y) 
 (  -0.16667) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,w,y,x) 
 (  -0.16667) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,x,w,y) 
 (  -0.16667) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,x,y,w) 
 (  -0.16667) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,y,w,x) 
 (   0.33333) t1(i,Y,x,y) v(i,z,w,u) rdm(X,z,u,y,x,w) 
 (   0.50000) t1(i,Y,x,y) v(i,z,w,x) rdm(X,z,y,w) 
 (   0.50000) t1(i,Y,x,y) v(i,z,w,y) rdm(X,z,w,x) 
 (  -2.00000) t1(i,Y,x,y) v(j,j,i,x) rdm(X,y) 
 (   1.00000) t1(i,Y,x,y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,Y,x,y) v(j,j,i,z) rdm(X,z,y,x) 
 (  -0.50000) t1(i,x,Y,y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,x,Y,y) v(i,j,j,z) rdm(X,y,z,x) 
 (   0.50000) t1(i,x,Y,y) v(i,y,z,w) rdm(X,z,x,w) 
 (  -0.16667) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,u,x,z) 
 (  -0.16667) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,u,z,x) 
 (  -0.16667) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,x,u,z) 
 (  -0.16667) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,x,z,u) 
 (  -0.16667) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,z,u,x) 
 (   0.33333) t1(i,x,Y,y) v(i,z,w,u) rdm(X,y,w,z,x,u) 
 (   0.50000) t1(i,x,Y,y) v(i,z,w,y) rdm(X,w,z,x) 
 (   1.00000) t1(i,x,Y,y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,x,Y,y) v(j,j,i,z) rdm(X,y,z,x) 
 (   1.00000) t1(i,x,y,Y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,x,y,Y) v(i,j,j,z) rdm(X,y,x,z) 
 (  -1.00000) t1(i,x,y,Y) v(i,y,z,w) rdm(X,z,x,w) 
 (   0.50000) t1(i,x,y,Y) v(i,z,w,u) rdm(X,y,w,x,z,u) 
 (   0.50000) t1(i,x,y,Y) v(i,z,w,y) rdm(X,w,x,z) 
 (  -2.00000) t1(i,x,y,Y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,x,y,Y) v(j,j,i,z) rdm(X,y,x,z) 
 (   0.50000) t1(i,x,y,z) v(i,Y,w,u) rdm(X,x,u,y,z,w) 
 (   0.50000) t1(i,x,y,z) v(i,Y,w,y) rdm(X,x,w,z) 
 (   0.50000) t1(i,x,y,z) v(i,Y,w,z) rdm(X,x,y,w) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,Y) rdm(X,x,y,z) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,Y,y,z) 
 (  -0.33333) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,Y,z,y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,y,Y,z) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,y,z,Y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,z,Y,y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,z,y,Y) 
 (  -0.33333) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,Y,w,x) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,Y,x,w) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,w,Y,x) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,w,x,Y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,x,Y,w) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,x,w,Y) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,y) rdm(X,x,Y,z) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,y) rdm(X,z,Y,x) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,z) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,z) rdm(X,y,Y,x) 
 (   0.33333) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,u,w,x) 
 (  -0.16667) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,u,x,w) 
 (  -0.16667) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,w,u,x) 
 (  -0.16667) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,w,x,u) 
 (  -0.16667) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,x,u,w) 
 (  -0.16667) t1(i,x,y,z) v(i,w,Y,u) rdm(X,y,z,x,w,u) 
 (   0.50000) t1(i,x,y,z) v(i,w,Y,y) rdm(X,z,w,x) 
 (   0.50000) t1(i,x,y,z) v(i,w,Y,z) rdm(X,y,x,w) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,u,y,z) 
 (   0.33333) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,u,z,y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,y,u,z) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,y,z,u) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,z,u,y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,Y) rdm(X,x,w,z,y,u) 
 (  -0.09167) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,u,y,z) 
 (  -0.09167) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,u,z,y) 
 (  -0.14167) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,y,u,z) 
 (  -0.14167) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,y,z,u) 
 (  -0.14167) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,z,u,y) 
 (   0.35833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,Y,z,y,u) 
 (   0.03333) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,u,Y,y,z) 
 (   0.03333) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,u,Y,z,y) 
 (  -0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,Y,u,z) 
 (  -0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,Y,z,u) 
 (  -0.00833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,u,Y,z) 
 (  -0.00833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,u,z,Y) 
 (  -0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,z,Y,u) 
 (  -0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,y,z,u,Y) 
 (   0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,Y,u,y) 
 (   0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,Y,y,u) 
 (   0.07500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,u,Y,y) 
 (   0.07500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,u,y,Y) 
 (   0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,y,Y,u) 
 (   0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,x,w,v,z,y,u,Y) 
 (  -0.09167) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,v,w,x) 
 (  -0.14167) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,v,x,w) 
 (  -0.09167) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,w,v,x) 
 (   0.35833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,w,x,v) 
 (  -0.04167) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,x,v,w) 
 (  -0.24167) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,Y,x,w,v) 
 (  -0.00833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,v,Y,w,x) 
 (  -0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,v,Y,x,w) 
 (   0.07500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,v,w,Y,x) 
 (   0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,v,x,Y,w) 
 (  -0.00833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,w,Y,v,x) 
 (  -0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,w,Y,x,v) 
 (   0.07500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,w,v,Y,x) 
 (   0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,w,x,Y,v) 
 (  -0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,Y,v,w) 
 (  -0.02500) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,Y,w,v) 
 (   0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,v,Y,w) 
 (   0.03333) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,v,w,Y) 
 (   0.05833) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,w,Y,v) 
 (   0.03333) t1(i,x,y,z) v(i,w,u,v) rdm(X,y,z,u,x,w,v,Y) 
 (   0.50000) t1(i,x,y,z) v(i,w,u,y) rdm(X,x,w,Y,z,u) 
 (   0.50000) t1(i,x,y,z) v(i,w,u,y) rdm(X,z,u,Y,x,w) 
 (   0.33333) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,Y,u,y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,Y,y,u) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,u,Y,y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,u,y,Y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,y,Y,u) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,x,w,y,u,Y) 
 (   0.33333) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,Y,w,x) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,Y,x,w) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,w,Y,x) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,w,x,Y) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,x,Y,w) 
 (  -0.16667) t1(i,x,y,z) v(i,w,u,z) rdm(X,y,u,x,w,Y) 
 (  -1.00000) t1(i,x,y,z) v(i,y,Y,w) rdm(X,z,w,x) 
 (  -1.00000) t1(i,x,y,z) v(i,y,Y,z) rdm(X,x) 
 (  -1.00000) t1(i,x,y,z) v(i,y,w,Y) rdm(X,x,w,z) 
 (  -1.00000) t1(i,x,y,z) v(i,y,w,u) rdm(X,x,u,Y,z,w) 
 (  -1.00000) t1(i,x,y,z) v(i,y,w,u) rdm(X,z,w,Y,x,u) 
 (  -1.00000) t1(i,x,y,z) v(i,y,w,z) rdm(X,w,Y,x) 
 (  -1.00000) t1(i,x,y,z) v(i,y,w,z) rdm(X,x,Y,w) 
 (   0.50000) t1(i,x,y,z) v(i,z,Y,w) rdm(X,y,w,x) 
 (   0.50000) t1(i,x,y,z) v(i,z,Y,y) rdm(X,x) 
 (   0.50000) t1(i,x,y,z) v(i,z,w,Y) rdm(X,x,w,y) 
 (   0.50000) t1(i,x,y,z) v(i,z,w,u) rdm(X,x,u,Y,y,w) 
 (   0.50000) t1(i,x,y,z) v(i,z,w,u) rdm(X,y,w,Y,x,u) 
 (   0.50000) t1(i,x,y,z) v(i,z,w,y) rdm(X,w,Y,x) 
 (   0.50000) t1(i,x,y,z) v(i,z,w,y) rdm(X,x,Y,w) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,Y) rdm(X,x,y,z) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,Y,y,z) 
 (   0.66667) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,Y,z,y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,y,Y,z) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,y,z,Y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,z,Y,y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,z,y,Y) 
 (   0.66667) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,Y,w,x) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,Y,x,w) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,w,Y,x) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,w,x,Y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,x,Y,w) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,x,w,Y) 
 (  -2.00000) t1(i,x,y,z) v(j,j,i,y) rdm(X,x,Y,z) 
 (  -2.00000) t1(i,x,y,z) v(j,j,i,y) rdm(X,z,Y,x) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,z) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,z) rdm(X,y,Y,x) 

Total spin-integrated terms: 169
Total spin-adapted terms: 170
Spin-adaptation automation time :  1232.161 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_caaa: 170 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_caea...
 (   1.00000) t1(cc183a,aa180a,ee177a,aa181a) cre(ee177a) cre(aa181a) des(aa180a) des(cc183a) 
 (   1.00000) t1(cc183b,aa180b,ee177b,aa181b) cre(ee177b) cre(aa181b) des(aa180b) des(cc183b) 
 (   1.00000) t1(cc184a,aa182b,ee178a,aa183b) cre(ee178a) cre(aa183b) des(aa182b) des(cc184a) 
 (   1.00000) t1(cc185a,aa184b,ee178b,aa182a) cre(ee178b) cre(aa182a) des(aa184b) des(cc185a) 
 (   1.00000) t1(cc184b,aa183a,ee179b,aa184a) cre(ee179b) cre(aa184a) des(aa183a) des(cc184b) 
 (   1.00000) t1(cc185b,aa185a,ee179a,aa185b) cre(ee179a) cre(aa185b) des(aa185a) des(cc185b) 
 (  -1.00000) t1(cc183a,aa180a,ee177a,aa181a) cre(cc183a) cre(aa180a) des(aa181a) des(ee177a) 
 (  -1.00000) t1(cc183b,aa180b,ee177b,aa181b) cre(cc183b) cre(aa180b) des(aa181b) des(ee177b) 
 (  -1.00000) t1(cc184a,aa182b,ee178a,aa183b) cre(cc184a) cre(aa182b) des(aa183b) des(ee178a) 
 (  -1.00000) t1(cc185a,aa184b,ee178b,aa182a) cre(cc185a) cre(aa184b) des(aa182a) des(ee178b) 
 (  -1.00000) t1(cc184b,aa183a,ee179b,aa184a) cre(cc184b) cre(aa183a) des(aa184a) des(ee179b) 
 (  -1.00000) t1(cc185b,aa185a,ee179a,aa185b) cre(cc185b) cre(aa185a) des(aa185b) des(ee179a) 
>>> Slice t2_caea: 12 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_caea: 2936 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_caea: 2936 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) h(i,a) t1(i,Y,a,x) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,Y,a,x) cre(X) des(x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,y,x,a) cre(X) des(y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,Y) v(j,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,x,a,y) v(y,a,i,Y) cre(X) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) h(i,a) t1(i,x,a,y) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,Y,a,x) v(i,y,z,a) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (  -1.00000) t1(i,x,a,Y) v(y,a,i,z) cre(X) cre(z) des(x) des(y) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(i,z,Y,a) cre(X) cre(x) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(i,z,y,a) cre(X) cre(x) des(Y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,j,j,a) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,x,a,y) v(y,a,i,z) cre(X) cre(z) des(Y) des(x) 
 (   1.00000) t1(i,x,a,y) v(z,a,i,Y) cre(X) cre(y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(j,a,i,j) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(i,z,w,a) cre(X) cre(x) cre(w) des(Y) des(y) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 
 (  -1.00000) t1(i,x,a,y) v(z,a,i,w) cre(X) cre(y) cre(w) des(Y) des(x) des(z) 

Total terms : 94
SQA automation time :  8.970 seconds
>>> Slice t2_caea: 94 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 94 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 410 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

336 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) h(i,a) t1(i,Y,a,x) rdm(X,x) 
 (   0.50000) h(i,a) t1(i,Y,x,a) rdm(X,x) 
 (   0.50000) h(i,a) t1(i,x,Y,a) rdm(X,x) 
 (  -1.00000) h(i,a) t1(i,x,a,Y) rdm(X,x) 
 (  -1.00000) h(i,a) t1(i,x,a,y) rdm(X,x,Y,y) 
 (  -1.00000) h(i,a) t1(i,x,a,y) rdm(X,y,Y,x) 
 (   0.50000) h(i,a) t1(i,x,y,a) rdm(X,x,Y,y) 
 (   0.50000) h(i,a) t1(i,x,y,a) rdm(X,y,Y,x) 
 (  -1.00000) t1(i,Y,a,x) v(i,a,y,x) rdm(X,y) 
 (  -1.00000) t1(i,Y,a,x) v(i,a,y,z) rdm(X,z,x,y) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,Y,a,x) v(i,x,y,a) rdm(X,y) 
 (   0.50000) t1(i,Y,a,x) v(i,y,z,a) rdm(X,y,x,z) 
 (  -2.00000) t1(i,Y,a,x) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,Y,x,a) v(i,a,y,x) rdm(X,y) 
 (   0.50000) t1(i,Y,x,a) v(i,a,y,z) rdm(X,z,x,y) 
 (  -0.50000) t1(i,Y,x,a) v(i,j,j,a) rdm(X,x) 
 (  -1.00000) t1(i,Y,x,a) v(i,x,y,a) rdm(X,y) 
 (   0.50000) t1(i,Y,x,a) v(i,y,z,a) rdm(X,y,z,x) 
 (   1.00000) t1(i,Y,x,a) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,x,Y,a) v(i,a,y,z) rdm(X,y,x,z) 
 (  -0.50000) t1(i,x,Y,a) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,x,Y,a) v(i,y,z,a) rdm(X,z,y,x) 
 (   1.00000) t1(i,x,Y,a) v(j,j,i,a) rdm(X,x) 
 (  -1.00000) t1(i,x,a,Y) v(i,a,y,z) rdm(X,y,x,z) 
 (   1.00000) t1(i,x,a,Y) v(i,j,j,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,Y) v(i,y,z,a) rdm(X,z,x,y) 
 (  -2.00000) t1(i,x,a,Y) v(j,j,i,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,y) v(i,Y,z,a) rdm(X,x,z,y) 
 (  -1.00000) t1(i,x,a,y) v(i,a,Y,y) rdm(X,x) 
 (  -1.00000) t1(i,x,a,y) v(i,a,Y,z) rdm(X,y,z,x) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,Y) rdm(X,x,z,y) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,w) rdm(X,x,w,Y,y,z) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,w) rdm(X,y,z,Y,x,w) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,y) rdm(X,x,Y,z) 
 (  -1.00000) t1(i,x,a,y) v(i,a,z,y) rdm(X,z,Y,x) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,y,Y,x) 
 (   0.50000) t1(i,x,a,y) v(i,y,Y,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,y) v(i,y,z,a) rdm(X,x,Y,z) 
 (   0.50000) t1(i,x,a,y) v(i,y,z,a) rdm(X,z,Y,x) 
 (   0.50000) t1(i,x,a,y) v(i,z,Y,a) rdm(X,y,z,x) 
 (   0.50000) t1(i,x,a,y) v(i,z,w,a) rdm(X,x,z,Y,y,w) 
 (   0.50000) t1(i,x,a,y) v(i,z,w,a) rdm(X,y,w,Y,x,z) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,x,Y,y) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,y,Y,x) 
 (   0.50000) t1(i,x,y,a) v(i,Y,z,a) rdm(X,x,y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,Y,y) rdm(X,x) 
 (   0.50000) t1(i,x,y,a) v(i,a,Y,z) rdm(X,y,z,x) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,Y) rdm(X,x,z,y) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,w) rdm(X,x,w,Y,y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,w) rdm(X,y,z,Y,x,w) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,y) rdm(X,x,Y,z) 
 (   0.50000) t1(i,x,y,a) v(i,a,z,y) rdm(X,z,Y,x) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,y,Y,x) 
 (  -1.00000) t1(i,x,y,a) v(i,y,Y,a) rdm(X,x) 
 (  -1.00000) t1(i,x,y,a) v(i,y,z,a) rdm(X,x,Y,z) 
 (  -1.00000) t1(i,x,y,a) v(i,y,z,a) rdm(X,z,Y,x) 
 (   0.50000) t1(i,x,y,a) v(i,z,Y,a) rdm(X,y,x,z) 
 (   0.33333) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,Y,w,y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,Y,y,w) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,w,Y,y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,w,y,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,y,Y,w) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,x,z,y,w,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,Y,x,z) 
 (   0.33333) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,Y,z,x) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,x,Y,z) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,x,z,Y) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,z,Y,x) 
 (  -0.16667) t1(i,x,y,a) v(i,z,w,a) rdm(X,y,w,z,x,Y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,y,Y,x) 

Total spin-integrated terms: 94
Total spin-adapted terms: 74
Spin-adaptation automation time :  36.912 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_caea: 74 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_caee...
 (   0.50000) t1(cc196a,aa202a,ee188a,ee189a) cre(ee188a) cre(ee189a) des(aa202a) des(cc196a) 
 (   0.50000) t1(cc196b,aa202b,ee188b,ee189b) cre(ee188b) cre(ee189b) des(aa202b) des(cc196b) 
 (   1.00000) t1(cc197a,aa203b,ee190a,ee190b) cre(ee190a) cre(ee190b) des(aa203b) des(cc197a) 
 (   1.00000) t1(cc197b,aa203a,ee191b,ee191a) cre(ee191b) cre(ee191a) des(aa203a) des(cc197b) 
 (  -0.50000) t1(cc196a,aa202a,ee188a,ee189a) cre(cc196a) cre(aa202a) des(ee189a) des(ee188a) 
 (  -0.50000) t1(cc196b,aa202b,ee188b,ee189b) cre(cc196b) cre(aa202b) des(ee189b) des(ee188b) 
 (  -1.00000) t1(cc197a,aa203b,ee190a,ee190b) cre(cc197a) cre(aa203b) des(ee190b) des(ee190a) 
 (  -1.00000) t1(cc197b,aa203a,ee191b,ee191a) cre(cc197b) cre(aa203a) des(ee191a) des(ee191b) 
>>> Slice t2_caee: 8 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_caee: 1752 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_caee: 1752 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -0.50000) t1(i,Y,a,b) v(i,x,a,b) cre(X) des(x) 
 (  -1.00000) t1(i,Y,a,b) v(i,x,a,b) cre(X) des(x) 
 (  -0.50000) t1(i,x,a,b) v(a,b,i,Y) cre(X) des(x) 
 (  -1.00000) t1(i,x,a,b) v(a,b,i,Y) cre(X) des(x) 
 (   0.50000) t1(i,x,a,b) v(i,y,a,b) cre(X) cre(x) des(Y) des(y) 
 (   0.50000) t1(i,x,a,b) v(a,b,i,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,b) v(i,y,a,b) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,x,a,b) v(a,b,i,y) cre(X) cre(y) des(Y) des(x) 
 (   1.00000) t1(i,x,a,b) v(i,y,a,b) cre(X) cre(x) des(Y) des(y) 
 (   1.00000) t1(i,x,a,b) v(a,b,i,y) cre(X) cre(y) des(Y) des(x) 
 (   0.50000) t1(i,x,a,b) v(i,y,a,b) cre(X) cre(x) des(Y) des(y) 
 (   0.50000) t1(i,x,a,b) v(a,b,i,y) cre(X) cre(y) des(Y) des(x) 

Total terms : 12
SQA automation time :  2.508 seconds
>>> Slice t2_caee: 12 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 12 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 50 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

42 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) t1(i,Y,a,b) v(i,a,x,b) rdm(X,x) 
 (   0.50000) t1(i,Y,a,b) v(i,b,x,a) rdm(X,x) 
 (  -1.00000) t1(i,x,a,b) v(i,a,Y,b) rdm(X,x) 
 (  -1.00000) t1(i,x,a,b) v(i,a,y,b) rdm(X,x,Y,y) 
 (  -1.00000) t1(i,x,a,b) v(i,a,y,b) rdm(X,y,Y,x) 
 (   0.50000) t1(i,x,a,b) v(i,b,Y,a) rdm(X,x) 
 (   0.50000) t1(i,x,a,b) v(i,b,y,a) rdm(X,x,Y,y) 
 (   0.50000) t1(i,x,a,b) v(i,b,y,a) rdm(X,y,Y,x) 

Total spin-integrated terms: 12
Total spin-adapted terms: 8
Spin-adaptation automation time :  0.923 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_caee: 8 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_ccaa...
 (   0.25000) t1(cc198a,cc199a,aa204a,aa205a) cre(aa204a) cre(aa205a) des(cc199a) des(cc198a) 
 (   0.25000) t1(cc198b,cc199b,aa204b,aa205b) cre(aa204b) cre(aa205b) des(cc199b) des(cc198b) 
 (   1.00000) t1(cc200a,cc200b,aa206a,aa206b) cre(aa206a) cre(aa206b) des(cc200b) des(cc200a) 
 (  -0.25000) t1(cc198a,cc199a,aa204a,aa205a) cre(cc198a) cre(cc199a) des(aa205a) des(aa204a) 
 (  -0.25000) t1(cc198b,cc199b,aa204b,aa205b) cre(cc198b) cre(cc199b) des(aa205b) des(aa204b) 
 (  -1.00000) t1(cc200a,cc200b,aa206a,aa206b) cre(cc200a) cre(cc200b) des(aa206b) des(aa206a) 
>>> Slice t2_ccaa: 6 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_ccaa: 1006 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_ccaa: 1006 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -0.50000) t1(i,j,Y,x) v(x,y,i,j) cre(X) des(y) 
 (  -0.50000) t1(i,j,x,y) v(i,j,Y,x) cre(X) des(y) 
 (  -0.25000) t1(i,j,x,y) v(i,j,x,y) cre(X) des(Y) 
 (  -0.25000) t1(i,j,x,y) v(x,y,i,j) cre(X) des(Y) 
 (  -1.00000) t1(i,j,Y,x) v(x,y,i,j) cre(X) des(y) 
 (  -1.00000) t1(i,j,x,y) v(i,j,x,y) cre(X) des(Y) 
 (  -1.00000) t1(i,j,x,y) v(x,y,i,j) cre(X) des(Y) 
 (  -1.00000) t1(i,j,x,y) v(i,j,Y,x) cre(X) des(y) 
 (  -0.25000) t1(i,j,x,y) v(i,j,x,y) cre(X) des(Y) 
 (  -0.25000) t1(i,j,x,y) v(x,y,i,j) cre(X) des(Y) 
 (   0.25000) t1(i,j,Y,x) v(y,z,i,j) cre(X) cre(x) des(y) des(z) 
 (   0.25000) t1(i,j,x,y) v(i,j,Y,z) cre(X) cre(z) des(x) des(y) 
 (  -0.50000) t1(i,j,x,y) v(i,j,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -0.50000) t1(i,j,x,y) v(x,z,i,j) cre(X) cre(y) des(Y) des(z) 
 (  -1.00000) t1(i,j,x,y) v(i,j,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) t1(i,j,x,y) v(x,z,i,j) cre(X) cre(y) des(Y) des(z) 
 (  -1.00000) t1(i,j,x,y) v(i,j,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -1.00000) t1(i,j,x,y) v(x,z,i,j) cre(X) cre(y) des(Y) des(z) 
 (   1.00000) t1(i,j,Y,x) v(y,z,i,j) cre(X) cre(x) des(y) des(z) 
 (   1.00000) t1(i,j,x,y) v(i,j,Y,z) cre(X) cre(z) des(x) des(y) 
 (  -0.50000) t1(i,j,x,y) v(i,j,x,z) cre(X) cre(z) des(Y) des(y) 
 (  -0.50000) t1(i,j,x,y) v(x,z,i,j) cre(X) cre(y) des(Y) des(z) 
 (   0.12500) t1(i,j,x,y) v(i,j,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.12500) t1(i,j,x,y) v(z,w,i,j) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   1.00000) t1(i,j,x,y) v(i,j,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   1.00000) t1(i,j,x,y) v(z,w,i,j) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 
 (   0.12500) t1(i,j,x,y) v(i,j,z,w) cre(X) cre(z) cre(w) des(Y) des(x) des(y) 
 (   0.12500) t1(i,j,x,y) v(z,w,i,j) cre(X) cre(x) cre(y) des(Y) des(z) des(w) 

Total terms : 28
SQA automation time :  10.349 seconds
>>> Slice t2_ccaa: 28 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 28 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 152 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

135 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) t1(i,j,Y,x) v(i,x,j,y) rdm(X,y) 
 (  -0.50000) t1(i,j,Y,x) v(i,y,j,z) rdm(X,x,y,z) 
 (   1.00000) t1(i,j,Y,x) v(j,x,i,y) rdm(X,y) 
 (  -0.50000) t1(i,j,x,y) v(i,Y,j,x) rdm(X,y) 
 (  -0.50000) t1(i,j,x,y) v(i,Y,j,z) rdm(X,z,x,y) 
 (  -2.00000) t1(i,j,x,y) v(i,x,j,y) rdm(X,Y) 
 (   1.00000) t1(i,j,x,y) v(i,x,j,z) rdm(X,y,Y,z) 
 (   1.00000) t1(i,j,x,y) v(i,x,j,z) rdm(X,z,Y,y) 
 (  -0.50000) t1(i,j,x,y) v(i,y,j,z) rdm(X,x,Y,z) 
 (  -0.50000) t1(i,j,x,y) v(i,y,j,z) rdm(X,z,Y,x) 
 (   0.08333) t1(i,j,x,y) v(i,z,j,w) rdm(X,x,y,Y,w,z) 
 (  -0.16667) t1(i,j,x,y) v(i,z,j,w) rdm(X,x,y,Y,z,w) 
 (   0.16667) t1(i,j,x,y) v(i,z,j,w) rdm(X,x,y,w,z,Y) 
 (   0.16667) t1(i,j,x,y) v(i,z,j,w) rdm(X,x,y,z,w,Y) 
 (  -0.25000) t1(i,j,x,y) v(i,z,j,w) rdm(X,z,w,Y,x,y) 
 (   1.00000) t1(i,j,x,y) v(j,Y,i,x) rdm(X,y) 
 (   1.00000) t1(i,j,x,y) v(j,x,i,y) rdm(X,Y) 

Total spin-integrated terms: 28
Total spin-adapted terms: 17
Spin-adaptation automation time :  15.904 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_ccaa: 17 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_ccea...
 (   0.50000) t1(cc192a,cc193a,ee186a,aa200a) cre(ee186a) cre(aa200a) des(cc193a) des(cc192a) 
 (   0.50000) t1(cc192b,cc193b,ee186b,aa200b) cre(ee186b) cre(aa200b) des(cc193b) des(cc192b) 
 (   1.00000) t1(cc194a,cc194b,ee187a,aa201b) cre(ee187a) cre(aa201b) des(cc194b) des(cc194a) 
 (   1.00000) t1(cc195b,cc195a,ee187b,aa201a) cre(ee187b) cre(aa201a) des(cc195a) des(cc195b) 
 (  -0.50000) t1(cc192a,cc193a,ee186a,aa200a) cre(cc192a) cre(cc193a) des(aa200a) des(ee186a) 
 (  -0.50000) t1(cc192b,cc193b,ee186b,aa200b) cre(cc192b) cre(cc193b) des(aa200b) des(ee186b) 
 (  -1.00000) t1(cc194a,cc194b,ee187a,aa201b) cre(cc194a) cre(cc194b) des(aa201b) des(ee187a) 
 (  -1.00000) t1(cc195b,cc195a,ee187b,aa201a) cre(cc195b) cre(cc195a) des(aa201a) des(ee187b) 
>>> Slice t2_ccea: 8 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_ccea: 1752 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_ccea: 1752 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   0.50000) t1(i,j,Y,a) v(x,a,i,j) cre(X) des(x) 
 (   0.50000) t1(i,j,x,a) v(i,j,Y,a) cre(X) des(x) 
 (  -0.50000) t1(i,j,x,a) v(i,j,x,a) cre(X) des(Y) 
 (  -0.50000) t1(i,j,x,a) v(x,a,i,j) cre(X) des(Y) 
 (  -1.00000) t1(i,j,x,a) v(i,j,x,a) cre(X) des(Y) 
 (  -1.00000) t1(i,j,x,a) v(x,a,i,j) cre(X) des(Y) 
 (   1.00000) t1(i,j,Y,a) v(x,a,i,j) cre(X) des(x) 
 (   1.00000) t1(i,j,x,a) v(i,j,Y,a) cre(X) des(x) 
 (  -1.00000) t1(i,j,x,a) v(i,j,x,a) cre(X) des(Y) 
 (  -1.00000) t1(i,j,x,a) v(x,a,i,j) cre(X) des(Y) 
 (  -0.50000) t1(i,j,x,a) v(i,j,x,a) cre(X) des(Y) 
 (  -0.50000) t1(i,j,x,a) v(x,a,i,j) cre(X) des(Y) 
 (  -0.50000) t1(i,j,x,a) v(i,j,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -0.50000) t1(i,j,x,a) v(y,a,i,j) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,j,x,a) v(i,j,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,j,x,a) v(y,a,i,j) cre(X) cre(x) des(Y) des(y) 
 (  -1.00000) t1(i,j,x,a) v(i,j,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -1.00000) t1(i,j,x,a) v(y,a,i,j) cre(X) cre(x) des(Y) des(y) 
 (  -0.50000) t1(i,j,x,a) v(i,j,y,a) cre(X) cre(y) des(Y) des(x) 
 (  -0.50000) t1(i,j,x,a) v(y,a,i,j) cre(X) cre(x) des(Y) des(y) 

Total terms : 20
SQA automation time :  9.292 seconds
>>> Slice t2_ccea: 20 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 20 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 70 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

60 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) t1(i,j,Y,a) v(i,x,j,a) rdm(X,x) 
 (  -0.50000) t1(i,j,Y,a) v(j,x,i,a) rdm(X,x) 
 (   1.00000) t1(i,j,x,a) v(i,Y,j,a) rdm(X,x) 
 (  -4.00000) t1(i,j,x,a) v(i,x,j,a) rdm(X,Y) 
 (   1.00000) t1(i,j,x,a) v(i,y,j,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,j,x,a) v(i,y,j,a) rdm(X,y,Y,x) 
 (  -0.50000) t1(i,j,x,a) v(j,Y,i,a) rdm(X,x) 
 (   2.00000) t1(i,j,x,a) v(j,x,i,a) rdm(X,Y) 
 (  -0.50000) t1(i,j,x,a) v(j,y,i,a) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,j,x,a) v(j,y,i,a) rdm(X,y,Y,x) 

Total spin-integrated terms: 20
Total spin-adapted terms: 10
Spin-adaptation automation time :  1.117 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_ccea: 10 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------



# Selecting t2_ccee...
 (   0.25000) t1(cc189a,cc190a,ee183a,ee184a) cre(ee183a) cre(ee184a) des(cc190a) des(cc189a) 
 (   0.25000) t1(cc189b,cc190b,ee183b,ee184b) cre(ee183b) cre(ee184b) des(cc190b) des(cc189b) 
 (   1.00000) t1(cc191a,cc191b,ee185a,ee185b) cre(ee185a) cre(ee185b) des(cc191b) des(cc191a) 
 (  -0.25000) t1(cc189a,cc190a,ee183a,ee184a) cre(cc189a) cre(cc190a) des(ee184a) des(ee183a) 
 (  -0.25000) t1(cc189b,cc190b,ee183b,ee184b) cre(cc189b) cre(cc190b) des(ee184b) des(ee183b) 
 (  -1.00000) t1(cc191a,cc191b,ee185a,ee185b) cre(cc191a) cre(cc191b) des(ee185b) des(ee185a) 
>>> Slice t2_ccee: 6 spin-integrated A terms selected.

## Calculating [V, T - T^\dag]:
>>> Slice t2_ccee: 1044 spin-integrated terms created.

## Calculating a^\dag_p a_q [V, T - T^\dag]:
>>> Slice t2_ccee: 1044 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -0.25000) t1(i,j,a,b) v(i,j,a,b) cre(X) des(Y) 
 (  -0.25000) t1(i,j,a,b) v(a,b,i,j) cre(X) des(Y) 
 (  -1.00000) t1(i,j,a,b) v(i,j,a,b) cre(X) des(Y) 
 (  -1.00000) t1(i,j,a,b) v(a,b,i,j) cre(X) des(Y) 
 (  -0.25000) t1(i,j,a,b) v(i,j,a,b) cre(X) des(Y) 
 (  -0.25000) t1(i,j,a,b) v(a,b,i,j) cre(X) des(Y) 

Total terms : 6
SQA automation time :  1.787 seconds
>>> Slice t2_ccee: 6 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Removing 5th order RDMs...
Done! 0 5th-order RDMs have been removed.

Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 6 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 18 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

16 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -2.00000) t1(i,j,a,b) v(i,a,j,b) rdm(X,Y) 
 (   1.00000) t1(i,j,a,b) v(j,a,i,b) rdm(X,Y) 

Total spin-integrated terms: 6
Total spin-adapted terms: 2
Spin-adaptation automation time :  0.153 seconds
----------------------------------------------------------------------------------------------------
>>> Slice t2_ccee: 2 spin-adapted a^\dag_p a_q [V + H1, A1] terms created.

----------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

96 terms removed:
 (  -1.00000) t1(Y,a) v(i,i,x,a) rdm(X,x) 
 (   0.50000) t1(Y,a) v(i,x,a,i) rdm(X,x) 
 (  -1.00000) t1(Y,x,y,a) v(i,i,z,a) rdm(X,x,y,z) 
 (   0.50000) t1(Y,x,y,a) v(i,z,a,i) rdm(X,x,y,z) 
 (  -0.50000) t1(i,Y) v(i,j,j,x) rdm(X,x) 
 (   1.00000) t1(i,Y) v(j,j,i,x) rdm(X,x) 
 (   1.00000) t1(i,Y,a,x) v(i,j,j,a) rdm(X,x) 
 (  -2.00000) t1(i,Y,a,x) v(j,j,i,a) rdm(X,x) 
 (  -0.50000) t1(i,Y,x,a) v(i,j,j,a) rdm(X,x) 
 (   1.00000) t1(i,Y,x,a) v(j,j,i,a) rdm(X,x) 
 (   1.00000) t1(i,Y,x,y) v(i,j,j,x) rdm(X,y) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,Y,x,y) v(i,j,j,z) rdm(X,z,y,x) 
 (  -2.00000) t1(i,Y,x,y) v(j,j,i,x) rdm(X,y) 
 (   1.00000) t1(i,Y,x,y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,Y,x,y) v(j,j,i,z) rdm(X,z,y,x) 
 (   2.00000) t1(i,a) v(i,j,j,a) rdm(X,Y) 
 (  -4.00000) t1(i,a) v(j,j,i,a) rdm(X,Y) 
 (  -0.50000) t1(i,x) v(i,j,j,Y) rdm(X,x) 
 (   2.00000) t1(i,x) v(i,j,j,x) rdm(X,Y) 
 (  -0.50000) t1(i,x) v(i,j,j,y) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x) v(i,j,j,y) rdm(X,y,Y,x) 
 (   1.00000) t1(i,x) v(j,j,i,Y) rdm(X,x) 
 (  -4.00000) t1(i,x) v(j,j,i,x) rdm(X,Y) 
 (   1.00000) t1(i,x) v(j,j,i,y) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x) v(j,j,i,y) rdm(X,y,Y,x) 
 (  -0.50000) t1(i,x,Y,a) v(i,j,j,a) rdm(X,x) 
 (   1.00000) t1(i,x,Y,a) v(j,j,i,a) rdm(X,x) 
 (  -0.50000) t1(i,x,Y,y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,x,Y,y) v(i,j,j,z) rdm(X,y,z,x) 
 (   1.00000) t1(i,x,Y,y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,x,Y,y) v(j,j,i,z) rdm(X,y,z,x) 
 (   1.00000) t1(i,x,a,Y) v(i,j,j,a) rdm(X,x) 
 (  -2.00000) t1(i,x,a,Y) v(j,j,i,a) rdm(X,x) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,a,y) v(i,j,j,a) rdm(X,y,Y,x) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,x,Y,y) 
 (  -2.00000) t1(i,x,a,y) v(j,j,i,a) rdm(X,y,Y,x) 
 (   1.00000) t1(i,x,y,Y) v(i,j,j,y) rdm(X,x) 
 (  -0.50000) t1(i,x,y,Y) v(i,j,j,z) rdm(X,y,x,z) 
 (  -2.00000) t1(i,x,y,Y) v(j,j,i,y) rdm(X,x) 
 (   1.00000) t1(i,x,y,Y) v(j,j,i,z) rdm(X,y,x,z) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,a) v(i,j,j,a) rdm(X,y,Y,x) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,a) v(j,j,i,a) rdm(X,y,Y,x) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,Y) rdm(X,x,y,z) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,Y,y,z) 
 (  -0.33333) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,Y,z,y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,y,Y,z) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,y,z,Y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,z,Y,y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,x,w,z,y,Y) 
 (  -0.33333) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,Y,w,x) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,Y,x,w) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,w,Y,x) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,w,x,Y) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,x,Y,w) 
 (   0.16667) t1(i,x,y,z) v(i,j,j,w) rdm(X,y,z,x,w,Y) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,y) rdm(X,x,Y,z) 
 (   1.00000) t1(i,x,y,z) v(i,j,j,y) rdm(X,z,Y,x) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,z) rdm(X,x,Y,y) 
 (  -0.50000) t1(i,x,y,z) v(i,j,j,z) rdm(X,y,Y,x) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,Y) rdm(X,x,y,z) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,Y,y,z) 
 (   0.66667) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,Y,z,y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,y,Y,z) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,y,z,Y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,z,Y,y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,x,w,z,y,Y) 
 (   0.66667) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,Y,w,x) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,Y,x,w) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,w,Y,x) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,w,x,Y) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,x,Y,w) 
 (  -0.33333) t1(i,x,y,z) v(j,j,i,w) rdm(X,y,z,x,w,Y) 
 (  -2.00000) t1(i,x,y,z) v(j,j,i,y) rdm(X,x,Y,z) 
 (  -2.00000) t1(i,x,y,z) v(j,j,i,y) rdm(X,z,Y,x) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,z) rdm(X,x,Y,y) 
 (   1.00000) t1(i,x,y,z) v(j,j,i,z) rdm(X,y,Y,x) 
 (  -1.00000) t1(x,Y,y,a) v(i,i,z,a) rdm(X,x,z,y) 
 (   0.50000) t1(x,Y,y,a) v(i,z,a,i) rdm(X,x,z,y) 
 (   0.50000) t1(x,a) v(i,Y,a,i) rdm(X,x) 
 (  -1.00000) t1(x,a) v(i,i,Y,a) rdm(X,x) 
 (  -1.00000) t1(x,a) v(i,i,y,a) rdm(X,x,Y,y) 
 (  -1.00000) t1(x,a) v(i,i,y,a) rdm(X,y,Y,x) 
 (   0.50000) t1(x,a) v(i,y,a,i) rdm(X,x,Y,y) 
 (   0.50000) t1(x,a) v(i,y,a,i) rdm(X,y,Y,x) 
 (  -1.00000) t1(x,y,Y,a) v(i,i,z,a) rdm(X,z,x,y) 
 (   0.50000) t1(x,y,Y,a) v(i,z,a,i) rdm(X,z,x,y) 
 (   0.50000) t1(x,y,z,a) v(i,Y,a,i) rdm(X,z,y,x) 
 (  -1.00000) t1(x,y,z,a) v(i,i,Y,a) rdm(X,z,y,x) 
 (  -1.00000) t1(x,y,z,a) v(i,i,w,a) rdm(X,y,x,Y,w,z) 
 (  -1.00000) t1(x,y,z,a) v(i,i,w,a) rdm(X,z,w,Y,x,y) 
 (   0.50000) t1(x,y,z,a) v(i,w,a,i) rdm(X,y,x,Y,w,z) 
 (   0.50000) t1(x,y,z,a) v(i,w,a,i) rdm(X,z,w,Y,x,y) 
----------------------------------------------------------------------------------------------------
Remaining terms: 347


--------------------------------------- genEinsum equations ----------------------------------------

V1 =- 1/2 * einsum('Ya,xa,Xx->XY', h_ae, t1_ae, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('Ya,xyza,Xzyx->XY', h_ae, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iY,ix,Xx->XY', h_ca, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iY,ixyz,Xxyz->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ia,iYax,Xx->XY', h_ce, t1_caea, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,iYxa,Xx->XY', h_ce, t1_caae, rdm_ca, optimize = einsum_type)
V1 -= 2 * einsum('ia,ia,XY->XY', h_ce, t1_ce, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixYa,Xx->XY', h_ce, t1_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,ixaY,Xx->XY', h_ce, t1_caea, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,ixay,XxYy->XY', h_ce, t1_caea, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ia,ixay,XyYx->XY', h_ce, t1_caea, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XxYy->XY', h_ce, t1_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XyYx->XY', h_ce, t1_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iY,Xx->XY', h_ca, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= einsum('ix,iYxy,Xy->XY', h_ca, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iYyx,Xy->XY', h_ca, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iYyz,Xxzy->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 2 * einsum('ix,ix,XY->XY', h_ca, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iy,XxYy->XY', h_ca, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iy,XyYx->XY', h_ca, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyYx,Xy->XY', h_ca, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyYz,Xzxy->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ix,iyxY,Xy->XY', h_ca, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ix,iyxz,XyYz->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ix,iyxz,XzYy->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzY,Xzyx->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzw,XxyYzw->XY', h_ca, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzw,XzwYxy->XY', h_ca, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzx,XyYz->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzx,XzYy->XY', h_ca, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,Ya,Xx->XY', h_ae, t1_ae, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,Yyza,Xyzx->XY', h_ae, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yYza,Xyxz->XY', h_ae, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,ya,XxYy->XY', h_ae, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,ya,XyYx->XY', h_ae, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yzYa,Xxyz->XY', h_ae, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XxwYyz->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('xa,yzwa,XxwYzy->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XxwyYz->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XxwyzY->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XxwzYy->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XxwzyY->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XzyYwx->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('xa,yzwa,XzyYxw->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XzywYx->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XzywxY->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XzyxYw->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xa,yzwa,XzyxwY->XY', h_ae, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('Ya,xyza,Xyzx->XY', t1_ae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('Yxab,yazb,Xxyz->XY', t1_aaee, v_aeae, rdm_ccaa, optimize = einsum_type)
V1 += 1/6 * einsum('Yxya,zwua,Xxwuyz->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('Yxya,zwua,Xxwuzy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('Yxya,zwua,Xxwyuz->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('Yxya,zwua,Xxwyzu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('Yxya,zwua,Xxwzuy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('Yxya,zwua,Xxwzyu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('Yxya,zywa,Xxzw->XY', t1_aaae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iY,ixyz,Xyxz->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYab,iaxb,Xx->XY', t1_caee, v_ceae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYab,ibxa,Xx->XY', t1_caee, v_ceae, rdm_ca, optimize = einsum_type)
V1 -= einsum('iYax,iayx,Xy->XY', t1_caea, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('iYax,iayz,Xzxy->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYax,ixya,Xy->XY', t1_caea, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYax,iyza,Xyxz->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iayx,Xy->XY', t1_caae, v_ceaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iayz,Xzxy->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYxa,ixya,Xy->XY', t1_caae, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYxa,iyza,Xyzx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYxy,ixzw,Xwyz->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('iYxy,ixzy,Xz->XY', t1_caaa, v_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('iYxy,iyzw,Xwxz->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYxy,iyzx,Xz->XY', t1_caaa, v_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/6 * einsum('iYxy,izwu,Xzuwxy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('iYxy,izwu,Xzuwyx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('iYxy,izwu,Xzuxwy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('iYxy,izwu,Xzuxyw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('iYxy,izwu,Xzuywx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('iYxy,izwu,Xzuyxw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYxy,izwx,Xzyw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('iYxy,izwy,Xzwx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,iYxa,Xx->XY', t1_ce, v_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaYx,Xx->XY', t1_ce, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaxY,Xx->XY', t1_ce, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ia,iaxy,XxYy->XY', t1_ce, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ia,iaxy,XyYx->XY', t1_ce, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixYa,Xx->XY', t1_ce, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XxYy->XY', t1_ce, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ia,ixya,XyYx->XY', t1_ce, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += einsum('ijYa,ixja,Xx->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('ijYa,jxia,Xx->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('ijYx,ixjy,Xy->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('ijYx,iyjz,Xxyz->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 += einsum('ijYx,jxiy,Xy->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 -= 2 * einsum('ijab,iajb,XY->XY', t1_ccee, v_cece, rdm_ca, optimize = einsum_type)
V1 += einsum('ijab,jaib,XY->XY', t1_ccee, v_cece, rdm_ca, optimize = einsum_type)
V1 += einsum('ijxa,iYja,Xx->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 -= 4 * einsum('ijxa,ixja,XY->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 += einsum('ijxa,iyja,XxYy->XY', t1_ccae, v_cace, rdm_ccaa, optimize = einsum_type)
V1 += einsum('ijxa,iyja,XyYx->XY', t1_ccae, v_cace, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxa,jYia,Xx->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 += 2 * einsum('ijxa,jxia,XY->XY', t1_ccae, v_cace, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxa,jyia,XxYy->XY', t1_ccae, v_cace, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxa,jyia,XyYx->XY', t1_ccae, v_cace, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxy,iYjx,Xy->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxy,iYjz,Xzxy->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 -= 2 * einsum('ijxy,ixjy,XY->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 += einsum('ijxy,ixjz,XyYz->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 += einsum('ijxy,ixjz,XzYy->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxy,iyjz,XxYz->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('ijxy,iyjz,XzYx->XY', t1_ccaa, v_caca, rdm_ccaa, optimize = einsum_type)
V1 += 1/12 * einsum('ijxy,izjw,XxyYwz->XY', t1_ccaa, v_caca, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ijxy,izjw,XxyYzw->XY', t1_ccaa, v_caca, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('ijxy,izjw,XxywzY->XY', t1_ccaa, v_caca, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('ijxy,izjw,XxyzwY->XY', t1_ccaa, v_caca, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/4 * einsum('ijxy,izjw,XzwYxy->XY', t1_ccaa, v_caca, rdm_cccaaa, optimize = einsum_type)
V1 += einsum('ijxy,jYix,Xy->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 += einsum('ijxy,jxiy,XY->XY', t1_ccaa, v_caca, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iYyx,Xy->XY', t1_ca, v_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iYyz,Xzxy->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ix,ixYy,Xy->XY', t1_ca, v_caaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ix,ixyY,Xy->XY', t1_ca, v_caaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ix,ixyz,XyYz->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ix,ixyz,XzYy->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyYx,Xy->XY', t1_ca, v_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyYz,Xxzy->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzY,Xyzx->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzw,XxzYyw->XY', t1_ca, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzw,XywYxz->XY', t1_ca, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzx,XyYz->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ix,iyzx,XzYy->XY', t1_ca, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYa,iayz,Xyxz->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYa,iyza,Xzyx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYy,iyzw,Xzxw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixYy,izwu,Xywuxz->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixYy,izwu,Xywuzx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixYy,izwu,Xywxuz->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixYy,izwu,Xywxzu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixYy,izwu,Xywzux->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixYy,izwu,Xywzxu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixYy,izwy,Xwzx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixaY,iayz,Xyxz->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixaY,iyza,Xzxy->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixab,iaYb,Xx->XY', t1_caee, v_ceae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixab,iayb,XxYy->XY', t1_caee, v_ceae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixab,iayb,XyYx->XY', t1_caee, v_ceae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixab,ibYa,Xx->XY', t1_caee, v_ceae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixab,ibya,XxYy->XY', t1_caee, v_ceae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixab,ibya,XyYx->XY', t1_caee, v_ceae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iYza,Xxzy->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iaYy,Xx->XY', t1_caea, v_ceaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixay,iaYz,Xyzx->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazY,Xxzy->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazw,XxwYyz->XY', t1_caea, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixay,iazw,XyzYxw->XY', t1_caea, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixay,iazy,XxYz->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixay,iazy,XzYx->XY', t1_caea, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyYa,Xx->XY', t1_caea, v_caae, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyza,XxYz->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,iyza,XzYx->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izYa,Xyzx->XY', t1_caea, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izwa,XxzYyw->XY', t1_caea, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixay,izwa,XywYxz->XY', t1_caea, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixyY,iyzw,Xzxw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyY,izwu,Xywxzu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyY,izwy,Xwxz->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iYza,Xxyz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iaYy,Xx->XY', t1_caae, v_ceaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iaYz,Xyzx->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazY,Xxzy->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazw,XxwYyz->XY', t1_caae, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazw,XyzYxw->XY', t1_caae, v_ceaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazy,XxYz->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,iazy,XzYx->XY', t1_caae, v_ceaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixya,iyYa,Xx->XY', t1_caae, v_caae, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixya,iyza,XxYz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixya,iyza,XzYx->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixya,izYa,Xyxz->XY', t1_caae, v_caae, rdm_ccaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixya,izwa,XxzYwy->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzYyw->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzwYy->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzwyY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzyYw->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XxzywY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywYxz->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixya,izwa,XywYzx->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywxYz->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywxzY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywzYx->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixya,izwa,XywzxY->XY', t1_caae, v_caae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iYwu,Xxuyzw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iYwy,Xxwz->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iYwz,Xxyw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixyz,iwYu,Xyzuwx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwYu,Xyzuxw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwYu,Xyzwux->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwYu,Xyzwxu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwYu,Xyzxuw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwYu,Xyzxwu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iwYy,Xzwx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iwYz,Xyxw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuY,Xxwuyz->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixyz,iwuY,Xxwuzy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuY,Xxwyuz->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuY,Xxwyzu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuY,Xxwzuy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuY,Xxwzyu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 11/120 * einsum('ixyz,iwuv,XxwvYuyz->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 11/120 * einsum('ixyz,iwuv,XxwvYuzy->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 17/120 * einsum('ixyz,iwuv,XxwvYyuz->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 17/120 * einsum('ixyz,iwuv,XxwvYyzu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 17/120 * einsum('ixyz,iwuv,XxwvYzuy->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 43/120 * einsum('ixyz,iwuv,XxwvYzyu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/30 * einsum('ixyz,iwuv,XxwvuYyz->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/30 * einsum('ixyz,iwuv,XxwvuYzy->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('ixyz,iwuv,XxwvyYuz->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('ixyz,iwuv,XxwvyYzu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/120 * einsum('ixyz,iwuv,XxwvyuYz->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/120 * einsum('ixyz,iwuv,XxwvyuzY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('ixyz,iwuv,XxwvyzYu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('ixyz,iwuv,XxwvyzuY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('ixyz,iwuv,XxwvzYuy->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('ixyz,iwuv,XxwvzYyu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 3/40 * einsum('ixyz,iwuv,XxwvzuYy->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 3/40 * einsum('ixyz,iwuv,XxwvzuyY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('ixyz,iwuv,XxwvzyYu->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('ixyz,iwuv,XxwvzyuY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 11/120 * einsum('ixyz,iwuv,XyzuYvwx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 17/120 * einsum('ixyz,iwuv,XyzuYvxw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 11/120 * einsum('ixyz,iwuv,XyzuYwvx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 43/120 * einsum('ixyz,iwuv,XyzuYwxv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/24 * einsum('ixyz,iwuv,XyzuYxvw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 29/120 * einsum('ixyz,iwuv,XyzuYxwv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/120 * einsum('ixyz,iwuv,XyzuvYwx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('ixyz,iwuv,XyzuvYxw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 3/40 * einsum('ixyz,iwuv,XyzuvwYx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('ixyz,iwuv,XyzuvxYw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/120 * einsum('ixyz,iwuv,XyzuwYvx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('ixyz,iwuv,XyzuwYxv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 3/40 * einsum('ixyz,iwuv,XyzuwvYx->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('ixyz,iwuv,XyzuwxYv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('ixyz,iwuv,XyzuxYvw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('ixyz,iwuv,XyzuxYwv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('ixyz,iwuv,XyzuxvYw->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/30 * einsum('ixyz,iwuv,XyzuxvwY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('ixyz,iwuv,XyzuxwYv->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/30 * einsum('ixyz,iwuv,XyzuxwvY->XY', t1_caaa, v_caaa, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iwuy,XxwYzu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,iwuy,XzuYxw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixyz,iwuz,XxwYuy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XxwYyu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XxwuYy->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XxwuyY->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XxwyYu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XxwyuY->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/3 * einsum('ixyz,iwuz,XyuYwx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XyuYxw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XyuwYx->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XyuwxY->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XyuxYw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/6 * einsum('ixyz,iwuz,XyuxwY->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixyz,iyYw,Xzwx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixyz,iyYz,Xx->XY', t1_caaa, v_caaa, rdm_ca, optimize = einsum_type)
V1 -= einsum('ixyz,iywY,Xxwz->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixyz,iywu,XxuYzw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixyz,iywu,XzwYxu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= einsum('ixyz,iywz,XwYx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('ixyz,iywz,XxYw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izYw,Xywx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izYy,Xx->XY', t1_caaa, v_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izwY,Xxwy->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izwu,XxuYyw->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izwu,XywYxu->XY', t1_caaa, v_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izwy,XwYx->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('ixyz,izwy,XxYw->XY', t1_caaa, v_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xYya,zwua,Xxwuyz->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xYya,zywa,Xxwz->XY', t1_aaae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,Yyza,Xzyx->XY', t1_ae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yYza,Xxyz->XY', t1_ae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yzYa,Xyxz->XY', t1_ae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yzwa,XwyYxz->XY', t1_ae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xa,yzwa,XxzYwy->XY', t1_ae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyYa,zwua,Xuzwxy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyYa,zwua,Xuzwyx->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyYa,zwua,Xuzxwy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('xyYa,zwua,Xuzxyw->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyYa,zwua,Xuzywx->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyYa,zwua,Xuzyxw->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyab,Yazb,Xzxy->XY', t1_aaee, v_aeae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyab,zawb,XxyYzw->XY', t1_aaee, v_aeae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyab,zawb,XzwYxy->XY', t1_aaee, v_aeae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyza,Ywua,Xzuwxy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyza,Yzwa,Xwxy->XY', t1_aaae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wYua,Xyxuwz->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wYua,Xyxuzw->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('xyza,wYua,Xyxwuz->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wYua,Xyxwzu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wYua,Xyxzuw->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wYua,Xyxzwu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wuYa,Xzwuxy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wuYa,Xzwuyx->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wuYa,Xzwxuy->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wuYa,Xzwxyu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/6 * einsum('xyza,wuYa,Xzwyux->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/3 * einsum('xyza,wuYa,Xzwyxu->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 11/120 * einsum('xyza,wuva,XyxuYvwz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 43/120 * einsum('xyza,wuva,XyxuYvzw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 11/120 * einsum('xyza,wuva,XyxuYwvz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 17/120 * einsum('xyza,wuva,XyxuYwzv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 29/120 * einsum('xyza,wuva,XyxuYzvw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyza,wuva,XyxuYzwv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/120 * einsum('xyza,wuva,XyxuvYwz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('xyza,wuva,XyxuvYzw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 3/40 * einsum('xyza,wuva,XyxuvwYz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('xyza,wuva,XyxuvzYw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/120 * einsum('xyza,wuva,XyxuwYvz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('xyza,wuva,XyxuwYzv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 3/40 * einsum('xyza,wuva,XyxuwvYz->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('xyza,wuva,XyxuwzYv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('xyza,wuva,XyxuzYvw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('xyza,wuva,XyxuzYwv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('xyza,wuva,XyxuzvYw->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/30 * einsum('xyza,wuva,XyxuzvwY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('xyza,wuva,XyxuzwYv->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/30 * einsum('xyza,wuva,XyxuzwvY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 11/120 * einsum('xyza,wuva,XzvwYuxy->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 11/120 * einsum('xyza,wuva,XzvwYuyx->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 17/120 * einsum('xyza,wuva,XzvwYxuy->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 43/120 * einsum('xyza,wuva,XzvwYxyu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 17/120 * einsum('xyza,wuva,XzvwYyux->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 17/120 * einsum('xyza,wuva,XzvwYyxu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/30 * einsum('xyza,wuva,XzvwuYxy->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/30 * einsum('xyza,wuva,XzvwuYyx->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('xyza,wuva,XzvwxYuy->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 7/120 * einsum('xyza,wuva,XzvwxYyu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 3/40 * einsum('xyza,wuva,XzvwxuYy->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 3/40 * einsum('xyza,wuva,XzvwxuyY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('xyza,wuva,XzvwxyYu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/40 * einsum('xyza,wuva,XzvwxyuY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('xyza,wuva,XzvwyYux->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/40 * einsum('xyza,wuva,XzvwyYxu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/120 * einsum('xyza,wuva,XzvwyuYx->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 1/120 * einsum('xyza,wuva,XzvwyuxY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('xyza,wuva,XzvwyxYu->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 += 7/120 * einsum('xyza,wuva,XzvwyxuY->XY', t1_aaae, v_aaae, rdm_ccccaaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyza,wzYa,Xwyx->XY', t1_aaae, v_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyza,wzua,XuwYyx->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyza,wzua,XyxYuw->XY', t1_aaae, v_aaae, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 3140.83 seconds.
