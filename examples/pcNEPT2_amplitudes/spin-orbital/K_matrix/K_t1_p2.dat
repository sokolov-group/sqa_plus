
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------------- Spin-Orbital t1_p2 ORDER_REPLACE ---------------------------------

# Create spin-orbital Dyall Hamiltonian ...
## Create K_aacc: a_Z a_W [H_{act}, a_X^\dag a_Y^\dag] ...

 (   1.00000) des(Z) des(W) 
 (   1.00000) cre(X) cre(Y) 

## Calculating the commutator ...

## Multiply ...
## Compute expected value of spin-orbital K matrix ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
 (   1.00000) v(W,Z,X,Y)  --->  (   1.00000) v(x,y,z,w) 
 (   1.00000) h(W,X) kdelta(Y,Z)  --->  (   1.00000) h(x,y) kdelta(z,w) 
 (  -1.00000) h(W,Y) kdelta(X,Z)  --->  (  -1.00000) h(x,y) kdelta(z,w) 
 (  -1.00000) h(X,Z) kdelta(W,Y)  --->  (  -1.00000) h(x,y) kdelta(z,w) 
 (   1.00000) h(Y,Z) kdelta(W,X)  --->  (   1.00000) h(x,y) kdelta(z,w) 
 (   1.00000) kdelta(W,X) v(a,Y,a,Z)  --->  (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) kdelta(W,Y) v(a,X,a,Z)  --->  (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) kdelta(X,Z) v(a,W,a,Y)  --->  (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (   1.00000) kdelta(Y,Z) v(a,W,a,X)  --->  (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) h(W,X) cre(Y) des(Z)  --->  (  -1.00000) h(x,y) cre(z) des(w) 
 (   1.00000) h(W,Y) cre(X) des(Z)  --->  (   1.00000) h(x,y) cre(z) des(w) 
 (   1.00000) h(X,Z) cre(Y) des(W)  --->  (   1.00000) h(x,y) cre(z) des(w) 
 (  -1.00000) h(Y,Z) cre(X) des(W)  --->  (  -1.00000) h(x,y) cre(z) des(w) 
 (  -1.00000) v(W,Z,X,a) cre(Y) des(a)  --->  (  -1.00000) v(x,y,z,w) cre(u) des(w) 
 (   1.00000) v(W,Z,Y,a) cre(X) des(a)  --->  (   1.00000) v(x,y,z,w) cre(u) des(w) 
 (  -1.00000) v(W,a,X,Y) cre(a) des(Z)  --->  (  -1.00000) v(x,y,z,w) cre(y) des(u) 
 (  -1.00000) v(a,W,a,X) cre(Y) des(Z)  --->  (  -1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) v(a,W,a,Y) cre(X) des(Z)  --->  (   1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) v(X,Y,Z,a) cre(a) des(W)  --->  (   1.00000) v(x,y,z,w) cre(w) des(u) 
 (   1.00000) v(a,X,a,Z) cre(Y) des(W)  --->  (   1.00000) v(i,x,i,y) cre(z) des(w) 
 (  -1.00000) v(a,Y,a,Z) cre(X) des(W)  --->  (  -1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) h(X,a) kdelta(W,Y) cre(a) des(Z)  --->  (   1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (  -1.00000) h(X,a) kdelta(Y,Z) cre(a) des(W)  --->  (  -1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (  -1.00000) h(Y,a) kdelta(W,X) cre(a) des(Z)  --->  (  -1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (   1.00000) h(Y,a) kdelta(X,Z) cre(a) des(W)  --->  (   1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (   1.00000) kdelta(W,X) v(Y,a,Z,b) cre(b) des(a)  --->  (   1.00000) kdelta(x,y) v(z,w,u,v) cre(v) des(w) 
 (  -1.00000) kdelta(W,X) v(a,Y,a,b) cre(b) des(Z)  --->  (  -1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (  -1.00000) kdelta(W,Y) v(X,a,Z,b) cre(b) des(a)  --->  (  -1.00000) kdelta(x,y) v(z,w,u,v) cre(v) des(w) 
 (   1.00000) kdelta(W,Y) v(a,X,a,b) cre(b) des(Z)  --->  (   1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (  -1.00000) kdelta(X,Z) v(W,a,Y,b) cre(a) des(b)  --->  (  -1.00000) kdelta(x,y) v(z,w,u,v) cre(w) des(v) 
 (   1.00000) kdelta(X,Z) v(a,Y,a,b) cre(b) des(W)  --->  (   1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (   1.00000) kdelta(Y,Z) v(W,a,X,b) cre(a) des(b)  --->  (   1.00000) kdelta(x,y) v(z,w,u,v) cre(w) des(v) 
 (  -1.00000) kdelta(Y,Z) v(a,X,a,b) cre(b) des(W)  --->  (  -1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (   1.00000) h(X,a) cre(Y) cre(a) des(W) des(Z)  --->  (   1.00000) h(x,y) cre(z) cre(y) des(w) des(u) 
 (  -1.00000) h(Y,a) cre(X) cre(a) des(W) des(Z)  --->  (  -1.00000) h(x,y) cre(z) cre(y) des(w) des(u) 
 (   1.00000) v(W,a,X,b) cre(Y) cre(a) des(Z) des(b)  --->  (   1.00000) v(x,y,z,w) cre(u) cre(y) des(v) des(w) 
 (  -1.00000) v(W,a,Y,b) cre(X) cre(a) des(Z) des(b)  --->  (  -1.00000) v(x,y,z,w) cre(u) cre(y) des(v) des(w) 
 (  -0.50000) v(X,Y,a,b) cre(a) cre(b) des(W) des(Z)  --->  (  -0.50000) v(x,y,z,w) cre(z) cre(w) des(u) des(v) 
 (  -1.00000) v(X,a,Z,b) cre(Y) cre(b) des(W) des(a)  --->  (  -1.00000) v(x,y,z,w) cre(u) cre(w) des(v) des(y) 
 (   1.00000) v(a,X,a,b) cre(Y) cre(b) des(W) des(Z)  --->  (   1.00000) v(i,x,i,y) cre(z) cre(y) des(w) des(u) 
 (   1.00000) v(Y,a,Z,b) cre(X) cre(b) des(W) des(a)  --->  (   1.00000) v(x,y,z,w) cre(u) cre(w) des(v) des(y) 
 (  -1.00000) v(a,Y,a,b) cre(X) cre(b) des(W) des(Z)  --->  (  -1.00000) v(i,x,i,y) cre(z) cre(y) des(w) des(u) 
 (   0.50000) kdelta(W,X) v(Y,a,b,c) cre(b) cre(c) des(Z) des(a)  --->  (   0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (  -0.50000) kdelta(W,Y) v(X,a,b,c) cre(b) cre(c) des(Z) des(a)  --->  (  -0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (  -0.50000) kdelta(X,Z) v(Y,a,b,c) cre(b) cre(c) des(W) des(a)  --->  (  -0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (   0.50000) kdelta(Y,Z) v(X,a,b,c) cre(b) cre(c) des(W) des(a)  --->  (   0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (   0.50000) v(X,a,b,c) cre(Y) cre(b) cre(c) des(W) des(Z) des(a)  --->  (   0.50000) v(x,y,z,w) cre(u) cre(z) cre(w) des(v) des(s) des(y) 
 (  -0.50000) v(Y,a,b,c) cre(X) cre(b) cre(c) des(W) des(Z) des(a)  --->  (  -0.50000) v(x,y,z,w) cre(u) cre(z) cre(w) des(v) des(s) des(y) 
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) v(x,y,z,w) 
 (   1.00000) h(x,y) kdelta(z,w) 
 (  -1.00000) h(x,y) kdelta(z,w) 
 (  -1.00000) h(x,y) kdelta(z,w) 
 (   1.00000) h(x,y) kdelta(z,w) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) h(x,y) cre(z) des(w) 
 (   1.00000) h(x,y) cre(z) des(w) 
 (   1.00000) h(x,y) cre(z) des(w) 
 (  -1.00000) h(x,y) cre(z) des(w) 
 (  -1.00000) v(x,y,z,w) cre(u) des(w) 
 (   1.00000) v(x,y,z,w) cre(u) des(w) 
 (  -1.00000) v(x,y,z,w) cre(y) des(u) 
 (  -1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) v(x,y,z,w) cre(w) des(u) 
 (   1.00000) v(i,x,i,y) cre(z) des(w) 
 (  -1.00000) v(i,x,i,y) cre(z) des(w) 
 (   1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (  -1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (  -1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (   1.00000) h(x,y) kdelta(z,w) cre(y) des(u) 
 (   1.00000) kdelta(x,y) v(z,w,u,v) cre(v) des(w) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (  -1.00000) kdelta(x,y) v(z,w,u,v) cre(v) des(w) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (  -1.00000) kdelta(x,y) v(z,w,u,v) cre(w) des(v) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (   1.00000) kdelta(x,y) v(z,w,u,v) cre(w) des(v) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) cre(w) des(u) 
 (   1.00000) h(x,y) cre(z) cre(y) des(w) des(u) 
 (  -1.00000) h(x,y) cre(z) cre(y) des(w) des(u) 
 (   1.00000) v(x,y,z,w) cre(u) cre(y) des(v) des(w) 
 (  -1.00000) v(x,y,z,w) cre(u) cre(y) des(v) des(w) 
 (  -0.50000) v(x,y,z,w) cre(z) cre(w) des(u) des(v) 
 (  -1.00000) v(x,y,z,w) cre(u) cre(w) des(v) des(y) 
 (   1.00000) v(i,x,i,y) cre(z) cre(y) des(w) des(u) 
 (   1.00000) v(x,y,z,w) cre(u) cre(w) des(v) des(y) 
 (  -1.00000) v(i,x,i,y) cre(z) cre(y) des(w) des(u) 
 (   0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (  -0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (  -0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (   0.50000) kdelta(x,y) v(z,w,u,v) cre(u) cre(v) des(s) des(w) 
 (   0.50000) v(x,y,z,w) cre(u) cre(z) cre(w) des(v) des(s) des(y) 
 (  -0.50000) v(x,y,z,w) cre(u) cre(z) cre(w) des(v) des(s) des(y) 

Total terms : 48
SQA automation time :  0.325 seconds

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

14 terms removed:
 (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) 
 (  -1.00000) v(i,x,i,y) rdm(z,w) 
 (  -1.00000) v(i,x,i,y) rdm(z,w) 
 (   1.00000) v(i,x,i,y) rdm(z,w) 
 (   1.00000) v(i,x,i,y) rdm(z,w) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) rdm(w,u) 
 (  -1.00000) kdelta(x,y) v(i,z,i,w) rdm(w,u) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) rdm(w,u) 
 (   1.00000) kdelta(x,y) v(i,z,i,w) rdm(w,u) 
 (  -1.00000) v(i,x,i,y) rdm(z,y,w,u) 
 (   1.00000) v(i,x,i,y) rdm(z,y,w,u) 
----------------------------------------------------------------------------------------------------
Remaining terms: 34


--------------------------------------- genEinsum equations ----------------------------------------

K_aacc  = einsum('xyzw->ZWXY', v_aaaa_so, optimize = einsum_type).copy()
K_aacc -= einsum('xy,zw->ZWXY', h_aa_so, np.identity(ncas_so), optimize = einsum_type)
K_aacc -= einsum('xy,zw->ZWXY', h_aa_so, np.identity(ncas_so), optimize = einsum_type)
K_aacc += einsum('xy,zw->ZWXY', h_aa_so, np.identity(ncas_so), optimize = einsum_type)
K_aacc += einsum('xy,zw->ZWXY', h_aa_so, np.identity(ncas_so), optimize = einsum_type)
K_aacc -= einsum('xy,zw->ZWXY', h_aa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zw->ZWXY', h_aa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zw->ZWXY', h_aa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zw->ZWXY', h_aa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xyzw,uw->ZWXY', v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xyzw,uw->ZWXY', v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xyzw,wu->ZWXY', v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xyzw,yu->ZWXY', v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zw,yu->ZWXY', h_aa_so, np.identity(ncas_so), rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zw,yu->ZWXY', h_aa_so, np.identity(ncas_so), rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zw,yu->ZWXY', h_aa_so, np.identity(ncas_so), rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zw,yu->ZWXY', h_aa_so, np.identity(ncas_so), rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zwuv,vw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zwuv,vw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zwuv,wv->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc += einsum('xy,zwuv,wv->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ca_so, optimize = einsum_type)
K_aacc -= einsum('xy,zywu->ZWXY', h_aa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc += einsum('xy,zywu->ZWXY', h_aa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= 1/2 * einsum('xyzw,zwuv->ZWXY', v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= einsum('xyzw,uwvy->ZWXY', v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc += einsum('xyzw,uwvy->ZWXY', v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= einsum('xyzw,uyvw->ZWXY', v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc += einsum('xyzw,uyvw->ZWXY', v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= 1/2 * einsum('xy,zwuv,uvsw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= 1/2 * einsum('xy,zwuv,uvsw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc += 1/2 * einsum('xy,zwuv,uvsw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc += 1/2 * einsum('xy,zwuv,uvsw->ZWXY', np.identity(ncas_so), v_aaaa_so, rdm_ccaa_so, optimize = einsum_type)
K_aacc -= 1/2 * einsum('xyzw,uzwvsy->ZWXY', v_aaaa_so, rdm_cccaaa_so, optimize = einsum_type)
K_aacc += 1/2 * einsum('xyzw,uzwvsy->ZWXY', v_aaaa_so, rdm_cccaaa_so, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 0.40 seconds.
