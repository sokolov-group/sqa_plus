
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------
First Commutator
Second Commutator

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) X(x,y,A) h(y,B) cre(X) des(x) 
 (   1.00000) X(x,y,B) h(y,A) cre(X) des(x) 
 (  -1.00000) X(x,y,A) v(i,y,i,B) cre(X) des(x) 
 (   1.00000) X(x,y,B) v(i,y,i,A) cre(X) des(x) 
 (   1.00000) X(x,y,a) v(y,a,A,B) cre(X) des(x) 
 (  -1.00000) X(x,y,A) e(B) t1(y,B) cre(X) des(x) 
 (   1.00000) X(x,y,B) e(A) t1(y,A) cre(X) des(x) 
 (   1.00000) X(x,y,A) h(y,z) t1(z,B) cre(X) des(x) 
 (  -1.00000) X(x,y,B) h(y,z) t1(z,A) cre(X) des(x) 
 (   1.00000) X(x,y,A) t1(z,B) v(i,z,i,y) cre(X) des(x) 
 (  -1.00000) X(x,y,B) t1(z,A) v(i,z,i,y) cre(X) des(x) 
 (  -1.00000) X(x,y,A) v(y,z,w,B) cre(X) cre(w) des(x) des(z) 
 (   0.50000) X(x,y,A) v(z,w,x,B) cre(X) cre(y) des(z) des(w) 
 (   1.00000) X(x,y,B) v(y,z,w,A) cre(X) cre(w) des(x) des(z) 
 (  -0.50000) X(x,y,B) v(z,w,x,A) cre(X) cre(y) des(z) des(w) 
 (   1.00000) X(x,y,a) v(z,a,A,B) cre(X) cre(y) des(x) des(z) 
 (   1.00000) X(x,y,A) e(B) t1(y,z,B,w) cre(X) cre(w) des(x) des(z) 
 (  -0.50000) X(x,y,A) e(B) t1(z,w,B,x) cre(X) cre(y) des(z) des(w) 
 (  -1.00000) X(x,y,B) e(A) t1(y,z,A,w) cre(X) cre(w) des(x) des(z) 
 (   0.50000) X(x,y,B) e(A) t1(z,w,A,x) cre(X) cre(y) des(z) des(w) 
 (  -0.50000) X(x,y,A) h(x,z) t1(w,u,B,z) cre(X) cre(y) des(w) des(u) 
 (  -1.00000) X(x,y,A) h(y,z) t1(z,w,B,u) cre(X) cre(u) des(x) des(w) 
 (  -1.00000) X(x,y,A) h(z,w) t1(y,z,B,u) cre(X) cre(u) des(x) des(w) 
 (   1.00000) X(x,y,A) h(z,w) t1(y,u,B,z) cre(X) cre(w) des(x) des(u) 
 (   1.00000) X(x,y,A) h(z,w) t1(z,u,B,x) cre(X) cre(y) des(w) des(u) 
 (   0.50000) X(x,y,B) h(x,z) t1(w,u,A,z) cre(X) cre(y) des(w) des(u) 
 (   1.00000) X(x,y,B) h(y,z) t1(z,w,A,u) cre(X) cre(u) des(x) des(w) 
 (   1.00000) X(x,y,B) h(z,w) t1(y,z,A,u) cre(X) cre(u) des(x) des(w) 
 (  -1.00000) X(x,y,B) h(z,w) t1(y,u,A,z) cre(X) cre(w) des(x) des(u) 
 (  -1.00000) X(x,y,B) h(z,w) t1(z,u,A,x) cre(X) cre(y) des(w) des(u) 
 (  -1.00000) X(x,y,A) t1(z,B) v(y,w,z,u) cre(X) cre(u) des(x) des(w) 
 (  -0.50000) X(x,y,A) t1(z,B) v(w,u,x,z) cre(X) cre(y) des(w) des(u) 
 (  -1.00000) X(x,y,A) t1(y,z,B,w) v(i,z,i,u) cre(X) cre(w) des(x) des(u) 
 (   1.00000) X(x,y,A) t1(y,z,B,w) v(i,u,i,w) cre(X) cre(u) des(x) des(z) 
 (  -1.00000) X(x,y,A) t1(z,w,B,x) v(i,z,i,u) cre(X) cre(y) des(w) des(u) 
 (   0.25000) X(x,y,A) t1(z,w,B,x) v(u,v,z,w) cre(X) cre(y) des(u) des(v) 
 (  -0.50000) X(x,y,A) t1(z,w,B,u) v(i,x,i,u) cre(X) cre(y) des(z) des(w) 
 (  -0.50000) X(x,y,A) t1(z,w,B,u) v(y,v,z,w) cre(X) cre(u) des(x) des(v) 
 (  -1.00000) X(x,y,A) t1(z,w,B,u) v(i,z,i,y) cre(X) cre(u) des(x) des(w) 
 (   1.00000) X(x,y,B) t1(z,A) v(y,w,z,u) cre(X) cre(u) des(x) des(w) 
 (   0.50000) X(x,y,B) t1(z,A) v(w,u,x,z) cre(X) cre(y) des(w) des(u) 
 (   1.00000) X(x,y,B) t1(y,z,A,w) v(i,z,i,u) cre(X) cre(w) des(x) des(u) 
 (  -1.00000) X(x,y,B) t1(y,z,A,w) v(i,u,i,w) cre(X) cre(u) des(x) des(z) 
 (   1.00000) X(x,y,B) t1(z,w,A,x) v(i,z,i,u) cre(X) cre(y) des(w) des(u) 
 (  -0.25000) X(x,y,B) t1(z,w,A,x) v(u,v,z,w) cre(X) cre(y) des(u) des(v) 
 (   0.50000) X(x,y,B) t1(z,w,A,u) v(i,x,i,u) cre(X) cre(y) des(z) des(w) 
 (   0.50000) X(x,y,B) t1(z,w,A,u) v(y,v,z,w) cre(X) cre(u) des(x) des(v) 
 (   1.00000) X(x,y,B) t1(z,w,A,u) v(i,z,i,y) cre(X) cre(u) des(x) des(w) 
 (   0.50000) X(x,y,A) t1(y,z,B,w) v(w,u,v,s) cre(X) cre(v) cre(s) des(x) des(z) des(u) 
 (  -0.50000) X(x,y,A) t1(y,z,B,w) v(u,v,z,s) cre(X) cre(w) cre(s) des(x) des(u) des(v) 
 (  -0.50000) X(x,y,A) t1(z,w,B,x) v(u,v,z,s) cre(X) cre(y) cre(s) des(w) des(u) des(v) 
 (  -0.25000) X(x,y,A) t1(z,w,B,u) v(y,u,v,s) cre(X) cre(v) cre(s) des(x) des(z) des(w) 
 (  -1.00000) X(x,y,A) t1(z,w,B,u) v(y,v,z,s) cre(X) cre(u) cre(s) des(x) des(w) des(v) 
 (  -0.50000) X(x,y,A) t1(z,w,B,u) v(u,v,x,s) cre(X) cre(y) cre(s) des(z) des(w) des(v) 
 (  -0.50000) X(x,y,A) t1(z,w,B,u) v(v,s,x,z) cre(X) cre(y) cre(u) des(w) des(v) des(s) 
 (  -0.50000) X(x,y,B) t1(y,z,A,w) v(w,u,v,s) cre(X) cre(v) cre(s) des(x) des(z) des(u) 
 (   0.50000) X(x,y,B) t1(y,z,A,w) v(u,v,z,s) cre(X) cre(w) cre(s) des(x) des(u) des(v) 
 (   0.50000) X(x,y,B) t1(z,w,A,x) v(u,v,z,s) cre(X) cre(y) cre(s) des(w) des(u) des(v) 
 (   0.25000) X(x,y,B) t1(z,w,A,u) v(y,u,v,s) cre(X) cre(v) cre(s) des(x) des(z) des(w) 
 (   1.00000) X(x,y,B) t1(z,w,A,u) v(y,v,z,s) cre(X) cre(u) cre(s) des(x) des(w) des(v) 
 (   0.50000) X(x,y,B) t1(z,w,A,u) v(u,v,x,s) cre(X) cre(y) cre(s) des(z) des(w) des(v) 
 (   0.50000) X(x,y,B) t1(z,w,A,u) v(v,s,x,z) cre(X) cre(y) cre(u) des(w) des(v) des(s) 

Total terms : 62
SQA automation time :  2.539 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
temp =- np.einsum('xyA, yB, Xx->XAB', X, h_ae_so, rdm_ca_so, optimize = True)
temp += np.einsum('xyB, yA, Xx->XAB', X, h_ae_so, rdm_ca_so, optimize = True)
temp -= np.einsum('xyA, iyiB, Xx->XAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp += np.einsum('xyB, iyiA, Xx->XAB', X, v_cace_so, rdm_ca_so, optimize = True)
temp += np.einsum('xya, yaAB, Xx->XAB', X, v_aeee_so, rdm_ca_so, optimize = True)
temp -= np.einsum('xyA, B, yB, Xx->XAB', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
temp += np.einsum('xyB, A, yA, Xx->XAB', X, e_extern_so, t1_ae, rdm_ca_so, optimize = True)
temp += np.einsum('xyA, yz, zB, Xx->XAB', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
temp -= np.einsum('xyB, yz, zA, Xx->XAB', X, h_aa_so, t1_ae, rdm_ca_so, optimize = True)
temp += np.einsum('xyA, zB, iziy, Xx->XAB', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('xyB, zA, iziy, Xx->XAB', X, t1_ae, v_caca_so, rdm_ca_so, optimize = True)
temp -= np.einsum('xyA, yzwB, Xwxz->XAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyA, zwxB, Xyzw->XAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, yzwA, Xwxz->XAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyB, zwxA, Xyzw->XAB', X, v_aaae_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xya, zaAB, Xyxz->XAB', X, v_aeee_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyA, B, yzBw, Xwxz->XAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, B, zwBx, Xyzw->XAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyB, A, yzAw, Xwxz->XAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, A, zwAx, Xyzw->XAB', X, e_extern_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, xz, wuBz, Xywu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, yz, zwBu, Xuxw->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, zw, yzBu, Xuxw->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyA, zw, yuBz, Xwxu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyA, zw, zuBx, Xywu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, xz, wuAz, Xywu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, yz, zwAu, Xuxw->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, zw, yzAu, Xuxw->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyB, zw, yuAz, Xwxu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyB, zw, zuAx, Xywu->XAB', X, h_aa_so, t1_aaea, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, zB, ywzu, Xuxw->XAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zB, wuxz, Xywu->XAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, yzBw, iziu, Xwxu->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyA, yzBw, iuiw, Xuxz->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, zwBx, iziu, Xywu->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.25 * np.einsum('xyA, zwBx, uvzw, Xyuv->XAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zwBu, ixiu, Xyzw->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zwBu, yvzw, Xuxv->XAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyA, zwBu, iziy, Xuxw->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, zA, ywzu, Xuxw->XAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zA, wuxz, Xywu->XAB', X, t1_ae, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, yzAw, iziu, Xwxu->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= np.einsum('xyB, yzAw, iuiw, Xuxz->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, zwAx, iziu, Xywu->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyB, zwAx, uvzw, Xyuv->XAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zwAu, ixiu, Xyzw->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zwAu, yvzw, Xuxv->XAB', X, t1_aaea, v_aaaa_so, rdm_ccaa_so, optimize = True)
temp += np.einsum('xyB, zwAu, iziy, Xuxw->XAB', X, t1_aaea, v_caca_so, rdm_ccaa_so, optimize = True)
temp += 0.5 * np.einsum('xyA, yzBw, wuvs, Xvsxzu->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, yzBw, uvzs, Xwsxuv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zwBx, uvzs, Xyswuv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.25 * np.einsum('xyA, zwBu, yuvs, Xvsxzw->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= np.einsum('xyA, zwBu, yvzs, Xusxwv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zwBu, uvxs, Xyszwv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyA, zwBu, vsxz, Xyuwvs->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp -= 0.5 * np.einsum('xyB, yzAw, wuvs, Xvsxzu->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, yzAw, uvzs, Xwsxuv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zwAx, uvzs, Xyswuv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.25 * np.einsum('xyB, zwAu, yuvs, Xvsxzw->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += np.einsum('xyB, zwAu, yvzs, Xusxwv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zwAu, uvxs, Xyszwv->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
temp += 0.5 * np.einsum('xyB, zwAu, vsxz, Xyuwvs->XAB', X, t1_aaea, v_aaaa_so, rdm_cccaaa_so, optimize = True)
