
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


----------------------------- Spin-Adapted Preconditioner CAAA (abba) ------------------------------


## Generating operators ...


## Generating Term a_I^\dag a_U^\dag a_V a_X ... a_Y^\dag a_Z^\dag a_W a_K ...


## Left operator terms:
 (   1.00000) cre(I) cre(U) des(V) des(X) 

## Right operator terms:
 (   1.00000) cre(Y) cre(Z) des(W) des(K) 

----------------------------------------- Hamiltonian (0) ------------------------------------------

Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(0), h_NU^\dag] ...

## Calculating [h_MU, [H(0), h_NU^\dag]] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) kdelta(I,K) v(V,X,Y,Z) cre(U) des(W) 
 (   1.00000) h(V,Z) kdelta(I,K) kdelta(X,Y) cre(U) des(W) 
 (   1.00000) h(X,Y) kdelta(I,K) kdelta(V,Z) cre(U) des(W) 
 (   2.00000) v(i,X,i,Y) kdelta(I,K) kdelta(V,Z) cre(U) des(W) 
 (   2.00000) v(i,X,i,Y) kdelta(I,K) kdelta(V,Z) cre(U) des(W) 
 (   2.00000) v(i,X,i,Y) kdelta(I,K) kdelta(V,Z) cre(U) des(W) 
 (   2.00000) v(i,X,i,Y) kdelta(I,K) kdelta(V,Z) cre(U) des(W) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) cre(U) des(W) 
 (  -1.00000) h(W,x) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) cre(U) des(x) 
 (   1.00000) h(V,Z) kdelta(I,K) cre(U) cre(Y) des(W) des(X) 
 (  -1.00000) h(X,Y) kdelta(I,K) cre(U) cre(Z) des(V) des(W) 
 (  -1.00000) kdelta(I,K) v(V,X,Y,x) cre(U) cre(Z) des(W) des(x) 
 (   1.00000) kdelta(I,K) v(V,X,Z,x) cre(U) cre(Y) des(W) des(x) 
 (  -1.00000) kdelta(I,K) v(V,x,Y,Z) cre(U) cre(x) des(W) des(X) 
 (  -2.00000) kdelta(I,K) v(i,X,i,Y) cre(U) cre(Z) des(V) des(W) 
 (  -2.00000) kdelta(I,K) v(i,X,i,Y) cre(U) cre(Z) des(V) des(W) 
 (  -1.00000) kdelta(I,K) v(X,x,Y,Z) cre(U) cre(x) des(V) des(W) 
 (  -2.00000) kdelta(I,K) v(i,X,i,Y) cre(U) cre(Z) des(V) des(W) 
 (  -2.00000) kdelta(I,K) v(i,X,i,Y) cre(U) cre(Z) des(V) des(W) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(V,Z) cre(U) cre(Y) des(W) des(X) 
 (   1.00000) e(K) kdelta(I,K) kdelta(X,Y) cre(U) cre(Z) des(V) des(W) 
 (   1.00000) h(W,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(Y) des(X) des(x) 
 (   1.00000) h(W,x) kdelta(I,K) kdelta(X,Y) cre(U) cre(Z) des(V) des(x) 
 (   1.00000) h(Y,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(X) 
 (  -1.00000) h(Z,x) kdelta(I,K) kdelta(X,Y) cre(U) cre(x) des(V) des(W) 
 (   0.50000) v(V,W,x,y) kdelta(I,K) kdelta(X,Y) cre(U) cre(Z) des(x) des(y) 
 (  -1.00000) v(V,x,Z,y) kdelta(I,K) kdelta(X,Y) cre(U) cre(x) des(W) des(y) 
 (  -1.00000) v(V,x,Z,y) kdelta(I,K) kdelta(X,Y) cre(U) cre(x) des(W) des(y) 
 (  -1.00000) v(W,X,x,y) kdelta(I,K) kdelta(V,Z) cre(U) cre(Y) des(x) des(y) 
 (  -1.00000) v(X,x,Y,y) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(y) 
 (  -1.00000) v(X,x,Y,y) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(y) 
 (   2.00000) v(i,Y,i,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(X) 
 (   2.00000) v(i,Y,i,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(X) 
 (   2.00000) v(i,Y,i,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(X) 
 (   2.00000) v(i,Y,i,x) kdelta(I,K) kdelta(V,Z) cre(U) cre(x) des(W) des(X) 
 (   1.00000) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) cre(U) cre(x) des(y) des(z) 
 (   0.50000) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) cre(U) cre(x) des(y) des(z) 
 (   1.00000) e(K) kdelta(I,K) cre(U) cre(Y) cre(Z) des(V) des(W) des(X) 
 (  -1.00000) h(W,x) kdelta(I,K) cre(U) cre(Y) cre(Z) des(V) des(X) des(x) 
 (   1.00000) h(Y,x) kdelta(I,K) cre(U) cre(Z) cre(x) des(V) des(W) des(X) 
 (  -1.00000) h(Z,x) kdelta(I,K) cre(U) cre(Y) cre(x) des(V) des(W) des(X) 
 (   0.50000) kdelta(I,K) v(V,W,x,y) cre(U) cre(Y) cre(Z) des(X) des(x) des(y) 
 (  -1.00000) kdelta(I,K) v(V,x,Y,y) cre(U) cre(Z) cre(x) des(W) des(X) des(y) 
 (   1.00000) kdelta(I,K) v(V,x,Z,y) cre(U) cre(Y) cre(x) des(W) des(X) des(y) 
 (   1.00000) kdelta(I,K) v(V,x,Z,y) cre(U) cre(Y) cre(x) des(W) des(X) des(y) 
 (   1.00000) kdelta(I,K) v(W,X,x,y) cre(U) cre(Y) cre(Z) des(V) des(x) des(y) 
 (  -1.00000) kdelta(I,K) v(X,x,Y,y) cre(U) cre(Z) cre(x) des(V) des(W) des(y) 
 (  -1.00000) kdelta(I,K) v(X,x,Y,y) cre(U) cre(Z) cre(x) des(V) des(W) des(y) 
 (   1.00000) kdelta(I,K) v(X,x,Z,y) cre(U) cre(Y) cre(x) des(V) des(W) des(y) 
 (  -1.00000) kdelta(I,K) v(Y,Z,x,y) cre(U) cre(x) cre(y) des(V) des(W) des(X) 
 (   2.00000) kdelta(I,K) v(i,Y,i,x) cre(U) cre(Z) cre(x) des(V) des(W) des(X) 
 (   2.00000) kdelta(I,K) v(i,Y,i,x) cre(U) cre(Z) cre(x) des(V) des(W) des(X) 
 (   2.00000) kdelta(I,K) v(i,Y,i,x) cre(U) cre(Z) cre(x) des(V) des(W) des(X) 
 (   2.00000) kdelta(I,K) v(i,Y,i,x) cre(U) cre(Z) cre(x) des(V) des(W) des(X) 
 (   1.00000) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) cre(U) cre(Y) cre(x) des(X) des(y) des(z) 
 (   1.00000) v(W,x,y,z) kdelta(I,K) kdelta(X,Y) cre(U) cre(Z) cre(x) des(V) des(y) des(z) 
 (   0.50000) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) cre(U) cre(Y) cre(x) des(X) des(y) des(z) 
 (   0.50000) v(W,x,y,z) kdelta(I,K) kdelta(X,Y) cre(U) cre(Z) cre(x) des(V) des(y) des(z) 
 (   0.50000) v(Y,x,y,z) kdelta(I,K) kdelta(V,Z) cre(U) cre(y) cre(z) des(W) des(X) des(x) 
 (   1.00000) v(Y,x,y,z) kdelta(I,K) kdelta(V,Z) cre(U) cre(y) cre(z) des(W) des(X) des(x) 
 (  -1.00000) v(Z,x,y,z) kdelta(I,K) kdelta(X,Y) cre(U) cre(y) cre(z) des(V) des(W) des(x) 
 (  -0.50000) v(Z,x,y,z) kdelta(I,K) kdelta(X,Y) cre(U) cre(y) cre(z) des(V) des(W) des(x) 
 (   1.00000) kdelta(I,K) v(W,x,y,z) cre(U) cre(Y) cre(Z) cre(x) des(V) des(X) des(y) des(z) 
 (   0.50000) kdelta(I,K) v(W,x,y,z) cre(U) cre(Y) cre(Z) cre(x) des(V) des(X) des(y) des(z) 
 (  -0.50000) kdelta(I,K) v(Y,x,y,z) cre(U) cre(Z) cre(y) cre(z) des(V) des(W) des(X) des(x) 
 (  -1.00000) kdelta(I,K) v(Y,x,y,z) cre(U) cre(Z) cre(y) cre(z) des(V) des(W) des(X) des(x) 
 (   1.00000) kdelta(I,K) v(Z,x,y,z) cre(U) cre(Y) cre(y) cre(z) des(V) des(W) des(X) des(x) 
 (   0.50000) kdelta(I,K) v(Z,x,y,z) cre(U) cre(Y) cre(y) cre(z) des(V) des(W) des(X) des(x) 

Total terms : 68
SQA automation time :  15.203 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 340 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

151 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   0.08333) e(K) kdelta(I,K) rdm(U,Y,Z,V,X,W) 
 (  -0.08333) e(K) kdelta(I,K) rdm(U,Y,Z,W,V,X) 
 (  -0.16667) e(K) kdelta(I,K) rdm(U,Y,Z,W,X,V) 
 (  -0.08333) e(K) kdelta(I,K) rdm(U,Y,Z,X,W,V) 
 (  -0.33333) h(V,Z) kdelta(I,K) rdm(U,Y,W,X) 
 (  -0.16667) h(V,Z) kdelta(I,K) rdm(U,Y,X,W) 
 (   0.16667) h(W,x) kdelta(I,K) rdm(U,Y,Z,V,X,x) 
 (   0.08333) h(W,x) kdelta(I,K) rdm(U,Y,Z,V,x,X) 
 (   0.08333) h(W,x) kdelta(I,K) rdm(U,Y,Z,X,V,x) 
 (  -0.08333) h(W,x) kdelta(I,K) rdm(U,Y,Z,x,X,V) 
 (   0.16667) h(X,Y) kdelta(I,K) rdm(U,Z,V,W) 
 (  -0.16667) h(X,Y) kdelta(I,K) rdm(U,Z,W,V) 
 (  -0.16667) h(Y,x) kdelta(I,K) rdm(U,Z,x,V,W,X) 
 (  -0.08333) h(Y,x) kdelta(I,K) rdm(U,Z,x,V,X,W) 
 (   0.08333) h(Y,x) kdelta(I,K) rdm(U,Z,x,W,V,X) 
 (  -0.08333) h(Y,x) kdelta(I,K) rdm(U,Z,x,X,W,V) 
 (  -0.08333) h(Z,x) kdelta(I,K) rdm(U,Y,x,V,X,W) 
 (   0.08333) h(Z,x) kdelta(I,K) rdm(U,Y,x,W,V,X) 
 (   0.16667) h(Z,x) kdelta(I,K) rdm(U,Y,x,W,X,V) 
 (   0.08333) h(Z,x) kdelta(I,K) rdm(U,Y,x,X,W,V) 
 (   0.50000) kdelta(I,K) v(V,Z,X,Y) rdm(U,W) 
 (  -0.33333) kdelta(I,K) v(V,Z,X,x) rdm(U,Y,W,x) 
 (  -0.16667) kdelta(I,K) v(V,Z,X,x) rdm(U,Y,x,W) 
 (  -0.33333) kdelta(I,K) v(V,Z,x,Y) rdm(U,x,W,X) 
 (  -0.16667) kdelta(I,K) v(V,Z,x,Y) rdm(U,x,X,W) 
 (  -0.33333) kdelta(I,K) v(V,Z,x,y) rdm(U,Y,x,W,X,y) 
 (  -0.16667) kdelta(I,K) v(V,Z,x,y) rdm(U,Y,x,X,W,y) 
 (  -0.08333) kdelta(I,K) v(V,x,W,y) rdm(U,Y,Z,X,y,x) 
 (   0.08333) kdelta(I,K) v(V,x,W,y) rdm(U,Y,Z,x,X,y) 
 (  -0.16667) kdelta(I,K) v(V,x,W,y) rdm(U,Y,Z,y,X,x) 
 (  -0.08333) kdelta(I,K) v(V,x,W,y) rdm(U,Y,Z,y,x,X) 
 (  -0.16667) kdelta(I,K) v(V,x,X,Y) rdm(U,Z,W,x) 
 (   0.16667) kdelta(I,K) v(V,x,X,Y) rdm(U,Z,x,W) 
 (   0.08333) kdelta(I,K) v(V,x,y,Y) rdm(U,Z,y,W,x,X) 
 (  -0.08333) kdelta(I,K) v(V,x,y,Y) rdm(U,Z,y,X,W,x) 
 (  -0.16667) kdelta(I,K) v(V,x,y,Y) rdm(U,Z,y,x,W,X) 
 (  -0.08333) kdelta(I,K) v(V,x,y,Y) rdm(U,Z,y,x,X,W) 
 (   0.16667) kdelta(I,K) v(V,x,y,Z) rdm(U,Y,y,W,X,x) 
 (   0.08333) kdelta(I,K) v(V,x,y,Z) rdm(U,Y,y,W,x,X) 
 (   0.08333) kdelta(I,K) v(V,x,y,Z) rdm(U,Y,y,X,W,x) 
 (  -0.08333) kdelta(I,K) v(V,x,y,Z) rdm(U,Y,y,x,X,W) 
 (   0.08333) kdelta(I,K) v(W,x,X,y) rdm(U,Y,Z,V,y,x) 
 (  -0.08333) kdelta(I,K) v(W,x,X,y) rdm(U,Y,Z,x,V,y) 
 (  -0.16667) kdelta(I,K) v(W,x,X,y) rdm(U,Y,Z,x,y,V) 
 (  -0.08333) kdelta(I,K) v(W,x,X,y) rdm(U,Y,Z,y,x,V) 
 (   0.13333) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,X,x,z) 
 (  -0.11667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,X,z,x) 
 (   0.05000) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,x,X,z) 
 (  -0.10000) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,x,z,X) 
 (  -0.11667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,z,X,x) 
 (  -0.10000) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,V,z,x,X) 
 (   0.12500) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,V,x,z) 
 (  -0.04167) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,V,z,x) 
 (   0.06667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,x,V,z) 
 (  -0.01667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,x,z,V) 
 (  -0.01667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,z,V,x) 
 (  -0.01667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,X,z,x,V) 
 (   0.05833) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,x,V,X,z) 
 (  -0.00833) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,x,V,z,X) 
 (   0.01667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,x,z,V,X) 
 (  -0.02500) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,z,V,X,x) 
 (  -0.00833) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,z,V,x,X) 
 (   0.01667) kdelta(I,K) v(W,x,y,z) rdm(U,Y,Z,y,z,x,V,X) 
 (   0.16667) kdelta(I,K) v(X,Y,x,Z) rdm(U,x,V,W) 
 (  -0.16667) kdelta(I,K) v(X,Y,x,Z) rdm(U,x,W,V) 
 (   0.16667) kdelta(I,K) v(X,Y,x,y) rdm(U,Z,x,V,W,y) 
 (  -0.16667) kdelta(I,K) v(X,Y,x,y) rdm(U,Z,x,W,V,y) 
 (  -0.16667) kdelta(I,K) v(X,x,y,Y) rdm(U,Z,y,V,W,x) 
 (  -0.08333) kdelta(I,K) v(X,x,y,Y) rdm(U,Z,y,V,x,W) 
 (   0.08333) kdelta(I,K) v(X,x,y,Y) rdm(U,Z,y,W,V,x) 
 (  -0.08333) kdelta(I,K) v(X,x,y,Y) rdm(U,Z,y,x,W,V) 
 (  -0.08333) kdelta(I,K) v(X,x,y,Z) rdm(U,Y,y,V,x,W) 
 (   0.08333) kdelta(I,K) v(X,x,y,Z) rdm(U,Y,y,W,V,x) 
 (   0.16667) kdelta(I,K) v(X,x,y,Z) rdm(U,Y,y,W,x,V) 
 (   0.08333) kdelta(I,K) v(X,x,y,Z) rdm(U,Y,y,x,W,V) 
 (  -0.08333) kdelta(I,K) v(Y,x,Z,y) rdm(U,x,y,V,X,W) 
 (   0.08333) kdelta(I,K) v(Y,x,Z,y) rdm(U,x,y,W,V,X) 
 (   0.16667) kdelta(I,K) v(Y,x,Z,y) rdm(U,x,y,W,X,V) 
 (   0.08333) kdelta(I,K) v(Y,x,Z,y) rdm(U,x,y,X,W,V) 
 (  -0.09167) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,W,X,y) 
 (  -0.00833) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,W,y,X) 
 (  -0.00833) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,X,W,y) 
 (  -0.00833) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,X,y,W) 
 (  -0.02500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,y,W,X) 
 (  -0.02500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,V,y,X,W) 
 (   0.12500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,V,X,y) 
 (  -0.04167) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,V,y,X) 
 (   0.02500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,X,V,y) 
 (  -0.05833) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,X,y,V) 
 (  -0.07500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,y,V,X) 
 (  -0.07500) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,W,y,X,V) 
 (   0.10000) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,X,V,W,y) 
 (   0.01667) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,X,V,y,W) 
 (  -0.01667) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,X,y,V,W) 
 (  -0.01667) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,X,y,W,V) 
 (   0.01667) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,y,V,W,X) 
 (   0.01667) kdelta(I,K) v(Y,x,y,z) rdm(U,Z,x,z,y,V,X,W) 
 (   0.00833) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,W,X,y) 
 (   0.09167) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,W,y,X) 
 (  -0.07500) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,X,W,y) 
 (   0.09167) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,X,y,W) 
 (   0.06667) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,y,W,X) 
 (   0.06667) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,V,y,X,W) 
 (  -0.04167) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,V,X,y) 
 (  -0.04167) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,V,y,X) 
 (   0.05833) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,X,V,y) 
 (  -0.02500) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,X,y,V) 
 (  -0.05000) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,y,V,X) 
 (  -0.05000) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,W,y,X,V) 
 (  -0.10000) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,X,V,W,y) 
 (  -0.01667) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,X,V,y,W) 
 (  -0.02500) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,X,y,V,W) 
 (  -0.02500) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,X,y,W,V) 
 (  -0.01667) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,y,V,W,X) 
 (  -0.01667) kdelta(I,K) v(Z,x,y,z) rdm(U,Y,x,z,y,V,X,W) 
 (  -0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,V,W) 
 (   0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,W,V) 
 (   0.33333) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,W,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,X,W) 
 (  -0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,W,V,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,X,W,V) 
 (   0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,V,W) 
 (  -0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,W,V) 
 (  -0.66667) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,W,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,X,W) 
 (   0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,W,V,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,X,W,V) 
 (  -0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,V,W) 
 (   0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,W,V) 
 (   0.33333) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,W,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,X,W) 
 (  -0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,W,V,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,X,W,V) 
 (   0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,V,W) 
 (  -0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,W,V) 
 (  -0.66667) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,W,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,X,W) 
 (   0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,W,V,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,X,W,V) 
 (   0.33333) e(K) kdelta(I,K) kdelta(V,Z) rdm(U,Y,W,X) 
 (   0.16667) e(K) kdelta(I,K) kdelta(V,Z) rdm(U,Y,X,W) 
 (  -0.16667) e(K) kdelta(I,K) kdelta(X,Y) rdm(U,Z,V,W) 
 (   0.16667) e(K) kdelta(I,K) kdelta(X,Y) rdm(U,Z,W,V) 
 (   0.50000) h(V,Z) kdelta(I,K) kdelta(X,Y) rdm(U,W) 
 (   0.16667) h(W,x) kdelta(I,K) kdelta(V,Z) rdm(U,Y,X,x) 
 (   0.33333) h(W,x) kdelta(I,K) kdelta(V,Z) rdm(U,Y,x,X) 
 (  -0.16667) h(W,x) kdelta(I,K) kdelta(X,Y) rdm(U,Z,V,x) 
 (   0.16667) h(W,x) kdelta(I,K) kdelta(X,Y) rdm(U,Z,x,V) 
 (   0.50000) h(X,Y) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (  -0.33333) h(Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (  -0.16667) h(Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (   0.16667) h(Z,x) kdelta(I,K) kdelta(X,Y) rdm(U,x,V,W) 
 (  -0.16667) h(Z,x) kdelta(I,K) kdelta(X,Y) rdm(U,x,W,V) 
 (   0.50000) v(V,Z,x,y) kdelta(I,K) kdelta(X,Y) rdm(U,x,W,y) 
 (  -0.16667) v(V,x,W,y) kdelta(I,K) kdelta(X,Y) rdm(U,Z,x,y) 
 (   0.16667) v(V,x,W,y) kdelta(I,K) kdelta(X,Y) rdm(U,Z,y,x) 
 (  -0.16667) v(V,x,y,Z) kdelta(I,K) kdelta(X,Y) rdm(U,y,W,x) 
 (   0.16667) v(V,x,y,Z) kdelta(I,K) kdelta(X,Y) rdm(U,y,x,W) 
 (   0.33333) v(W,x,X,y) kdelta(I,K) kdelta(V,Z) rdm(U,Y,x,y) 
 (   0.16667) v(W,x,X,y) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,x) 
 (  -0.16667) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,X,z,x) 
 (   0.16667) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,x,X,z) 
 (  -0.16667) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,x,z,X) 
 (  -0.16667) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,z,X,x) 
 (  -0.16667) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,Y,y,z,x,X) 
 (  -0.16667) v(W,x,y,z) kdelta(I,K) kdelta(X,Y) rdm(U,Z,y,V,x,z) 
 (   0.16667) v(W,x,y,z) kdelta(I,K) kdelta(X,Y) rdm(U,Z,y,x,V,z) 
 (   0.50000) v(X,Y,x,y) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,y) 
 (  -0.33333) v(X,x,y,Y) kdelta(I,K) kdelta(V,Z) rdm(U,y,W,x) 
 (  -0.16667) v(X,x,y,Y) kdelta(I,K) kdelta(V,Z) rdm(U,y,x,W) 
 (  -0.33333) v(Y,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,x,z,W,X,y) 
 (  -0.16667) v(Y,x,y,z) kdelta(I,K) kdelta(V,Z) rdm(U,x,z,X,W,y) 
 (   0.16667) v(Z,x,y,z) kdelta(I,K) kdelta(X,Y) rdm(U,x,z,V,W,y) 
 (  -0.16667) v(Z,x,y,z) kdelta(I,K) kdelta(X,Y) rdm(U,x,z,W,V,y) 
 (  -1.00000) v(i,X,Y,i) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (   0.66667) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (   0.33333) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (   2.00000) v(i,i,X,Y) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (  -1.33333) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (  -0.66667) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (  -1.00000) v(i,X,Y,i) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (   0.66667) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (   0.33333) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (   2.00000) v(i,i,X,Y) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (  -1.33333) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (  -0.66667) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (  -0.50000) e(K) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) rdm(U,W) 
 (  -0.50000) h(W,x) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) rdm(U,x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,K) kdelta(V,Z) kdelta(X,Y) rdm(U,y,x,z) 

Total spin-integrated terms: 68
Total spin-adapted terms: 189
Spin-adaptation automation time :  197.698 seconds
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

36 terms removed:
 (  -0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,V,W) 
 (   0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,W,V) 
 (   0.33333) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,W,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,X,W) 
 (  -0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,W,V,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,X,W,V) 
 (   0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,V,W) 
 (  -0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,W,V) 
 (  -0.66667) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,W,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,X,W) 
 (   0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,W,V,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,X,W,V) 
 (  -0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,V,W) 
 (   0.33333) kdelta(I,K) v(i,X,Y,i) rdm(U,Z,W,V) 
 (   0.33333) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,W,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,V,X,W) 
 (  -0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,W,V,X) 
 (   0.16667) kdelta(I,K) v(i,Y,x,i) rdm(U,Z,x,X,W,V) 
 (   0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,V,W) 
 (  -0.66667) kdelta(I,K) v(i,i,X,Y) rdm(U,Z,W,V) 
 (  -0.66667) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,W,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,V,X,W) 
 (   0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,W,V,X) 
 (  -0.33333) kdelta(I,K) v(i,i,Y,x) rdm(U,Z,x,X,W,V) 
 (  -1.00000) v(i,X,Y,i) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (   0.66667) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (   0.33333) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (   2.00000) v(i,i,X,Y) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (  -1.33333) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (  -0.66667) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (  -1.00000) v(i,X,Y,i) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (   0.66667) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (   0.33333) v(i,Y,x,i) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
 (   2.00000) v(i,i,X,Y) kdelta(I,K) kdelta(V,Z) rdm(U,W) 
 (  -1.33333) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,W,X) 
 (  -0.66667) v(i,i,Y,x) kdelta(I,K) kdelta(V,Z) rdm(U,x,X,W) 
----------------------------------------------------------------------------------------------------
Remaining terms: 153

Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------- genEinsum equations ----------------------------------------

precond_caaa__abba  = 1/12 * einsum('I,II,UYZVXW->IUVXWZY', e_cvs, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('I,II,UYZWVX->IUVXWZY', e_cvs, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('I,II,UYZWXV->IUVXWZY', e_cvs, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('I,II,UYZXWV->IUVXWZY', e_cvs, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('VZ,II,UYWX->IUVXWZY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('VZ,II,UYXW->IUVXWZY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Wx,II,UYZVXx->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('Wx,II,UYZVxX->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('Wx,II,UYZXVx->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('Wx,II,UYZxXV->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('XY,II,UZVW->IUVXWZY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('XY,II,UZWV->IUVXWZY', h_aa, np.identity(ncvs), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Yx,II,UZxVWX->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('Yx,II,UZxVXW->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('Yx,II,UZxWVX->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('Yx,II,UZxXWV->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('Zx,II,UYxVXW->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('Zx,II,UYxWVX->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Zx,II,UYxWXV->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('Zx,II,UYxXWV->IUVXWZY', h_aa, np.identity(ncvs), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/2 * einsum('II,VZXY,UW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ca, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('II,VZXx,UYWx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VZXx,UYxW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('II,VZxY,UxWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VZxY,UxXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('II,VZxy,UYxWXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VZxy,UYxXWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,VxWy,UYZXyx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,VxWy,UYZxXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VxWy,UYZyXx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,VxWy,UYZyxX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VxXY,UZWx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,VxXY,UZxW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,VxyY,UZyWxX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,VxyY,UZyXWx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,VxyY,UZyxWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,VxyY,UZyxXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,VxyZ,UYyWXx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,VxyZ,UYyWxX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,VxyZ,UYyXWx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,VxyZ,UYyxXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,WxXy,UYZVyx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,WxXy,UYZxVy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,WxXy,UYZxyV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,WxXy,UYZyxV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 2/15 * einsum('II,Wxyz,UYZyVXxz->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 7/60 * einsum('II,Wxyz,UYZyVXzx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/20 * einsum('II,Wxyz,UYZyVxXz->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/10 * einsum('II,Wxyz,UYZyVxzX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 7/60 * einsum('II,Wxyz,UYZyVzXx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/10 * einsum('II,Wxyz,UYZyVzxX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/8 * einsum('II,Wxyz,UYZyXVxz->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/24 * einsum('II,Wxyz,UYZyXVzx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/15 * einsum('II,Wxyz,UYZyXxVz->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Wxyz,UYZyXxzV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Wxyz,UYZyXzVx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Wxyz,UYZyXzxV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 7/120 * einsum('II,Wxyz,UYZyxVXz->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/120 * einsum('II,Wxyz,UYZyxVzX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/60 * einsum('II,Wxyz,UYZyxzVX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Wxyz,UYZyzVXx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/120 * einsum('II,Wxyz,UYZyzVxX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/60 * einsum('II,Wxyz,UYZyzxVX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,XYxZ,UxVW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,XYxZ,UxWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,XYxy,UZxVWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,XYxy,UZxWVy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('II,XxyY,UZyVWx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,XxyY,UZyVxW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,XxyY,UZyWVx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,XxyY,UZyxWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,XxyZ,UYyVxW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,XxyZ,UYyWVx->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,XxyZ,UYyWxV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,XxyZ,UYyxWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/12 * einsum('II,YxZy,UxyVXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,YxZy,UxyWVX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('II,YxZy,UxyWXV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/12 * einsum('II,YxZy,UxyXWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 11/120 * einsum('II,Yxyz,UZxzVWXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/120 * einsum('II,Yxyz,UZxzVWyX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/120 * einsum('II,Yxyz,UZxzVXWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/120 * einsum('II,Yxyz,UZxzVXyW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Yxyz,UZxzVyWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Yxyz,UZxzVyXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/8 * einsum('II,Yxyz,UZxzWVXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/24 * einsum('II,Yxyz,UZxzWVyX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/40 * einsum('II,Yxyz,UZxzWXVy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 7/120 * einsum('II,Yxyz,UZxzWXyV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 3/40 * einsum('II,Yxyz,UZxzWyVX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 3/40 * einsum('II,Yxyz,UZxzWyXV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/10 * einsum('II,Yxyz,UZxzXVWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/60 * einsum('II,Yxyz,UZxzXVyW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Yxyz,UZxzXyVW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Yxyz,UZxzXyWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/60 * einsum('II,Yxyz,UZxzyVWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/60 * einsum('II,Yxyz,UZxzyVXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/120 * einsum('II,Zxyz,UYxzVWXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 11/120 * einsum('II,Zxyz,UYxzVWyX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 3/40 * einsum('II,Zxyz,UYxzVXWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 11/120 * einsum('II,Zxyz,UYxzVXyW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/15 * einsum('II,Zxyz,UYxzVyWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/15 * einsum('II,Zxyz,UYxzVyXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/24 * einsum('II,Zxyz,UYxzWVXy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/24 * einsum('II,Zxyz,UYxzWVyX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 7/120 * einsum('II,Zxyz,UYxzWXVy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Zxyz,UYxzWXyV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/20 * einsum('II,Zxyz,UYxzWyVX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/20 * einsum('II,Zxyz,UYxzWyXV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/10 * einsum('II,Zxyz,UYxzXVWy->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Zxyz,UYxzXVyW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Zxyz,UYxzXyVW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/40 * einsum('II,Zxyz,UYxzXyWV->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Zxyz,UYxzyVWX->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba -= 1/60 * einsum('II,Zxyz,UYxzyVXW->IUVXWZY', np.identity(ncvs), v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
precond_caaa__abba += 1/3 * einsum('I,II,VZ,UYWX->IUVXWZY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('I,II,VZ,UYXW->IUVXWZY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('I,II,XY,UZVW->IUVXWZY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('I,II,XY,UZWV->IUVXWZY', e_cvs, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/2 * einsum('VZ,II,XY,UW->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Wx,II,VZ,UYXx->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/3 * einsum('Wx,II,VZ,UYxX->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wx,II,XY,UZVx->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Wx,II,XY,UZxV->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/2 * einsum('XY,II,VZ,UW->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ca, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('Yx,II,VZ,UxWX->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Yx,II,VZ,UxXW->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Zx,II,XY,UxVW->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Zx,II,XY,UxWV->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/2 * einsum('VZxy,II,XY,UxWy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('VxWy,II,XY,UZxy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('VxWy,II,XY,UZyx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('VxyZ,II,XY,UyWx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('VxyZ,II,XY,UyxW->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/3 * einsum('WxXy,II,VZ,UYxy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('WxXy,II,VZ,UYyx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wxyz,II,VZ,UYyXzx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Wxyz,II,VZ,UYyxXz->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wxyz,II,VZ,UYyxzX->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wxyz,II,VZ,UYyzXx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wxyz,II,VZ,UYyzxX->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Wxyz,II,XY,UZyVxz->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Wxyz,II,XY,UZyxVz->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/2 * einsum('XYxy,II,VZ,UxWy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('XxyY,II,VZ,UyWx->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('XxyY,II,VZ,UyxW->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
precond_caaa__abba -= 1/3 * einsum('Yxyz,II,VZ,UxzWXy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Yxyz,II,VZ,UxzXWy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba += 1/6 * einsum('Zxyz,II,XY,UxzVWy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/6 * einsum('Zxyz,II,XY,UxzWVy->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), rdm_cccaaa, optimize = einsum_type)
precond_caaa__abba -= 1/2 * einsum('I,II,VZ,XY,UW->IUVXWZY', e_cvs, np.identity(ncvs), np.identity(ncas), np.identity(ncas), rdm_ca, optimize = einsum_type)
precond_caaa__abba -= 1/2 * einsum('Wx,II,VZ,XY,Ux->IUVXWZY', h_aa, np.identity(ncvs), np.identity(ncas), np.identity(ncas), rdm_ca, optimize = einsum_type)
precond_caaa__abba -= 1/2 * einsum('Wxyz,II,VZ,XY,Uyxz->IUVXWZY', v_aaaa, np.identity(ncvs), np.identity(ncas), np.identity(ncas), rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 214.41 seconds.
