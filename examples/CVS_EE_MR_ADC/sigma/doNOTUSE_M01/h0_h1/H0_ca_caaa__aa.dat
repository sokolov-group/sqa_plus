
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


---------------------------- Spin-Adapted CVS-EE: Sigma H0 CAAA_CA (aa) ----------------------------


## Generating operators ...


## Left operator terms:
 (   0.50000) X_aaaa(i,x,y,z) cre(i) cre(x) des(z) des(y) 
 (   1.00000) X_abab(i,x,y,z) cre(i) cre(x) des(z) des(y) 
 (   1.00000) X_baba(i,x,y,z) cre(i) cre(x) des(z) des(y) 
 (   0.50000) X_bbbb(i,x,y,z) cre(i) cre(x) des(z) des(y) 
 (   1.00000) X_baba(i,x,y,z) cre(i) cre(x) des(z) des(y) 
 (   1.00000) X_abab(i,x,y,z) cre(i) cre(x) des(z) des(y) 

## Right operator terms:
 (   1.00000) cre(W) des(K) 

----------------------------------------- Hamiltonian (0) ------------------------------------------

Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(0), h(0)^\dag] ...

## Calculating [h(1), [H(0), h(0)^\dag]] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) X_aaaa(K,x,W,z) e(K) cre(x) des(z) 
 (   1.00000) X_aaaa(K,x,w,z) h(W,w) cre(x) des(z) 
 (   0.50000) X_aaaa(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (  -1.00000) X_abab(K,x,W,z) e(K) cre(x) des(z) 
 (   1.00000) X_abab(K,x,y,W) e(K) cre(x) des(y) 
 (   1.00000) X_abab(K,x,w,z) h(W,w) cre(x) des(z) 
 (  -1.00000) X_abab(K,x,y,w) h(W,w) cre(x) des(y) 
 (   1.00000) X_abab(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
 (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
 (   1.00000) X_abab(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
 (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
 (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
 (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
 (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
 (  -0.50000) X_aaaa(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
 (  -0.50000) X_aaaa(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
 (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
 (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_abab(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
 (  -1.00000) X_abab(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
 (  -1.00000) X_abab(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_abab(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
 (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
 (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
 (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
 (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
 (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
 (  -0.25000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
 (  -0.50000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
 (  -0.50000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
 (  -1.00000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
 (  -0.50000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
 (  -1.00000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 

Total terms : 53
SQA automation time :  0.264 seconds
Converting Sigma vector to spin-adapted formulation ...
----------------------------------------------------------------------------------------------------
Converting custom vector to spin-adapted formulation...

<<<  (  -1.00000) X_aaaa(K,x,W,z) e(K) cre(x) des(z) 
-->  (  -1.00000) X_aaaa(K,x,W,z) e(K) cre(x) des(z)  (factor = 1.00000)

<<<  (   1.00000) X_aaaa(K,x,w,z) h(W,w) cre(x) des(z) 
-->  (   1.00000) X_aaaa(K,x,w,z) h(W,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   0.50000) X_aaaa(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
-->  (   0.50000) X_aaaa(K,x,w,u) v(W,v,w,u) cre(x) des(v)  (factor = 1.00000)

<<<  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_aaaa(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,W,z) e(K) cre(x) des(z) 
-->  (  -1.00000) X_abab(K,x,W,z) e(K) cre(x) des(z)  (factor = 1.00000)

<<<  (   1.00000) X_abab(K,x,y,W) e(K) cre(x) des(y) 
-->  (  -1.00000) X_abab(K,x,W,y) e(K) cre(x) des(y)  (factor = -1.00000)

<<<  (   1.00000) X_abab(K,x,w,z) h(W,w) cre(x) des(z) 
-->  (   1.00000) X_abab(K,x,w,z) h(W,w) cre(x) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,y,w) h(W,w) cre(x) des(y) 
-->  (   1.00000) X_abab(K,x,w,y) h(W,w) cre(x) des(y)  (factor = -1.00000)

<<<  (   1.00000) X_abab(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
-->  (   1.00000) X_abab(K,x,w,u) v(W,v,w,u) cre(x) des(v)  (factor = 1.00000)

<<<  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z) 
-->  (   2.00000) X_abab(K,x,w,z) v(k,W,k,w) cre(x) des(z)  (factor = 1.00000)

<<<  (   1.00000) X_abab(K,x,w,u) v(W,v,w,u) cre(x) des(v) 
-->  (  -1.00000) X_abab(K,x,u,w) v(W,v,w,u) cre(x) des(v)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
-->  (   2.00000) X_abab(K,x,w,y) v(k,W,k,w) cre(x) des(y)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
-->  (   2.00000) X_abab(K,x,w,y) v(k,W,k,w) cre(x) des(y)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
-->  (   2.00000) X_abab(K,x,w,y) v(k,W,k,w) cre(x) des(y)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,w) v(k,W,k,w) cre(x) des(y) 
-->  (   2.00000) X_abab(K,x,w,y) v(k,W,k,w) cre(x) des(y)  (factor = -1.00000)

<<<  (  -0.50000) X_aaaa(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
-->  (  -0.50000) X_aaaa(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z)  (factor = 1.00000)

<<<  (  -0.50000) X_aaaa(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
-->  (  -0.50000) X_aaaa(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
-->  (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
-->  (  -1.00000) X_aaaa(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -1.00000) X_aaaa(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
-->  (  -1.00000) X_abab(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) e(K) cre(W) cre(x) des(y) des(z) 
-->  (   1.00000) X_abab(K,x,z,y) e(K) cre(W) cre(x) des(y) des(z)  (factor = -1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
-->  (  -1.00000) X_abab(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) h(W,w) cre(x) cre(w) des(y) des(z) 
-->  (   1.00000) X_abab(K,x,z,y) h(W,w) cre(x) cre(w) des(y) des(z)  (factor = -1.00000)

<<<  (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
-->  (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
-->  (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,w,z) v(W,u,w,v) cre(x) cre(v) des(z) des(u) 
-->  (   1.00000) X_abab(K,x,z,w) v(W,u,w,v) cre(x) cre(v) des(z) des(u)  (factor = -1.00000)

<<<  (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
-->  (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u)  (factor = 1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = 1.00000)

<<<  (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
-->  (  -1.00000) X_abab(K,x,w,y) v(W,u,w,v) cre(x) cre(v) des(y) des(u)  (factor = -1.00000)

<<<  (   1.00000) X_abab(K,x,y,w) v(W,u,w,v) cre(x) cre(v) des(y) des(u) 
-->  (  -1.00000) X_abab(K,x,w,y) v(W,u,w,v) cre(x) cre(v) des(y) des(u)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (   2.00000) X_abab(K,x,z,y) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (   2.00000) X_abab(K,x,z,y) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (   2.00000) X_abab(K,x,z,y) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = -1.00000)

<<<  (  -2.00000) X_abab(K,x,y,z) v(k,W,k,w) cre(x) cre(w) des(y) des(z) 
-->  (   2.00000) X_abab(K,x,z,y) v(k,W,k,w) cre(x) cre(w) des(y) des(z)  (factor = -1.00000)

<<<  (  -0.25000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (  -0.25000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = 1.00000)

<<<  (  -0.50000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (  -0.50000) X_aaaa(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = 1.00000)

<<<  (  -0.50000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (  -0.50000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = 1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (  -1.00000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = 1.00000)

<<<  (  -0.50000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (   0.50000) X_abab(K,x,z,y) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = -1.00000)

<<<  (  -1.00000) X_abab(K,x,y,z) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w) 
-->  (   1.00000) X_abab(K,x,z,y) v(W,w,u,v) cre(x) cre(u) cre(v) des(y) des(z) des(w)  (factor = -1.00000)
Done!

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 132 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

78 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) X_aaaa(K,x,W,z) e(K) rdm(x,z) 
 (   0.08333) X_aaaa(K,x,y,z) e(K) rdm(W,x,y,z) 
 (  -0.08333) X_aaaa(K,x,y,z) e(K) rdm(W,x,z,y) 
 (   0.50000) X_aaaa(K,x,w,z) h(W,w) rdm(x,z) 
 (   0.08333) X_aaaa(K,x,y,z) h(W,w) rdm(x,w,y,z) 
 (  -0.08333) X_aaaa(K,x,y,z) h(W,w) rdm(x,w,z,y) 
 (  -0.25000) X_aaaa(K,x,w,u) v(W,u,v,w) rdm(x,v) 
 (   0.25000) X_aaaa(K,x,w,u) v(W,w,v,u) rdm(x,v) 
 (   0.16667) X_aaaa(K,x,w,z) v(W,u,v,w) rdm(x,u,v,z) 
 (  -0.16667) X_aaaa(K,x,w,z) v(W,u,v,w) rdm(x,u,z,v) 
 (   0.50000) X_aaaa(K,x,w,z) v(W,w,u,v) rdm(x,v,z,u) 
 (  -1.00000) X_aaaa(K,x,w,z) v(k,W,w,k) rdm(x,z) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,k,W,w) rdm(x,z) 
 (  -1.00000) X_aaaa(K,x,w,z) v(k,W,w,k) rdm(x,z) 
 (   2.00000) X_aaaa(K,x,w,z) v(k,k,W,w) rdm(x,z) 
 (   0.08333) X_aaaa(K,x,y,z) v(W,w,u,v) rdm(x,w,v,y,z,u) 
 (  -0.08333) X_aaaa(K,x,y,z) v(W,w,u,v) rdm(x,w,v,z,y,u) 
 (  -0.16667) X_aaaa(K,x,y,z) v(k,W,w,k) rdm(x,w,y,z) 
 (   0.16667) X_aaaa(K,x,y,z) v(k,W,w,k) rdm(x,w,z,y) 
 (   0.33333) X_aaaa(K,x,y,z) v(k,k,W,w) rdm(x,w,y,z) 
 (  -0.33333) X_aaaa(K,x,y,z) v(k,k,W,w) rdm(x,w,z,y) 
 (  -0.16667) X_aaaa(K,x,y,z) v(k,W,w,k) rdm(x,w,y,z) 
 (   0.16667) X_aaaa(K,x,y,z) v(k,W,w,k) rdm(x,w,z,y) 
 (   0.33333) X_aaaa(K,x,y,z) v(k,k,W,w) rdm(x,w,y,z) 
 (  -0.33333) X_aaaa(K,x,y,z) v(k,k,W,w) rdm(x,w,z,y) 
 (  -1.00000) X_abab(K,x,W,y) e(K) rdm(x,y) 
 (   0.33333) X_abab(K,x,z,y) e(K) rdm(W,x,y,z) 
 (   0.66667) X_abab(K,x,z,y) e(K) rdm(W,x,z,y) 
 (   1.00000) X_abab(K,x,w,y) h(W,w) rdm(x,y) 
 (  -0.66667) X_abab(K,x,z,y) h(W,w) rdm(x,w,y,z) 
 (  -0.33333) X_abab(K,x,z,y) h(W,w) rdm(x,w,z,y) 
 (   1.00000) X_abab(K,x,w,u) v(W,w,v,u) rdm(x,v) 
 (  -0.33333) X_abab(K,x,w,y) v(W,u,v,w) rdm(x,u,v,y) 
 (  -0.66667) X_abab(K,x,w,y) v(W,u,v,w) rdm(x,u,y,v) 
 (   1.00000) X_abab(K,x,w,y) v(W,w,u,v) rdm(x,v,y,u) 
 (  -2.00000) X_abab(K,x,w,y) v(k,W,w,k) rdm(x,y) 
 (   4.00000) X_abab(K,x,w,y) v(k,k,W,w) rdm(x,y) 
 (  -2.00000) X_abab(K,x,w,y) v(k,W,w,k) rdm(x,y) 
 (   4.00000) X_abab(K,x,w,y) v(k,k,W,w) rdm(x,y) 
 (  -0.66667) X_abab(K,x,y,w) v(W,u,v,w) rdm(x,u,v,y) 
 (  -0.33333) X_abab(K,x,y,w) v(W,u,v,w) rdm(x,u,y,v) 
 (   0.33333) X_abab(K,x,z,y) v(W,w,u,v) rdm(x,w,v,u,y,z) 
 (   0.33333) X_abab(K,x,z,y) v(W,w,u,v) rdm(x,w,v,u,z,y) 
 (   0.33333) X_abab(K,x,z,y) v(W,w,u,v) rdm(x,w,v,y,u,z) 
 (  -0.33333) X_abab(K,x,z,y) v(W,w,u,v) rdm(x,w,v,y,z,u) 
 (   0.33333) X_abab(K,x,z,y) v(W,w,u,v) rdm(x,w,v,z,u,y) 
 (   1.33333) X_abab(K,x,z,y) v(k,W,w,k) rdm(x,w,y,z) 
 (   0.66667) X_abab(K,x,z,y) v(k,W,w,k) rdm(x,w,z,y) 
 (  -2.66667) X_abab(K,x,z,y) v(k,k,W,w) rdm(x,w,y,z) 
 (  -1.33333) X_abab(K,x,z,y) v(k,k,W,w) rdm(x,w,z,y) 
 (   1.33333) X_abab(K,x,z,y) v(k,W,w,k) rdm(x,w,y,z) 
 (   0.66667) X_abab(K,x,z,y) v(k,W,w,k) rdm(x,w,z,y) 
 (  -2.66667) X_abab(K,x,z,y) v(k,k,W,w) rdm(x,w,y,z) 
 (  -1.33333) X_abab(K,x,z,y) v(k,k,W,w) rdm(x,w,z,y) 

Total spin-integrated terms: 53
Total spin-adapted terms: 54
Spin-adaptation automation time :  4.683 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

24 terms removed:
 (  -1.00000) X_aaaa(K,x,y,z) v(i,W,y,i) rdm(x,z) 
 (   2.00000) X_aaaa(K,x,y,z) v(i,i,W,y) rdm(x,z) 
 (  -1.00000) X_aaaa(K,x,y,z) v(i,W,y,i) rdm(x,z) 
 (   2.00000) X_aaaa(K,x,y,z) v(i,i,W,y) rdm(x,z) 
 (  -0.16667) X_aaaa(K,x,y,z) v(i,W,w,i) rdm(x,w,y,z) 
 (   0.16667) X_aaaa(K,x,y,z) v(i,W,w,i) rdm(x,w,z,y) 
 (   0.33333) X_aaaa(K,x,y,z) v(i,i,W,w) rdm(x,w,y,z) 
 (  -0.33333) X_aaaa(K,x,y,z) v(i,i,W,w) rdm(x,w,z,y) 
 (  -0.16667) X_aaaa(K,x,y,z) v(i,W,w,i) rdm(x,w,y,z) 
 (   0.16667) X_aaaa(K,x,y,z) v(i,W,w,i) rdm(x,w,z,y) 
 (   0.33333) X_aaaa(K,x,y,z) v(i,i,W,w) rdm(x,w,y,z) 
 (  -0.33333) X_aaaa(K,x,y,z) v(i,i,W,w) rdm(x,w,z,y) 
 (  -2.00000) X_abab(K,x,y,z) v(i,W,y,i) rdm(x,z) 
 (   4.00000) X_abab(K,x,y,z) v(i,i,W,y) rdm(x,z) 
 (  -2.00000) X_abab(K,x,y,z) v(i,W,y,i) rdm(x,z) 
 (   4.00000) X_abab(K,x,y,z) v(i,i,W,y) rdm(x,z) 
 (   1.33333) X_abab(K,x,y,z) v(i,W,w,i) rdm(x,w,z,y) 
 (   0.66667) X_abab(K,x,y,z) v(i,W,w,i) rdm(x,w,y,z) 
 (  -2.66667) X_abab(K,x,y,z) v(i,i,W,w) rdm(x,w,z,y) 
 (  -1.33333) X_abab(K,x,y,z) v(i,i,W,w) rdm(x,w,y,z) 
 (   1.33333) X_abab(K,x,y,z) v(i,W,w,i) rdm(x,w,z,y) 
 (   0.66667) X_abab(K,x,y,z) v(i,W,w,i) rdm(x,w,y,z) 
 (  -2.66667) X_abab(K,x,y,z) v(i,i,W,w) rdm(x,w,z,y) 
 (  -1.33333) X_abab(K,x,y,z) v(i,i,W,w) rdm(x,w,y,z) 
----------------------------------------------------------------------------------------------------
Remaining terms: 30


--------------------------------------- genEinsum equations ----------------------------------------

sigma_KW_aa =- 1/2 * einsum('KxWy,K,xy->KW', X_aaaa, e_cvs, rdm_ca, optimize = einsum_type)
sigma_KW_aa += 1/12 * einsum('Kxyz,K,Wxyz->KW', X_aaaa, e_cvs, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/12 * einsum('Kxyz,K,Wxzy->KW', X_aaaa, e_cvs, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += 1/2 * einsum('Kxyz,Wy,xz->KW', X_aaaa, h_aa, rdm_ca, optimize = einsum_type)
sigma_KW_aa += 1/12 * einsum('Kxyz,Ww,xwyz->KW', X_aaaa, h_aa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/12 * einsum('Kxyz,Ww,xwzy->KW', X_aaaa, h_aa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/4 * einsum('Kxyz,Wzwy,xw->KW', X_aaaa, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_aa += 1/4 * einsum('Kxyz,Wywz,xw->KW', X_aaaa, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_aa += 1/6 * einsum('Kxyz,Wwuy,xwuz->KW', X_aaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/6 * einsum('Kxyz,Wwuy,xwzu->KW', X_aaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += 1/2 * einsum('Kxyz,Wywu,xuzw->KW', X_aaaa, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += 1/12 * einsum('Kxyz,Wwuv,xwvyzu->KW', X_aaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa -= 1/12 * einsum('Kxyz,Wwuv,xwvzyu->KW', X_aaaa, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa -= einsum('KxWy,K,xy->KW', X_abab, e_cvs, rdm_ca, optimize = einsum_type)
sigma_KW_aa += 1/3 * einsum('Kxyz,K,Wxzy->KW', X_abab, e_cvs, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += 2/3 * einsum('Kxyz,K,Wxyz->KW', X_abab, e_cvs, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += einsum('Kxyz,Wy,xz->KW', X_abab, h_aa, rdm_ca, optimize = einsum_type)
sigma_KW_aa -= 2/3 * einsum('Kxyz,Ww,xwzy->KW', X_abab, h_aa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/3 * einsum('Kxyz,Ww,xwyz->KW', X_abab, h_aa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += einsum('Kxyz,Wywz,xw->KW', X_abab, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_aa -= 1/3 * einsum('Kxyz,Wwuy,xwuz->KW', X_abab, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 2/3 * einsum('Kxyz,Wwuy,xwzu->KW', X_abab, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += einsum('Kxyz,Wywu,xuzw->KW', X_abab, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 2/3 * einsum('Kxyz,Wwuz,xwuy->KW', X_abab, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa -= 1/3 * einsum('Kxyz,Wwuz,xwyu->KW', X_abab, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_aa += 1/3 * einsum('Kxyz,Wwuv,xwvuzy->KW', X_abab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa += 1/3 * einsum('Kxyz,Wwuv,xwvuyz->KW', X_abab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa += 1/3 * einsum('Kxyz,Wwuv,xwvzuy->KW', X_abab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa -= 1/3 * einsum('Kxyz,Wwuv,xwvzyu->KW', X_abab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KW_aa += 1/3 * einsum('Kxyz,Wwuv,xwvyuz->KW', X_abab, v_aaaa, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 6.03 seconds.
