
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------- Spin-Adapted CVS-EE: Sigma H0 CAEA_CA (baba) ---------------------------


## Generating operators ...


## Right operator terms:
 (   1.00000) X_aa(i,x) cre(x) des(i) 
 (   1.00000) X_aa(i,x) cre(x) des(i) 

## Left operator terms:
 (   1.00000) cre(K) cre(W) des(Z) des(B) 

----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(1), h(0)^\dag] ...

## Calculating [h^(1), [H(1), h(0)^\dag]] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) X_aa(K,x) v(x,y,B,Z) cre(W) des(y) 
 (   1.00000) X_aa(j,Z) v(K,y,j,B) cre(W) des(y) 
 (   1.00000) X_aa(K,x) e(B) t1(x,y,B,Z) cre(W) des(y) 
 (   1.00000) X_aa(K,x) h(Z,y) t1(x,z,B,y) cre(W) des(z) 
 (  -1.00000) X_aa(K,x) h(y,z) t1(x,y,B,Z) cre(W) des(z) 
 (  -1.00000) X_aa(K,x) h(x,y) t1(y,z,B,Z) cre(W) des(z) 
 (   1.00000) X_aa(K,x) t1(y,B) v(Z,y,x,z) cre(W) des(z) 
 (  -1.00000) X_aa(K,x) t1(y,z,B,Z) v(x,w,y,z) cre(W) des(w) 
 (  -2.00000) X_aa(K,x) t1(x,y,B,Z) v(j,y,j,z) cre(W) des(z) 
 (  -2.00000) X_aa(K,x) t1(x,y,B,Z) v(j,y,j,z) cre(W) des(z) 
 (  -2.00000) X_aa(K,x) t1(x,y,B,Z) v(j,y,j,z) cre(W) des(z) 
 (  -2.00000) X_aa(K,x) t1(x,y,B,Z) v(j,y,j,z) cre(W) des(z) 
 (  -1.00000) X_aa(K,x) v(x,y,B,z) cre(W) cre(z) des(Z) des(y) 
 (  -1.00000) X_aa(j,x) v(K,y,j,B) cre(W) cre(x) des(Z) des(y) 
 (  -1.00000) X_aa(K,x) e(B) t1(x,y,B,z) cre(W) cre(z) des(Z) des(y) 
 (   1.00000) X_aa(K,x) h(y,z) t1(x,y,B,w) cre(W) cre(w) des(Z) des(z) 
 (  -1.00000) X_aa(K,x) h(y,z) t1(x,w,B,y) cre(W) cre(z) des(Z) des(w) 
 (   1.00000) X_aa(K,x) h(x,y) t1(y,z,B,w) cre(W) cre(w) des(Z) des(z) 
 (   1.00000) X_aa(K,x) t1(y,B) v(x,z,y,w) cre(W) cre(w) des(Z) des(z) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(Z,y,x,u) cre(W) cre(w) des(z) des(u) 
 (   0.50000) X_aa(K,x) t1(y,z,B,w) v(Z,u,x,w) cre(W) cre(u) des(y) des(z) 
 (   1.00000) X_aa(K,x) t1(y,z,B,Z) v(x,w,y,u) cre(W) cre(u) des(z) des(w) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(Z,y,x,u) cre(W) cre(w) des(z) des(u) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(Z,u,x,w) cre(W) cre(u) des(y) des(z) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(x,u,y,z) cre(W) cre(w) des(Z) des(u) 
 (   1.00000) X_aa(K,x) t1(y,z,B,Z) v(x,w,y,u) cre(W) cre(u) des(z) des(w) 
 (   1.00000) X_aa(K,x) t1(y,z,B,Z) v(x,w,y,u) cre(W) cre(u) des(z) des(w) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(Z,y,x,u) cre(W) cre(w) des(z) des(u) 
 (   0.50000) X_aa(K,x) t1(x,y,B,Z) v(y,z,w,u) cre(W) cre(z) des(w) des(u) 
 (   1.00000) X_aa(K,x) t1(x,y,B,Z) v(y,z,w,u) cre(W) cre(z) des(w) des(u) 
 (   1.00000) X_aa(K,x) t1(x,y,B,z) v(Z,y,w,u) cre(W) cre(z) des(w) des(u) 
 (  -1.00000) X_aa(K,x) t1(x,y,B,z) v(Z,w,z,u) cre(W) cre(w) des(y) des(u) 
 (  -1.00000) X_aa(K,x) t1(x,y,B,z) v(Z,w,z,u) cre(W) cre(w) des(y) des(u) 
 (   2.00000) X_aa(K,x) t1(x,y,B,z) v(j,y,j,w) cre(W) cre(z) des(Z) des(w) 
 (   2.00000) X_aa(K,x) t1(x,y,B,z) v(j,y,j,w) cre(W) cre(z) des(Z) des(w) 
 (   2.00000) X_aa(K,x) t1(x,y,B,z) v(j,y,j,w) cre(W) cre(z) des(Z) des(w) 
 (   2.00000) X_aa(K,x) t1(x,y,B,z) v(j,y,j,w) cre(W) cre(z) des(Z) des(w) 
 (   0.50000) X_aa(K,x) t1(y,z,B,w) v(x,w,u,v) cre(W) cre(u) cre(v) des(Z) des(y) des(z) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(x,u,y,v) cre(W) cre(w) cre(v) des(Z) des(z) des(u) 
 (   0.50000) X_aa(K,x) t1(y,z,B,w) v(x,w,u,v) cre(W) cre(u) cre(v) des(Z) des(y) des(z) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(x,u,y,v) cre(W) cre(w) cre(v) des(Z) des(z) des(u) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(x,u,y,v) cre(W) cre(w) cre(v) des(Z) des(z) des(u) 
 (   1.00000) X_aa(K,x) t1(y,z,B,w) v(x,u,y,v) cre(W) cre(w) cre(v) des(Z) des(z) des(u) 
 (   0.50000) X_aa(K,x) t1(x,y,B,z) v(y,w,u,v) cre(W) cre(z) cre(w) des(Z) des(u) des(v) 
 (   1.00000) X_aa(K,x) t1(x,y,B,z) v(y,w,u,v) cre(W) cre(z) cre(w) des(Z) des(u) des(v) 
 (  -1.00000) X_aa(K,x) t1(x,y,B,z) v(z,w,u,v) cre(W) cre(u) cre(v) des(Z) des(y) des(w) 
 (  -0.50000) X_aa(K,x) t1(x,y,B,z) v(z,w,u,v) cre(W) cre(u) cre(v) des(Z) des(y) des(w) 

Total terms : 47
SQA automation time :  4.014 seconds
----------------------------------------------------------------------------------------------------

----------------------- Converting Sigma vector to spin-adapted formulation ------------------------

----------------------------------------------------------------------------------------------------

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 146 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

65 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.50000) X_aa(K,x) v(x,Z,y,B) rdm(W,y) 
 (   0.16667) X_aa(K,x) v(x,y,z,B) rdm(W,y,Z,z) 
 (   0.33333) X_aa(K,x) v(x,y,z,B) rdm(W,y,z,Z) 
 (   0.50000) X_aa(j,Z) v(K,j,y,B) rdm(W,y) 
 (  -0.16667) X_aa(j,x) v(K,j,y,B) rdm(W,x,Z,y) 
 (  -0.33333) X_aa(j,x) v(K,j,y,B) rdm(W,x,y,Z) 
 (  -0.50000) X_aa(K,x) e(B) t1(x,y,Z,B) rdm(W,y) 
 (   0.16667) X_aa(K,x) e(B) t1(x,y,z,B) rdm(W,z,Z,y) 
 (   0.33333) X_aa(K,x) e(B) t1(x,y,z,B) rdm(W,z,y,Z) 
 (  -0.50000) X_aa(K,x) h(Z,y) t1(x,z,y,B) rdm(W,z) 
 (   0.50000) X_aa(K,x) h(x,y) t1(y,z,Z,B) rdm(W,z) 
 (  -0.16667) X_aa(K,x) h(x,y) t1(y,z,w,B) rdm(W,w,Z,z) 
 (  -0.33333) X_aa(K,x) h(x,y) t1(y,z,w,B) rdm(W,w,z,Z) 
 (   0.16667) X_aa(K,x) h(y,z) t1(x,w,y,B) rdm(W,z,Z,w) 
 (   0.33333) X_aa(K,x) h(y,z) t1(x,w,y,B) rdm(W,z,w,Z) 
 (   0.50000) X_aa(K,x) h(y,z) t1(x,y,Z,B) rdm(W,z) 
 (  -0.16667) X_aa(K,x) h(y,z) t1(x,y,w,B) rdm(W,w,Z,z) 
 (  -0.33333) X_aa(K,x) h(y,z) t1(x,y,w,B) rdm(W,w,z,Z) 
 (   2.00000) X_aa(K,x) t1(x,y,Z,B) v(j,j,y,z) rdm(W,z) 
 (  -1.00000) X_aa(K,x) t1(x,y,Z,B) v(j,y,z,j) rdm(W,z) 
 (   2.00000) X_aa(K,x) t1(x,y,Z,B) v(j,j,y,z) rdm(W,z) 
 (  -1.00000) X_aa(K,x) t1(x,y,Z,B) v(j,y,z,j) rdm(W,z) 
 (   0.50000) X_aa(K,x) t1(x,y,Z,B) v(y,z,w,u) rdm(W,w,z,u) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(Z,w,u,z) rdm(W,u,w,y) 
 (   0.33333) X_aa(K,x) t1(x,y,z,B) v(Z,w,u,z) rdm(W,u,y,w) 
 (  -0.33333) X_aa(K,x) t1(x,y,z,B) v(Z,w,y,u) rdm(W,z,u,w) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(Z,w,y,u) rdm(W,z,w,u) 
 (  -0.50000) X_aa(K,x) t1(x,y,z,B) v(Z,z,w,u) rdm(W,w,y,u) 
 (  -0.66667) X_aa(K,x) t1(x,y,z,B) v(j,j,y,w) rdm(W,z,Z,w) 
 (  -1.33333) X_aa(K,x) t1(x,y,z,B) v(j,j,y,w) rdm(W,z,w,Z) 
 (   0.33333) X_aa(K,x) t1(x,y,z,B) v(j,y,w,j) rdm(W,z,Z,w) 
 (   0.66667) X_aa(K,x) t1(x,y,z,B) v(j,y,w,j) rdm(W,z,w,Z) 
 (  -0.66667) X_aa(K,x) t1(x,y,z,B) v(j,j,y,w) rdm(W,z,Z,w) 
 (  -1.33333) X_aa(K,x) t1(x,y,z,B) v(j,j,y,w) rdm(W,z,w,Z) 
 (   0.33333) X_aa(K,x) t1(x,y,z,B) v(j,y,w,j) rdm(W,z,Z,w) 
 (   0.66667) X_aa(K,x) t1(x,y,z,B) v(j,y,w,j) rdm(W,z,w,Z) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(y,w,u,v) rdm(W,z,u,Z,v,w) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(y,w,u,v) rdm(W,z,u,v,Z,w) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(y,w,u,v) rdm(W,z,u,v,w,Z) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(y,w,u,v) rdm(W,z,u,w,Z,v) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(y,w,u,v) rdm(W,z,u,w,v,Z) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(z,w,u,v) rdm(W,w,v,Z,u,y) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(z,w,u,v) rdm(W,w,v,u,Z,y) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(z,w,u,v) rdm(W,w,v,u,y,Z) 
 (   0.16667) X_aa(K,x) t1(x,y,z,B) v(z,w,u,v) rdm(W,w,v,y,Z,u) 
 (  -0.16667) X_aa(K,x) t1(x,y,z,B) v(z,w,u,v) rdm(W,w,v,y,u,Z) 
 (   0.50000) X_aa(K,x) t1(y,B) v(Z,x,y,z) rdm(W,z) 
 (  -0.16667) X_aa(K,x) t1(y,B) v(x,z,w,y) rdm(W,z,Z,w) 
 (  -0.33333) X_aa(K,x) t1(y,B) v(x,z,w,y) rdm(W,z,w,Z) 
 (  -0.16667) X_aa(K,x) t1(y,z,Z,B) v(x,w,u,y) rdm(W,w,u,z) 
 (  -0.33333) X_aa(K,x) t1(y,z,Z,B) v(x,w,u,y) rdm(W,w,z,u) 
 (  -0.33333) X_aa(K,x) t1(y,z,Z,B) v(x,w,u,z) rdm(W,w,u,y) 
 (  -0.16667) X_aa(K,x) t1(y,z,Z,B) v(x,w,u,z) rdm(W,w,y,u) 
 (   0.50000) X_aa(K,x) t1(y,z,Z,B) v(x,y,w,u) rdm(W,u,z,w) 
 (   0.50000) X_aa(K,x) t1(y,z,Z,B) v(x,y,w,z) rdm(W,w) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(Z,u,y,x) rdm(W,w,u,z) 
 (  -0.33333) X_aa(K,x) t1(y,z,w,B) v(Z,u,y,x) rdm(W,w,z,u) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(Z,w,u,x) rdm(W,u,y,z) 
 (   0.33333) X_aa(K,x) t1(y,z,w,B) v(Z,w,u,x) rdm(W,u,z,y) 
 (  -0.50000) X_aa(K,x) t1(y,z,w,B) v(Z,x,u,w) rdm(W,u,z,y) 
 (   0.50000) X_aa(K,x) t1(y,z,w,B) v(Z,x,y,u) rdm(W,w,z,u) 
 (   0.50000) X_aa(K,x) t1(y,z,w,B) v(Z,x,z,u) rdm(W,w,u,y) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,y) rdm(W,w,u,Z,v,z) 
 (  -0.33333) X_aa(K,x) t1(y,z,w,B) v(x,u,v,y) rdm(W,w,u,z,v,Z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,z) rdm(W,w,u,Z,v,y) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,z) rdm(W,w,u,v,Z,y) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,z) rdm(W,w,u,v,y,Z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,z) rdm(W,w,u,y,Z,v) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,v,z) rdm(W,w,u,y,v,Z) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,w,v) rdm(W,u,v,Z,y,z) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,w,v) rdm(W,u,v,y,Z,z) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,w,v) rdm(W,u,v,y,z,Z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,w,v) rdm(W,u,v,z,Z,y) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,u,w,v) rdm(W,u,v,z,y,Z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,v) rdm(W,w,v,Z,u,z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,v) rdm(W,w,v,u,Z,z) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,v) rdm(W,w,v,u,z,Z) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,v) rdm(W,w,v,z,Z,u) 
 (   0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,v) rdm(W,w,v,z,u,Z) 
 (  -0.16667) X_aa(K,x) t1(y,z,w,B) v(x,y,u,z) rdm(W,w,Z,u) 
 (  -0.33333) X_aa(K,x) t1(y,z,w,B) v(x,y,u,z) rdm(W,w,u,Z) 

Total spin-integrated terms: 47
Total spin-adapted terms: 81
Spin-adaptation automation time :  15.157 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

12 terms removed:
 (   2.00000) X_aa(K,x) t1(x,y,Z,B) v(i,i,y,z) rdm(W,z) 
 (  -1.00000) X_aa(K,x) t1(x,y,Z,B) v(i,y,z,i) rdm(W,z) 
 (   2.00000) X_aa(K,x) t1(x,y,Z,B) v(i,i,y,z) rdm(W,z) 
 (  -1.00000) X_aa(K,x) t1(x,y,Z,B) v(i,y,z,i) rdm(W,z) 
 (  -0.66667) X_aa(K,x) t1(x,y,z,B) v(i,i,y,w) rdm(W,z,Z,w) 
 (  -1.33333) X_aa(K,x) t1(x,y,z,B) v(i,i,y,w) rdm(W,z,w,Z) 
 (   0.33333) X_aa(K,x) t1(x,y,z,B) v(i,y,w,i) rdm(W,z,Z,w) 
 (   0.66667) X_aa(K,x) t1(x,y,z,B) v(i,y,w,i) rdm(W,z,w,Z) 
 (  -0.66667) X_aa(K,x) t1(x,y,z,B) v(i,i,y,w) rdm(W,z,Z,w) 
 (  -1.33333) X_aa(K,x) t1(x,y,z,B) v(i,i,y,w) rdm(W,z,w,Z) 
 (   0.33333) X_aa(K,x) t1(x,y,z,B) v(i,y,w,i) rdm(W,z,Z,w) 
 (   0.66667) X_aa(K,x) t1(x,y,z,B) v(i,y,w,i) rdm(W,z,w,Z) 
----------------------------------------------------------------------------------------------------
Remaining terms: 69


--------------------------------------- genEinsum equations ----------------------------------------

sigma_KWBZ_baba =- 1/2 * einsum('Kx,xZyB,Wy->KWBZ', X_aa, v_aaae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,WyZz->KWBZ', X_aa, v_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/3 * einsum('Kx,xyzB,WyzZ->KWBZ', X_aa, v_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('iZ,KixB,Wx->KWBZ', X_aa, v_xxae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('ix,KiyB,WxZy->KWBZ', X_aa, v_xxae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('ix,KiyB,WxyZ->KWBZ', X_aa, v_xxae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/2 * einsum('Kx,B,xyZB,Wy->KWBZ', X_aa, e_extern, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,B,xyzB,WzZy->KWBZ', X_aa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/3 * einsum('Kx,B,xyzB,WzyZ->KWBZ', X_aa, e_extern, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/2 * einsum('Kx,Zy,xzyB,Wz->KWBZ', X_aa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,xy,yzZB,Wz->KWBZ', X_aa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xy,yzwB,WwZz->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,xy,yzwB,WwzZ->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yz,xwyB,WzZw->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/3 * einsum('Kx,yz,xwyB,WzwZ->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yz,xyZB,Wz->KWBZ', X_aa, h_aa, t1_aaae, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yz,xywB,WwZz->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yz,xywB,WwzZ->KWBZ', X_aa, h_aa, t1_aaae, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,xyZB,yzwu,Wwzu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,Zwuz,Wuwy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/3 * einsum('Kx,xyzB,Zwuz,Wuyw->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,xyzB,Zwyu,Wzuw->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,Zwyu,Wzwu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/2 * einsum('Kx,xyzB,Zzwu,Wwyu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,ywuv,WzuZvw->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,ywuv,WzuvZw->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,ywuv,WzuvwZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,ywuv,WzuwZv->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,ywuv,WzuwvZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,zwuv,WwvZuy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,zwuv,WwvuZy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,zwuv,WwvuyZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,xyzB,zwuv,WwvyZu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,xyzB,zwuv,WwvyuZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yB,Zxyz,Wz->KWBZ', X_aa, t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yB,xzwy,WzZw->KWBZ', X_aa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yB,xzwy,WzwZ->KWBZ', X_aa, t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzZB,xwuy,Wwuz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yzZB,xwuy,Wwzu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yzZB,xwuz,Wwuy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzZB,xwuz,Wwyu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yzZB,xywu,Wuzw->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yzZB,xywz,Ww->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,Zuyx,Wwuz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yzwB,Zuyx,Wwzu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,Zwux,Wuyz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/3 * einsum('Kx,yzwB,Zwux,Wuzy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/2 * einsum('Kx,yzwB,Zxuw,Wuzy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yzwB,Zxyu,Wwzu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/2 * einsum('Kx,yzwB,Zxzu,Wwuy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuvy,WwuZvz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yzwB,xuvy,WwuzvZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xuvz,WwuZvy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xuvz,WwuvZy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuvz,WwuvyZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xuvz,WwuyZv->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xuvz,WwuyvZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuwv,WuvZyz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuwv,WuvyZz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuwv,WuvyzZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xuwv,WuvzZy->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xuwv,WuvzyZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xyuv,WwvZuz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xyuv,WwvuZz->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xyuv,WwvuzZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xyuv,WwvzZu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba += 1/6 * einsum('Kx,yzwB,xyuv,WwvzuZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/6 * einsum('Kx,yzwB,xyuz,WwZu->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KWBZ_baba -= 1/3 * einsum('Kx,yzwB,xyuz,WwuZ->KWBZ', X_aa, t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 323.20 seconds.
