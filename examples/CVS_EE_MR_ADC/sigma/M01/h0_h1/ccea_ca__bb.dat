
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


---------------------------- Spin-Adapted CVS-EE: Sigma H1 CCEA_CA (bb) ----------------------------


## Generating operators ...


## Left operator terms:
 (   0.50000) X_aaaa(i,j,a,x) cre(i) cre(j) des(x) des(a) 
 (   1.00000) X_abab(i,j,a,x) cre(i) cre(j) des(x) des(a) 
 (   0.50000) X_bbbb(i,j,a,x) cre(i) cre(j) des(x) des(a) 
 (   1.00000) X_abab(i,j,a,x) cre(i) cre(j) des(x) des(a) 

## Right operator terms:
 (   1.00000) cre(W) des(K) 

----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(1), h(0)^\dag] ...

## Calculating [h(1), [H(1), h(0)^\dag]] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) X_abab(K,k,c,w) v(k,W,w,c) 
 (  -1.00000) X_abab(k,K,c,w) v(k,W,w,c) 
 (   1.00000) X_abab(k,l,c,W) v(k,l,K,c) 
 (   1.00000) X_bbbb(K,k,c,w) v(k,W,w,c) 
 (   0.50000) X_bbbb(k,l,c,W) v(k,l,K,c) 
 (   1.00000) X_abab(K,k,c,w) e(k) t1(k,W,c,w) 
 (  -1.00000) X_abab(K,k,c,w) e(c) t1(k,W,c,w) 
 (  -1.00000) X_abab(k,K,c,w) e(k) t1(k,W,c,w) 
 (   1.00000) X_abab(k,K,c,w) e(c) t1(k,W,c,w) 
 (   1.00000) X_abab(K,k,c,w) h(W,u) t1(k,u,c,w) 
 (  -1.00000) X_abab(K,k,c,w) h(w,u) t1(k,W,c,u) 
 (  -1.00000) X_abab(k,K,c,w) h(W,u) t1(k,u,c,w) 
 (   1.00000) X_abab(k,K,c,w) h(w,u) t1(k,W,c,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(l,w,l,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(l,w,l,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(l,w,l,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(l,w,l,u) 
 (   1.00000) X_bbbb(K,k,c,w) e(k) t1(k,W,c,w) 
 (  -1.00000) X_bbbb(K,k,c,w) e(c) t1(k,W,c,w) 
 (   1.00000) X_bbbb(K,k,c,w) h(W,u) t1(k,u,c,w) 
 (  -1.00000) X_bbbb(K,k,c,w) h(w,u) t1(k,W,c,u) 
 (  -1.00000) X_abab(K,k,c,x) v(k,W,w,c) cre(w) des(x) 
 (   1.00000) X_abab(k,K,c,x) v(k,W,w,c) cre(w) des(x) 
 (  -1.00000) X_abab(k,l,c,x) v(k,l,K,c) cre(W) des(x) 
 (  -1.00000) X_bbbb(K,k,c,x) v(k,W,w,c) cre(w) des(x) 
 (  -0.50000) X_bbbb(k,l,c,x) v(k,l,K,c) cre(W) des(x) 
 (  -1.00000) X_abab(K,k,c,x) e(k) t1(k,W,c,w) cre(w) des(x) 
 (   1.00000) X_abab(K,k,c,x) e(c) t1(k,W,c,w) cre(w) des(x) 
 (   1.00000) X_abab(k,K,c,x) e(k) t1(k,W,c,w) cre(w) des(x) 
 (  -1.00000) X_abab(k,K,c,x) e(c) t1(k,W,c,w) cre(w) des(x) 
 (  -1.00000) X_abab(K,k,c,x) h(W,w) t1(k,w,c,u) cre(u) des(x) 
 (   1.00000) X_abab(K,k,c,x) h(w,u) t1(k,W,c,w) cre(u) des(x) 
 (   1.00000) X_abab(k,K,c,x) h(W,w) t1(k,w,c,u) cre(u) des(x) 
 (  -1.00000) X_abab(k,K,c,x) h(w,u) t1(k,W,c,w) cre(u) des(x) 
 (  -1.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (  -1.00000) X_abab(K,k,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (   1.00000) X_abab(K,k,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (   1.00000) X_abab(K,k,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (  -1.00000) X_abab(K,k,c,w) t1(k,u,c,v) v(W,v,w,s) cre(s) des(u) 
 (   1.00000) X_abab(K,k,c,w) t1(k,u,c,v) v(W,s,w,u) cre(v) des(s) 
 (   2.00000) X_abab(K,k,c,x) t1(k,W,c,w) v(l,w,l,u) cre(u) des(x) 
 (   2.00000) X_abab(K,k,c,x) t1(k,W,c,w) v(l,w,l,u) cre(u) des(x) 
 (   2.00000) X_abab(K,k,c,x) t1(k,W,c,w) v(l,w,l,u) cre(u) des(x) 
 (   2.00000) X_abab(K,k,c,x) t1(k,W,c,w) v(l,w,l,u) cre(u) des(x) 
 (   1.00000) X_abab(k,K,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (   1.00000) X_abab(k,K,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (   1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,v,w,s) cre(s) des(u) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,s,w,u) cre(v) des(s) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (   1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,v,w,s) cre(s) des(u) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,s,w,u) cre(v) des(s) 
 (  -1.00000) X_bbbb(K,k,c,x) e(k) t1(k,W,c,w) cre(w) des(x) 
 (   1.00000) X_bbbb(K,k,c,x) e(c) t1(k,W,c,w) cre(w) des(x) 
 (  -1.00000) X_bbbb(K,k,c,x) h(W,w) t1(k,w,c,u) cre(u) des(x) 
 (   1.00000) X_bbbb(K,k,c,x) h(w,u) t1(k,W,c,w) cre(u) des(x) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,W,c,u) v(w,v,u,s) cre(v) des(s) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,v,w,s) cre(s) des(u) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,s,w,u) cre(v) des(s) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,w) v(W,v,u,s) cre(s) des(v) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,v,w,s) cre(s) des(u) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,s,w,u) cre(v) des(s) 
 (  -0.50000) X_abab(K,k,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (  -1.00000) X_abab(K,k,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (  -1.00000) X_abab(K,k,c,x) t1(k,w,c,u) v(W,u,v,s) cre(v) cre(s) des(x) des(w) 
 (   1.00000) X_abab(K,k,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (   1.00000) X_abab(K,k,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (   1.00000) X_abab(k,K,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (   0.50000) X_abab(k,K,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (   1.00000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,u,v,s) cre(v) cre(s) des(x) des(w) 
 (  -1.00000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (   0.50000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,u,v,s) cre(v) cre(s) des(x) des(w) 
 (  -1.00000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (  -1.00000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (  -1.00000) X_bbbb(K,k,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (  -0.50000) X_bbbb(K,k,c,x) t1(k,W,c,w) v(w,u,v,s) cre(v) cre(s) des(x) des(u) 
 (  -1.00000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,u,v,s) cre(v) cre(s) des(x) des(w) 
 (   1.00000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (  -0.50000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,u,v,s) cre(v) cre(s) des(x) des(w) 
 (   1.00000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 
 (   1.00000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,v,w,s) cre(u) cre(s) des(x) des(v) 

Total terms : 83
SQA automation time :  10.919 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------
 >>> 83 spin-integrated terms must be processed...

 >>> removing the symmetries of non-RDM spin-integrated tensors...
 >>> symmetry removal complete.
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting user-defined tensors to spin-adapted formulation ...
>>> converting Sigma vector to spin-adapted formulation ...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 176 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

66 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) X_abab(K,k,c,w) v(k,w,W,c) 
 (   1.00000) X_abab(k,K,c,w) v(k,c,W,w) 
 (  -1.00000) X_abab(k,l,c,W) v(l,K,k,c) 
 (  -1.00000) X_bbbb(K,k,c,w) v(k,c,W,w) 
 (   1.00000) X_bbbb(K,k,c,w) v(k,w,W,c) 
 (   0.50000) X_bbbb(k,l,c,W) v(k,K,l,c) 
 (  -0.50000) X_bbbb(k,l,c,W) v(l,K,k,c) 
 (   1.00000) X_abab(K,k,c,w) e(c) t1(k,W,w,c) 
 (  -1.00000) X_abab(K,k,c,w) e(k) t1(k,W,w,c) 
 (   1.00000) X_abab(k,K,c,w) e(c) t1(k,W,c,w) 
 (  -1.00000) X_abab(k,K,c,w) e(k) t1(k,W,c,w) 
 (  -1.00000) X_abab(K,k,c,w) h(W,u) t1(k,u,w,c) 
 (   1.00000) X_abab(K,k,c,w) h(w,u) t1(k,W,u,c) 
 (  -1.00000) X_abab(k,K,c,w) h(W,u) t1(k,u,c,w) 
 (   1.00000) X_abab(k,K,c,w) h(w,u) t1(k,W,c,u) 
 (   4.00000) X_abab(K,k,c,w) t1(k,W,u,c) v(l,l,w,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,u,c) v(l,w,u,l) 
 (   4.00000) X_abab(K,k,c,w) t1(k,W,u,c) v(l,l,w,u) 
 (  -2.00000) X_abab(K,k,c,w) t1(k,W,u,c) v(l,w,u,l) 
 (  -0.50000) X_abab(K,k,c,x) v(k,w,W,c) rdm(x,w) 
 (  -0.50000) X_abab(k,K,c,x) v(k,c,W,w) rdm(x,w) 
 (   0.50000) X_abab(k,l,c,x) v(l,K,k,c) rdm(W,x) 
 (  -1.00000) X_bbbb(K,k,c,w) e(c) t1(k,W,c,w) 
 (   1.00000) X_bbbb(K,k,c,w) e(c) t1(k,W,w,c) 
 (   1.00000) X_bbbb(K,k,c,w) e(k) t1(k,W,c,w) 
 (  -1.00000) X_bbbb(K,k,c,w) e(k) t1(k,W,w,c) 
 (   1.00000) X_bbbb(K,k,c,w) h(W,u) t1(k,u,c,w) 
 (  -1.00000) X_bbbb(K,k,c,w) h(W,u) t1(k,u,w,c) 
 (  -1.00000) X_bbbb(K,k,c,w) h(w,u) t1(k,W,c,u) 
 (   1.00000) X_bbbb(K,k,c,w) h(w,u) t1(k,W,u,c) 
 (   0.50000) X_bbbb(K,k,c,x) v(k,c,W,w) rdm(x,w) 
 (  -0.50000) X_bbbb(K,k,c,x) v(k,w,W,c) rdm(x,w) 
 (  -0.25000) X_bbbb(k,l,c,x) v(k,K,l,c) rdm(W,x) 
 (   0.25000) X_bbbb(k,l,c,x) v(l,K,k,c) rdm(W,x) 
 (  -0.50000) X_abab(K,k,c,x) e(c) t1(k,W,w,c) rdm(x,w) 
 (   0.50000) X_abab(K,k,c,x) e(k) t1(k,W,w,c) rdm(x,w) 
 (  -0.50000) X_abab(k,K,c,x) e(c) t1(k,W,c,w) rdm(x,w) 
 (   0.50000) X_abab(k,K,c,x) e(k) t1(k,W,c,w) rdm(x,w) 
 (   0.50000) X_abab(K,k,c,x) h(W,w) t1(k,w,u,c) rdm(x,u) 
 (  -0.50000) X_abab(K,k,c,x) h(w,u) t1(k,W,w,c) rdm(x,u) 
 (   0.50000) X_abab(k,K,c,x) h(W,w) t1(k,w,c,u) rdm(x,u) 
 (  -0.50000) X_abab(k,K,c,x) h(w,u) t1(k,W,c,w) rdm(x,u) 
 (   1.00000) X_abab(K,k,c,w) t1(k,W,u,c) v(w,u,v,s) rdm(v,s) 
 (  -0.50000) X_abab(K,k,c,w) t1(k,W,u,c) v(w,v,s,u) rdm(s,v) 
 (  -0.50000) X_abab(K,k,c,w) t1(k,u,v,c) v(W,s,v,w) rdm(u,s) 
 (   0.50000) X_abab(K,k,c,w) t1(k,u,v,c) v(W,u,s,w) rdm(v,s) 
 (  -1.00000) X_abab(K,k,c,w) t1(k,u,w,c) v(W,u,v,s) rdm(v,s) 
 (   0.50000) X_abab(K,k,c,w) t1(k,u,w,c) v(W,v,s,u) rdm(s,v) 
 (  -2.00000) X_abab(K,k,c,x) t1(k,W,w,c) v(l,l,w,u) rdm(x,u) 
 (   1.00000) X_abab(K,k,c,x) t1(k,W,w,c) v(l,w,u,l) rdm(x,u) 
 (  -2.00000) X_abab(K,k,c,x) t1(k,W,w,c) v(l,l,w,u) rdm(x,u) 
 (   1.00000) X_abab(K,k,c,x) t1(k,W,w,c) v(l,w,u,l) rdm(x,u) 
 (  -0.50000) X_abab(K,k,c,x) t1(k,W,w,c) v(w,u,v,s) rdm(x,v,u,s) 
 (  -0.33333) X_abab(K,k,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,u,v) 
 (  -0.16667) X_abab(K,k,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,v,u) 
 (   0.33333) X_abab(K,k,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,s,v) 
 (   0.16667) X_abab(K,k,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,v,s) 
 (   0.50000) X_abab(K,k,c,x) t1(k,w,u,c) v(W,w,v,s) rdm(x,v,u,s) 
 (   1.00000) X_abab(k,K,c,w) t1(k,W,c,u) v(w,u,v,s) rdm(v,s) 
 (  -0.50000) X_abab(k,K,c,w) t1(k,W,c,u) v(w,v,s,u) rdm(s,v) 
 (  -0.50000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,s,v,w) rdm(u,s) 
 (   0.50000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,u,s,w) rdm(v,s) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,w,s,u) rdm(v,s) 
 (   1.00000) X_abab(k,K,c,w) t1(k,u,c,v) v(W,w,v,s) rdm(u,s) 
 (  -1.00000) X_abab(k,K,c,w) t1(k,u,c,w) v(W,u,v,s) rdm(v,s) 
 (   0.50000) X_abab(k,K,c,w) t1(k,u,c,w) v(W,v,s,u) rdm(s,v) 
 (   0.50000) X_abab(k,K,c,w) t1(k,u,v,c) v(W,w,s,u) rdm(v,s) 
 (  -0.50000) X_abab(k,K,c,w) t1(k,u,v,c) v(W,w,v,s) rdm(u,s) 
 (  -0.50000) X_abab(k,K,c,x) t1(k,W,c,w) v(w,u,v,s) rdm(x,v,u,s) 
 (   0.50000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,v,s,w) rdm(x,s,v,u) 
 (  -0.50000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,v,u,s) rdm(x,w,v,s) 
 (   0.50000) X_abab(k,K,c,x) t1(k,w,c,u) v(W,w,v,s) rdm(x,v,u,s) 
 (  -0.16667) X_abab(k,K,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,u,v) 
 (  -0.33333) X_abab(k,K,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,v,u) 
 (   0.16667) X_abab(k,K,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,s,v) 
 (   0.33333) X_abab(k,K,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,v,s) 
 (   0.50000) X_bbbb(K,k,c,x) e(c) t1(k,W,c,w) rdm(x,w) 
 (  -0.50000) X_bbbb(K,k,c,x) e(c) t1(k,W,w,c) rdm(x,w) 
 (  -0.50000) X_bbbb(K,k,c,x) e(k) t1(k,W,c,w) rdm(x,w) 
 (   0.50000) X_bbbb(K,k,c,x) e(k) t1(k,W,w,c) rdm(x,w) 
 (  -0.50000) X_bbbb(K,k,c,x) h(W,w) t1(k,w,c,u) rdm(x,u) 
 (   0.50000) X_bbbb(K,k,c,x) h(W,w) t1(k,w,u,c) rdm(x,u) 
 (   0.50000) X_bbbb(K,k,c,x) h(w,u) t1(k,W,c,w) rdm(x,u) 
 (  -0.50000) X_bbbb(K,k,c,x) h(w,u) t1(k,W,w,c) rdm(x,u) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,W,c,u) v(w,u,v,s) rdm(v,s) 
 (   0.50000) X_bbbb(K,k,c,w) t1(k,W,c,u) v(w,v,s,u) rdm(s,v) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,W,u,c) v(w,u,v,s) rdm(v,s) 
 (  -0.50000) X_bbbb(K,k,c,w) t1(k,W,u,c) v(w,v,s,u) rdm(s,v) 
 (   0.50000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,s,v,w) rdm(u,s) 
 (  -0.50000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,u,s,w) rdm(v,s) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,w,s,u) rdm(v,s) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,u,c,v) v(W,w,v,s) rdm(u,s) 
 (   1.00000) X_bbbb(K,k,c,w) t1(k,u,c,w) v(W,u,v,s) rdm(v,s) 
 (  -0.50000) X_bbbb(K,k,c,w) t1(k,u,c,w) v(W,v,s,u) rdm(s,v) 
 (  -0.50000) X_bbbb(K,k,c,w) t1(k,u,v,c) v(W,s,v,w) rdm(u,s) 
 (   0.50000) X_bbbb(K,k,c,w) t1(k,u,v,c) v(W,u,s,w) rdm(v,s) 
 (  -0.50000) X_bbbb(K,k,c,w) t1(k,u,v,c) v(W,w,s,u) rdm(v,s) 
 (   0.50000) X_bbbb(K,k,c,w) t1(k,u,v,c) v(W,w,v,s) rdm(u,s) 
 (  -1.00000) X_bbbb(K,k,c,w) t1(k,u,w,c) v(W,u,v,s) rdm(v,s) 
 (   0.50000) X_bbbb(K,k,c,w) t1(k,u,w,c) v(W,v,s,u) rdm(s,v) 
 (   0.50000) X_bbbb(K,k,c,x) t1(k,W,c,w) v(w,u,v,s) rdm(x,v,u,s) 
 (  -0.50000) X_bbbb(K,k,c,x) t1(k,W,w,c) v(w,u,v,s) rdm(x,v,u,s) 
 (  -0.50000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,v,s,w) rdm(x,s,v,u) 
 (   0.50000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,v,u,s) rdm(x,w,v,s) 
 (  -0.50000) X_bbbb(K,k,c,x) t1(k,w,c,u) v(W,w,v,s) rdm(x,v,u,s) 
 (  -0.16667) X_bbbb(K,k,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,u,v) 
 (   0.16667) X_bbbb(K,k,c,x) t1(k,w,u,c) v(W,v,s,w) rdm(x,s,v,u) 
 (   0.16667) X_bbbb(K,k,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,s,v) 
 (  -0.16667) X_bbbb(K,k,c,x) t1(k,w,u,c) v(W,v,u,s) rdm(x,w,v,s) 
 (   0.50000) X_bbbb(K,k,c,x) t1(k,w,u,c) v(W,w,v,s) rdm(x,v,u,s) 

Total spin-integrated terms: 83
Total spin-adapted terms: 110
Spin-adaptation automation time :  2.687 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabeling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

8 terms removed:
 (   4.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,j,x,y) 
 (  -2.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,x,y,j) 
 (   4.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,j,x,y) 
 (  -2.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,x,y,j) 
 (  -2.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,j,y,z) rdm(x,z) 
 (   1.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,y,z,j) rdm(x,z) 
 (  -2.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,j,y,z) rdm(x,z) 
 (   1.00000) X_abab(K,i,a,x) t1(i,W,y,a) v(j,y,z,j) rdm(x,z) 
----------------------------------------------------------------------------------------------------
Remaining terms: 102


--------------------------------------- genEinsum equations ----------------------------------------

sigma_KW_bb  = einsum('Kiax,ixWa->KW', X_abab, v_xaae, optimize = einsum_type)
sigma_KW_bb += einsum('iKax,iaWx->KW', X_abab, v_xeaa, optimize = einsum_type)
sigma_KW_bb -= einsum('ijaW,jKia->KW', X_abab, v_xxxe, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,iaWx->KW', X_bbbb, v_xeaa, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,ixWa->KW', X_bbbb, v_xaae, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('ijaW,iKja->KW', X_bbbb, v_xxxe, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('ijaW,jKia->KW', X_bbbb, v_xxxe, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,a,iWxa->KW', X_abab, e_extern, t1_xaae, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,i,iWxa->KW', X_abab, e_cvs, t1_xaae, optimize = einsum_type)
sigma_KW_bb += einsum('iKax,a,iWax->KW', X_abab, e_extern, t1_xaea, optimize = einsum_type)
sigma_KW_bb -= einsum('iKax,i,iWax->KW', X_abab, e_cvs, t1_xaea, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,Wy,iyxa->KW', X_abab, h_aa, t1_xaae, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,xy,iWya->KW', X_abab, h_aa, t1_xaae, optimize = einsum_type)
sigma_KW_bb -= einsum('iKax,Wy,iyax->KW', X_abab, h_aa, t1_xaea, optimize = einsum_type)
sigma_KW_bb += einsum('iKax,xy,iWay->KW', X_abab, h_aa, t1_xaea, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyWa,xy->KW', X_abab, v_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iaWy,xy->KW', X_abab, v_xeaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('ijax,jKia,Wx->KW', X_abab, v_xxxe, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,a,iWax->KW', X_bbbb, e_extern, t1_xaea, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,a,iWxa->KW', X_bbbb, e_extern, t1_xaae, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,i,iWax->KW', X_bbbb, e_cvs, t1_xaea, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,i,iWxa->KW', X_bbbb, e_cvs, t1_xaae, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,Wy,iyax->KW', X_bbbb, h_aa, t1_xaea, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,Wy,iyxa->KW', X_bbbb, h_aa, t1_xaae, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,xy,iWay->KW', X_bbbb, h_aa, t1_xaea, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,xy,iWya->KW', X_bbbb, h_aa, t1_xaae, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iaWy,xy->KW', X_bbbb, v_xeaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyWa,xy->KW', X_bbbb, v_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/4 * einsum('ijax,iKja,Wx->KW', X_bbbb, v_xxxe, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/4 * einsum('ijax,jKia,Wx->KW', X_bbbb, v_xxxe, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,a,iWya,xy->KW', X_abab, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,i,iWya,xy->KW', X_abab, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,a,iWay,xy->KW', X_abab, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,i,iWay,xy->KW', X_abab, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,Wy,iyza,xz->KW', X_abab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,yz,iWya,xz->KW', X_abab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,Wy,iyaz,xz->KW', X_abab, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,yz,iWay,xz->KW', X_abab, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,iWya,xyzw,zw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iWya,xzwy,wz->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyza,Wwzx,yw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyza,Wywx,zw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,iyxa,Wyzw,zw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyxa,Wzwy,wz->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iWya,yzwu,xwzu->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/3 * einsum('Kiax,iyza,Wwuy,xuzw->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/6 * einsum('Kiax,iyza,Wwuy,xuwz->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/3 * einsum('Kiax,iyza,Wwzu,xyuw->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/6 * einsum('Kiax,iyza,Wwzu,xywu->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyza,Wywu,xwzu->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += einsum('iKax,iWay,xyzw,zw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iWay,xzwy,wz->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iyaz,Wwzx,yw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,iyaz,Wywx,zw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('iKax,iyaz,Wxwy,zw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += einsum('iKax,iyaz,Wxzw,yw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('iKax,iyax,Wyzw,zw->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,iyax,Wzwy,wz->KW', X_abab, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,iyza,Wxwy,zw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iyza,Wxzw,yw->KW', X_abab, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iWay,yzwu,xwzu->KW', X_abab, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,iyaz,Wwuy,xuwz->KW', X_abab, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('iKax,iyaz,Wwzu,xywu->KW', X_abab, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('iKax,iyaz,Wywu,xwzu->KW', X_abab, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/6 * einsum('iKax,iyza,Wwuy,xuzw->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/3 * einsum('iKax,iyza,Wwuy,xuwz->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/6 * einsum('iKax,iyza,Wwzu,xyuw->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/3 * einsum('iKax,iyza,Wwzu,xywu->KW', X_abab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,a,iWay,xy->KW', X_bbbb, e_extern, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,a,iWya,xy->KW', X_bbbb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,i,iWay,xy->KW', X_bbbb, e_cvs, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,i,iWya,xy->KW', X_bbbb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,Wy,iyaz,xz->KW', X_bbbb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,Wy,iyza,xz->KW', X_bbbb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,yz,iWay,xz->KW', X_bbbb, h_aa, t1_xaea, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,yz,iWya,xz->KW', X_bbbb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,iWay,xyzw,zw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iWay,xzwy,wz->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,iWya,xyzw,zw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iWya,xzwy,wz->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyaz,Wwzx,yw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyaz,Wywx,zw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,iyaz,Wxwy,zw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,iyaz,Wxzw,yw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += einsum('Kiax,iyax,Wyzw,zw->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyax,Wzwy,wz->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyza,Wwzx,yw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyza,Wywx,zw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyza,Wxwy,zw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyza,Wxzw,yw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb -= einsum('Kiax,iyxa,Wyzw,zw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyxa,Wzwy,wz->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ca, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iWay,yzwu,xwzu->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iWya,yzwu,xwzu->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyaz,Wwuy,xuwz->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyaz,Wwzu,xywu->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/2 * einsum('Kiax,iyaz,Wywu,xwzu->KW', X_bbbb, t1_xaea, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/6 * einsum('Kiax,iyza,Wwuy,xuzw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/6 * einsum('Kiax,iyza,Wwuy,xuwz->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/6 * einsum('Kiax,iyza,Wwzu,xyuw->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb -= 1/6 * einsum('Kiax,iyza,Wwzu,xywu->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_KW_bb += 1/2 * einsum('Kiax,iyza,Wywu,xwzu->KW', X_bbbb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 466.16 seconds.
