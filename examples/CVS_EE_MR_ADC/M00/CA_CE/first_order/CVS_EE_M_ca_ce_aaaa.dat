
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


----------------------------------- Spin-Adapted CVS-EE: M00 H1 ------------------------------------


## Generating Term a_I^\dag a_X ... a_A\dag a_J ...


----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculate the commutator ... [H(2), r_op] ...

## Calculate the commutator [l_op, [H(2), r_op]] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) v(J,X,I,A) 
 (   1.00000) h(X,A) kdelta(I,J) 
 (   1.00000) kdelta(I,J) v(i,X,i,A) 
 (   1.00000) kdelta(I,J) v(i,X,i,A) 
 (   1.00000) kdelta(I,J) v(i,X,i,A) 
 (   1.00000) kdelta(I,J) v(i,X,i,A) 
 (   1.00000) e(A) kdelta(I,J) t1(X,A) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(x,A) 
 (  -2.00000) kdelta(I,J) t1(x,A) v(i,X,i,x) 
 (  -2.00000) kdelta(I,J) t1(x,A) v(i,X,i,x) 
 (  -2.00000) kdelta(I,J) t1(x,A) v(i,X,i,x) 
 (  -2.00000) kdelta(I,J) t1(x,A) v(i,X,i,x) 
 (   1.00000) v(J,x,I,A) cre(x) des(X) 
 (  -1.00000) h(x,A) kdelta(I,J) cre(x) des(X) 
 (   1.00000) kdelta(I,J) v(X,x,A,y) cre(x) des(y) 
 (  -1.00000) kdelta(I,J) v(i,x,i,A) cre(x) des(X) 
 (  -1.00000) kdelta(I,J) v(i,x,i,A) cre(x) des(X) 
 (   1.00000) kdelta(I,J) v(X,x,A,y) cre(x) des(y) 
 (  -1.00000) kdelta(I,J) v(i,x,i,A) cre(x) des(X) 
 (  -1.00000) kdelta(I,J) v(i,x,i,A) cre(x) des(X) 
 (  -1.00000) e(A) kdelta(I,J) t1(x,A) cre(x) des(X) 
 (   1.00000) e(A) kdelta(I,J) t1(X,x,A,y) cre(x) des(y) 
 (   1.00000) e(A) kdelta(I,J) t1(X,x,A,y) cre(x) des(y) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(x,y,A,z) cre(y) des(z) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(x,y,A,z) cre(y) des(z) 
 (   1.00000) h(x,y) kdelta(I,J) t1(x,A) cre(y) des(X) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(X,x,A,z) cre(y) des(z) 
 (   1.00000) h(x,y) kdelta(I,J) t1(X,z,A,x) cre(z) des(y) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(X,x,A,z) cre(y) des(z) 
 (   1.00000) h(x,y) kdelta(I,J) t1(X,z,A,x) cre(z) des(y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(X,y,x,z) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(X,y,x,z) cre(y) des(z) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,x,i,y) cre(y) des(X) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,x,i,y) cre(y) des(X) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,x,i,y) cre(y) des(X) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,x,i,y) cre(y) des(X) 
 (  -2.00000) kdelta(I,J) t1(X,x,A,y) v(i,x,i,z) cre(z) des(y) 
 (  -2.00000) kdelta(I,J) t1(X,x,A,y) v(i,x,i,z) cre(z) des(y) 
 (  -2.00000) kdelta(I,J) t1(X,x,A,y) v(i,x,i,z) cre(z) des(y) 
 (  -2.00000) kdelta(I,J) t1(X,x,A,y) v(i,x,i,z) cre(z) des(y) 
 (   2.00000) kdelta(I,J) t1(X,x,A,y) v(i,y,i,z) cre(x) des(z) 
 (   2.00000) kdelta(I,J) t1(X,x,A,y) v(i,y,i,z) cre(x) des(z) 
 (   2.00000) kdelta(I,J) t1(X,x,A,y) v(i,y,i,z) cre(x) des(z) 
 (   2.00000) kdelta(I,J) t1(X,x,A,y) v(i,y,i,z) cre(x) des(z) 
 (  -0.50000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,y) cre(w) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,y) cre(w) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (  -2.00000) kdelta(I,J) t1(x,y,A,z) v(i,X,i,x) cre(y) des(z) 
 (   0.50000) kdelta(I,J) v(x,y,A,z) cre(x) cre(y) des(X) des(z) 
 (   1.00000) kdelta(I,J) v(x,y,A,z) cre(x) cre(y) des(X) des(z) 
 (   0.50000) e(A) kdelta(I,J) t1(x,y,A,z) cre(x) cre(y) des(X) des(z) 
 (   1.00000) e(A) kdelta(I,J) t1(x,y,A,z) cre(x) cre(y) des(X) des(z) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(x,z,A,w) cre(y) cre(z) des(X) des(w) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(x,z,A,w) cre(y) cre(z) des(X) des(w) 
 (   0.50000) h(x,y) kdelta(I,J) t1(z,w,A,x) cre(z) cre(w) des(X) des(y) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(x,z,A,w) cre(y) cre(z) des(X) des(w) 
 (   1.00000) h(x,y) kdelta(I,J) t1(z,w,A,x) cre(z) cre(w) des(X) des(y) 
 (  -0.50000) kdelta(I,J) t1(x,A) v(x,y,z,w) cre(z) cre(w) des(X) des(y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(x,y,z,w) cre(z) cre(w) des(X) des(y) 
 (   0.50000) kdelta(I,J) t1(X,x,A,y) v(x,z,w,u) cre(w) cre(u) des(y) des(z) 
 (   1.00000) kdelta(I,J) t1(X,x,A,y) v(x,z,w,u) cre(w) cre(u) des(y) des(z) 
 (  -0.50000) kdelta(I,J) t1(X,x,A,y) v(y,z,w,u) cre(x) cre(z) des(w) des(u) 
 (  -1.00000) kdelta(I,J) t1(X,x,A,y) v(y,z,w,u) cre(x) cre(z) des(w) des(u) 
 (   1.00000) kdelta(I,J) t1(X,x,A,y) v(x,z,w,u) cre(w) cre(u) des(y) des(z) 
 (   0.50000) kdelta(I,J) t1(X,x,A,y) v(x,z,w,u) cre(w) cre(u) des(y) des(z) 
 (  -1.00000) kdelta(I,J) t1(X,x,A,y) v(y,z,w,u) cre(x) cre(z) des(w) des(u) 
 (  -0.50000) kdelta(I,J) t1(X,x,A,y) v(y,z,w,u) cre(x) cre(z) des(w) des(u) 
 (   0.25000) kdelta(I,J) t1(x,y,A,z) v(X,z,w,u) cre(x) cre(y) des(w) des(u) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,u) cre(y) cre(w) des(z) des(u) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,u) cre(y) cre(w) des(z) des(u) 
 (  -0.25000) kdelta(I,J) t1(x,y,A,z) v(x,y,w,u) cre(w) cre(u) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(i,z,i,w) cre(x) cre(y) des(X) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(i,z,i,w) cre(x) cre(y) des(X) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(i,z,i,w) cre(x) cre(y) des(X) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(i,z,i,w) cre(x) cre(y) des(X) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,z,w,u) cre(x) cre(y) des(w) des(u) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,u) cre(y) cre(w) des(z) des(u) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,u) cre(y) cre(w) des(z) des(u) 
 (  -1.00000) kdelta(I,J) t1(x,y,A,z) v(x,y,w,u) cre(w) cre(u) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   2.00000) kdelta(I,J) t1(x,y,A,z) v(i,x,i,w) cre(y) cre(w) des(X) des(z) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(X,w,x,u) cre(y) cre(w) des(z) des(u) 
 (   0.50000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (   0.25000) kdelta(I,J) t1(x,y,A,z) v(z,w,u,v) cre(x) cre(y) cre(w) des(X) des(u) des(v) 
 (   0.50000) kdelta(I,J) t1(x,y,A,z) v(z,w,u,v) cre(x) cre(y) cre(w) des(X) des(u) des(v) 
 (   0.50000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(z,w,u,v) cre(x) cre(y) cre(w) des(X) des(u) des(v) 
 (   0.50000) kdelta(I,J) t1(x,y,A,z) v(z,w,u,v) cre(x) cre(y) cre(w) des(X) des(u) des(v) 
 (   1.00000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (   0.50000) kdelta(I,J) t1(x,y,A,z) v(x,w,u,v) cre(y) cre(u) cre(v) des(X) des(z) des(w) 

Total terms : 104
SQA automation time :  2.921 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 343 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

225 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) v(I,X,A,J) 
 (  -1.00000) v(J,I,X,A) 
 (   1.00000) h(X,A) kdelta(I,J) 
 (  -1.00000) kdelta(I,J) v(i,X,A,i) 
 (   2.00000) kdelta(I,J) v(i,i,X,A) 
 (  -1.00000) kdelta(I,J) v(i,X,A,i) 
 (   2.00000) kdelta(I,J) v(i,i,X,A) 
 (  -0.50000) v(I,x,A,J) rdm(X,x) 
 (   0.50000) v(J,I,x,A) rdm(X,x) 
 (   1.00000) e(A) kdelta(I,J) t1(X,A) 
 (  -0.50000) h(x,A) kdelta(I,J) rdm(X,x) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(x,A) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,X,x,i) 
 (  -4.00000) kdelta(I,J) t1(x,A) v(i,i,X,x) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,X,x,i) 
 (  -4.00000) kdelta(I,J) t1(x,A) v(i,i,X,x) 
 (  -0.50000) kdelta(I,J) v(X,x,y,A) rdm(x,y) 
 (  -1.00000) kdelta(I,J) v(i,i,x,A) rdm(X,x) 
 (   0.50000) kdelta(I,J) v(i,x,A,i) rdm(X,x) 
 (  -1.00000) kdelta(I,J) v(i,i,x,A) rdm(X,x) 
 (   0.50000) kdelta(I,J) v(i,x,A,i) rdm(X,x) 
 (   1.00000) kdelta(I,J) v(x,y,X,A) rdm(y,x) 
 (  -0.50000) kdelta(I,J) v(x,y,z,A) rdm(X,y,z,x) 
 (  -0.50000) e(A) kdelta(I,J) t1(X,x,y,A) rdm(y,x) 
 (  -0.50000) e(A) kdelta(I,J) t1(x,A) rdm(X,x) 
 (   1.00000) e(A) kdelta(I,J) t1(x,X,y,A) rdm(y,x) 
 (  -0.50000) e(A) kdelta(I,J) t1(x,y,z,A) rdm(X,z,y,x) 
 (   0.50000) h(X,x) kdelta(I,J) t1(x,y,z,A) rdm(z,y) 
 (  -1.00000) h(X,x) kdelta(I,J) t1(y,x,z,A) rdm(z,y) 
 (   0.50000) h(x,y) kdelta(I,J) t1(X,x,z,A) rdm(y,z) 
 (  -0.50000) h(x,y) kdelta(I,J) t1(X,z,x,A) rdm(y,z) 
 (   0.50000) h(x,y) kdelta(I,J) t1(x,A) rdm(X,y) 
 (  -1.00000) h(x,y) kdelta(I,J) t1(x,X,z,A) rdm(y,z) 
 (   0.50000) h(x,y) kdelta(I,J) t1(x,z,w,A) rdm(X,w,z,y) 
 (   1.00000) h(x,y) kdelta(I,J) t1(z,X,x,A) rdm(y,z) 
 (  -0.50000) h(x,y) kdelta(I,J) t1(z,w,x,A) rdm(X,y,w,z) 
 (   0.50000) h(x,y) kdelta(I,J) t1(z,x,w,A) rdm(X,w,y,z) 
 (   2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,x,z) rdm(y,z) 
 (  -2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,y,z) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(X,x,y,A) v(i,x,z,i) rdm(y,z) 
 (   1.00000) kdelta(I,J) t1(X,x,y,A) v(i,y,z,i) rdm(x,z) 
 (   2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,x,z) rdm(y,z) 
 (  -2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,y,z) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(X,x,y,A) v(i,x,z,i) rdm(y,z) 
 (   1.00000) kdelta(I,J) t1(X,x,y,A) v(i,y,z,i) rdm(x,z) 
 (   0.50000) kdelta(I,J) t1(X,x,y,A) v(x,z,w,u) rdm(y,w,z,u) 
 (  -0.50000) kdelta(I,J) t1(X,x,y,A) v(y,z,w,u) rdm(x,w,z,u) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(X,x,y,z) rdm(y,z) 
 (   0.50000) kdelta(I,J) t1(x,A) v(X,y,z,x) rdm(z,y) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,i,x,y) rdm(X,y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(i,x,y,i) rdm(X,y) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,i,x,y) rdm(X,y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(i,x,y,i) rdm(X,y) 
 (   0.50000) kdelta(I,J) t1(x,A) v(x,y,z,w) rdm(X,z,y,w) 
 (  -2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,x,z) rdm(y,z) 
 (   2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,y,z) rdm(x,z) 
 (   1.00000) kdelta(I,J) t1(x,X,y,A) v(i,x,z,i) rdm(y,z) 
 (  -1.00000) kdelta(I,J) t1(x,X,y,A) v(i,y,z,i) rdm(x,z) 
 (  -2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,x,z) rdm(y,z) 
 (   2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,y,z) rdm(x,z) 
 (   1.00000) kdelta(I,J) t1(x,X,y,A) v(i,x,z,i) rdm(y,z) 
 (  -1.00000) kdelta(I,J) t1(x,X,y,A) v(i,y,z,i) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(x,X,y,A) v(x,z,w,u) rdm(y,w,z,u) 
 (   1.00000) kdelta(I,J) t1(x,X,y,A) v(y,z,w,u) rdm(x,w,z,u) 
 (   0.50000) kdelta(I,J) t1(x,y,z,A) v(X,w,u,x) rdm(z,w,u,y) 
 (   0.50000) kdelta(I,J) t1(x,y,z,A) v(X,w,u,y) rdm(z,w,x,u) 
 (  -0.50000) kdelta(I,J) t1(x,y,z,A) v(X,w,z,u) rdm(y,x,w,u) 
 (   0.50000) kdelta(I,J) t1(x,y,z,A) v(X,x,w,u) rdm(z,u,y,w) 
 (   0.50000) kdelta(I,J) t1(x,y,z,A) v(X,x,w,y) rdm(z,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(X,y,w,u) rdm(z,u,x,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(X,y,w,x) rdm(z,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,x,i) rdm(z,y) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,y,i) rdm(z,x) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,x) rdm(z,y) 
 (  -4.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,y) rdm(z,x) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,w,y) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,y,w) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,y,w) rdm(X,z,w,x) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,x,y) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,y,x) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,w,y) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,y,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,y,w,i) rdm(X,z,w,x) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,x,y) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,y,x) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,x,i) rdm(z,y) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,y,i) rdm(z,x) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,x) rdm(z,y) 
 (  -4.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,y) rdm(z,x) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,w,y) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,y,w) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,y,w) rdm(X,z,w,x) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,x,y) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,y,x) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,w,y) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,y,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,y,w,i) rdm(X,z,w,x) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,x,y) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,y,x) 
 (  -0.08333) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,v,w,y) 
 (  -0.08333) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,v,y,w) 
 (  -0.08333) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,w,v,y) 
 (  -0.08333) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,w,y,v) 
 (  -0.08333) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,y,v,w) 
 (   0.41667) kdelta(I,J) t1(x,y,z,A) v(x,w,u,v) rdm(X,z,u,y,w,v) 
 (  -0.16667) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,v,w,x) 
 (  -0.16667) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,v,x,w) 
 (  -0.16667) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,w,v,x) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,w,x,v) 
 (  -0.16667) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,x,v,w) 
 (  -0.16667) kdelta(I,J) t1(x,y,z,A) v(y,w,u,v) rdm(X,z,u,x,w,v) 
 (   0.50000) kdelta(I,J) t1(x,y,z,A) v(y,w,x,u) rdm(X,z,w,u) 
 (   0.12500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,u,x,y) 
 (   0.12500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,u,y,x) 
 (   0.12500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,x,u,y) 
 (   0.12500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,x,y,u) 
 (   0.12500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,y,u,x) 
 (  -0.37500) kdelta(I,J) t1(x,y,z,A) v(z,w,u,v) rdm(X,w,v,y,x,u) 

Total spin-integrated terms: 104
Total spin-adapted terms: 118
Spin-adaptation automation time :  26.317 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

60 terms removed:
 (  -1.00000) kdelta(I,J) v(i,X,A,i) 
 (   2.00000) kdelta(I,J) v(i,i,X,A) 
 (  -1.00000) kdelta(I,J) v(i,X,A,i) 
 (   2.00000) kdelta(I,J) v(i,i,X,A) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,X,x,i) 
 (  -4.00000) kdelta(I,J) t1(x,A) v(i,i,X,x) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,X,x,i) 
 (  -4.00000) kdelta(I,J) t1(x,A) v(i,i,X,x) 
 (  -1.00000) kdelta(I,J) v(i,i,x,A) rdm(X,x) 
 (   0.50000) kdelta(I,J) v(i,x,A,i) rdm(X,x) 
 (  -1.00000) kdelta(I,J) v(i,i,x,A) rdm(X,x) 
 (   0.50000) kdelta(I,J) v(i,x,A,i) rdm(X,x) 
 (   2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,x,z) rdm(y,z) 
 (  -2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,y,z) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(X,x,y,A) v(i,x,z,i) rdm(y,z) 
 (   1.00000) kdelta(I,J) t1(X,x,y,A) v(i,y,z,i) rdm(x,z) 
 (   2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,x,z) rdm(y,z) 
 (  -2.00000) kdelta(I,J) t1(X,x,y,A) v(i,i,y,z) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(X,x,y,A) v(i,x,z,i) rdm(y,z) 
 (   1.00000) kdelta(I,J) t1(X,x,y,A) v(i,y,z,i) rdm(x,z) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,i,x,y) rdm(X,y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(i,x,y,i) rdm(X,y) 
 (   2.00000) kdelta(I,J) t1(x,A) v(i,i,x,y) rdm(X,y) 
 (  -1.00000) kdelta(I,J) t1(x,A) v(i,x,y,i) rdm(X,y) 
 (  -2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,x,z) rdm(y,z) 
 (   2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,y,z) rdm(x,z) 
 (   1.00000) kdelta(I,J) t1(x,X,y,A) v(i,x,z,i) rdm(y,z) 
 (  -1.00000) kdelta(I,J) t1(x,X,y,A) v(i,y,z,i) rdm(x,z) 
 (  -2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,x,z) rdm(y,z) 
 (   2.00000) kdelta(I,J) t1(x,X,y,A) v(i,i,y,z) rdm(x,z) 
 (   1.00000) kdelta(I,J) t1(x,X,y,A) v(i,x,z,i) rdm(y,z) 
 (  -1.00000) kdelta(I,J) t1(x,X,y,A) v(i,y,z,i) rdm(x,z) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,x,i) rdm(z,y) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,y,i) rdm(z,x) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,x) rdm(z,y) 
 (  -4.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,y) rdm(z,x) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,w,y) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,y,w) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,y,w) rdm(X,z,w,x) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,x,y) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,y,x) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,w,y) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,y,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,y,w,i) rdm(X,z,w,x) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,x,y) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,y,x) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,x,i) rdm(z,y) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,X,y,i) rdm(z,x) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,x) rdm(z,y) 
 (  -4.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,X,y) rdm(z,x) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,w,y) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,x,w) rdm(X,z,y,w) 
 (   2.00000) kdelta(I,J) t1(x,y,z,A) v(i,i,y,w) rdm(X,z,w,x) 
 (   0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,x,y) 
 (  -0.66667) kdelta(I,J) t1(x,y,z,A) v(i,i,z,w) rdm(X,w,y,x) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,w,y) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,x,w,i) rdm(X,z,y,w) 
 (  -1.00000) kdelta(I,J) t1(x,y,z,A) v(i,y,w,i) rdm(X,z,w,x) 
 (  -0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,x,y) 
 (   0.33333) kdelta(I,J) t1(x,y,z,A) v(i,z,w,i) rdm(X,w,y,x) 
----------------------------------------------------------------------------------------------------
Remaining terms: 58


--------------------------------------- genEinsum equations ----------------------------------------

temp  = einsum('IXAJ->IXJA', v_xaex, optimize = einsum_type).copy()
temp -= einsum('JIXA->IXJA', v_xxae, optimize = einsum_type).copy()
temp += einsum('XA,IJ->IXJA', h_ae, np.identity(ncvs), optimize = einsum_type)
temp -= 1/2 * einsum('IxAJ,Xx->IXJA', v_xaex, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('JIxA,Xx->IXJA', v_xxae, rdm_ca, optimize = einsum_type)
temp += einsum('A,IJ,XA->IXJA', e_extern, np.identity(ncvs), t1_ae, optimize = einsum_type)
temp -= 1/2 * einsum('xA,IJ,Xx->IXJA', h_ae, np.identity(ncvs), rdm_ca, optimize = einsum_type)
temp -= einsum('Xx,IJ,xA->IXJA', h_aa, np.identity(ncvs), t1_ae, optimize = einsum_type)
temp -= 1/2 * einsum('IJ,XxyA,xy->IXJA', np.identity(ncvs), v_aaae, rdm_ca, optimize = einsum_type)
temp += einsum('IJ,xyXA,yx->IXJA', np.identity(ncvs), v_aaae, rdm_ca, optimize = einsum_type)
temp -= 1/2 * einsum('IJ,xyzA,Xyzx->IXJA', np.identity(ncvs), v_aaae, rdm_ccaa, optimize = einsum_type)
temp -= 1/2 * einsum('A,IJ,XxyA,yx->IXJA', e_extern, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp -= 1/2 * einsum('A,IJ,xA,Xx->IXJA', e_extern, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
temp += einsum('A,IJ,xXyA,yx->IXJA', e_extern, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp -= 1/2 * einsum('A,IJ,xyzA,Xzyx->IXJA', e_extern, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('Xx,IJ,xyzA,zy->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp -= einsum('Xx,IJ,yxzA,zy->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('xy,IJ,XxzA,yz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp -= 1/2 * einsum('xy,IJ,XzxA,yz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('xy,IJ,xA,Xy->IXJA', h_aa, np.identity(ncvs), t1_ae, rdm_ca, optimize = einsum_type)
temp -= einsum('xy,IJ,xXzA,yz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('xy,IJ,xzwA,Xwzy->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
temp += einsum('xy,IJ,zXxA,yz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ca, optimize = einsum_type)
temp -= 1/2 * einsum('xy,IJ,zwxA,Xywz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('xy,IJ,zxwA,Xwyz->IXJA', h_aa, np.identity(ncvs), t1_aaae, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,XxyA,xzwu,ywzu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp -= 1/2 * einsum('IJ,XxyA,yzwu,xwzu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp -= einsum('IJ,xA,Xxyz,yz->IXJA', np.identity(ncvs), t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xA,Xyzx,zy->IXJA', np.identity(ncvs), t1_ae, v_aaaa, rdm_ca, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xA,xyzw,Xzyw->IXJA', np.identity(ncvs), t1_ae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp -= einsum('IJ,xXyA,xzwu,ywzu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += einsum('IJ,xXyA,yzwu,xwzu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xyzA,Xwux,zwuy->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xyzA,Xwuy,zwxu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp -= 1/2 * einsum('IJ,xyzA,Xwzu,yxwu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xyzA,Xxwu,zuyw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xyzA,Xxwy,zw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
temp -= einsum('IJ,xyzA,Xywu,zuxw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp -= einsum('IJ,xyzA,Xywx,zw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ca, optimize = einsum_type)
temp -= 1/12 * einsum('IJ,xyzA,xwuv,Xzuvwy->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/12 * einsum('IJ,xyzA,xwuv,Xzuvyw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/12 * einsum('IJ,xyzA,xwuv,Xzuwvy->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/12 * einsum('IJ,xyzA,xwuv,Xzuwyv->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/12 * einsum('IJ,xyzA,xwuv,Xzuyvw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 5/12 * einsum('IJ,xyzA,xwuv,Xzuywv->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/6 * einsum('IJ,xyzA,ywuv,Xzuvwx->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/6 * einsum('IJ,xyzA,ywuv,Xzuvxw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/6 * einsum('IJ,xyzA,ywuv,Xzuwvx->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/3 * einsum('IJ,xyzA,ywuv,Xzuwxv->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/6 * einsum('IJ,xyzA,ywuv,Xzuxvw->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 1/6 * einsum('IJ,xyzA,ywuv,Xzuxwv->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/2 * einsum('IJ,xyzA,ywxu,Xzwu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
temp += 1/8 * einsum('IJ,xyzA,zwuv,Xwvuxy->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/8 * einsum('IJ,xyzA,zwuv,Xwvuyx->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/8 * einsum('IJ,xyzA,zwuv,Xwvxuy->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/8 * einsum('IJ,xyzA,zwuv,Xwvxyu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp += 1/8 * einsum('IJ,xyzA,zwuv,Xwvyux->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
temp -= 3/8 * einsum('IJ,xyzA,zwuv,Xwvyxu->IXJA', np.identity(ncvs), t1_aaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 164.42 seconds.
