
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


------------------------------ Spin-Adapted CVS-EE: T Q1 Q_CA (aa_aa) ------------------------------


## Generating operators ...

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,y) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,a) 
 (   1.00000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,x,y) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,x) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(x,a) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,j,a) t1(i,j,x,a) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,x) 
 (   1.00000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,x,y) 
 (   1.00000) Y_KW__aa(i,x) d_ve(R,j,a) t1(i,j,x,a) 
 (   1.00000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,x,y) 
 (   1.00000) Y_KW__bb(i,x) d_ce(R,j,a) t1(i,j,x,a) 
 (   1.00000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,x,y) 
 (   1.00000) Y_KW__bb(i,x) d_ve(R,j,a) t1(i,j,x,a) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,z,y,w) cre(z) des(w) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,z,y,w) cre(z) des(w) 
 (  -1.00000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y) cre(x) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,x,w) cre(z) des(w) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,x,y) cre(w) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,y,a,z) cre(y) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,y,a,z) cre(y) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,a) cre(x) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,a,x) cre(z) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,x,z) cre(y) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,y,z) cre(x) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y) cre(x) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,x,z) cre(y) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,x,z) cre(y) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(x,y,a,z) cre(z) des(y) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(x,y,a,z) cre(z) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,a) cre(x) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_ce(R,j,a) t1(i,j,y,a) cre(x) des(y) 
 (   1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y) cre(x) des(y) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,x,z) cre(y) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,x,z) cre(y) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,x,z) cre(y) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,y,z) cre(x) des(z) 
 (  -1.00000) Y_KW__aa(i,x) d_ve(R,j,a) t1(i,j,y,a) cre(x) des(y) 
 (  -1.00000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,y,x,w) cre(z) des(w) 
 (   1.00000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,w,x,y) cre(w) des(z) 
 (  -1.00000) Y_KW__bb(i,x) d_ae(R,y,a) t1(i,z,a,x) cre(z) des(y) 
 (  -1.00000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,x,z) cre(y) des(z) 
 (   1.00000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,y,z) cre(x) des(z) 
 (  -1.00000) Y_KW__bb(i,x) d_ce(R,j,a) t1(i,j,y,a) cre(x) des(y) 
 (  -1.00000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,x,z) cre(y) des(z) 
 (   1.00000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,y,z) cre(x) des(z) 
 (  -1.00000) Y_KW__bb(i,x) d_ve(R,j,a) t1(i,j,y,a) cre(x) des(y) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,w,u) cre(x) cre(z) des(w) des(u) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,y,u) cre(x) cre(w) des(z) des(u) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,y,u) cre(x) cre(w) des(z) des(u) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,a,w) cre(x) cre(z) des(y) des(w) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,a,w) cre(x) cre(z) des(y) des(w) 
 (  -0.50000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,z,a,w) cre(x) cre(w) des(y) des(z) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,z,a,w) cre(x) cre(w) des(y) des(z) 
 (  -0.50000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,y,w,u) cre(x) cre(z) des(w) des(u) 
 (   1.00000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,w,y,u) cre(x) cre(w) des(z) des(u) 
 (   1.00000) Y_KW__bb(i,x) d_ae(R,y,a) t1(i,z,a,w) cre(x) cre(z) des(y) des(w) 
 (  -1.00000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 64
SQA automation time :  0.687 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 116 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

32 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,y) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,a) 
 (   1.00000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,x,y) 
 (  -1.00000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,y,x) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,x) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(x,a) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,j,a) t1(i,j,x,a) 
 (  -1.00000) Y_KW__aa(i,x) d_ce(R,j,a) t1(j,i,x,a) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,x) 
 (   1.00000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,x,y) 
 (  -1.00000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,y,x) 
 (   1.00000) Y_KW__aa(i,x) d_ve(R,j,a) t1(i,j,x,a) 
 (  -1.00000) Y_KW__aa(i,x) d_ve(R,j,a) t1(j,i,x,a) 
 (   1.00000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,x,y) 
 (   1.00000) Y_KW__bb(i,x) d_ce(R,j,a) t1(i,j,x,a) 
 (   1.00000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,x,y) 
 (   1.00000) Y_KW__bb(i,x) d_ve(R,j,a) t1(i,j,x,a) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,z,w,y) rdm(z,w) 
 (   1.00000) Y_KW__aa(i,x) d_aa(R,x,y) t1(i,z,y,w) rdm(z,w) 
 (  -0.16667) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,u,y) rdm(x,w,u,z) 
 (   0.16667) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,u,y) rdm(x,w,z,u) 
 (   0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,x,y) rdm(z,w) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,y,u) rdm(x,w,z,u) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,w,y,x) rdm(z,w) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y) rdm(x,z) 
 (  -0.16667) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,w,u) rdm(x,z,u,w) 
 (   0.16667) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,w,u) rdm(x,z,w,u) 
 (   0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,w,x) rdm(z,w) 
 (  -0.50000) Y_KW__aa(i,x) d_aa(R,y,z) t1(i,y,x,w) rdm(z,w) 
 (   1.00000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,y,a,z) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ae(R,x,a) t1(i,y,z,a) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,a) rdm(x,y) 
 (  -0.50000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,a,w) rdm(x,z,y,w) 
 (  -0.50000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,a,x) rdm(y,z) 
 (  -0.16667) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,w,a) rdm(x,z,w,y) 
 (   0.16667) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,w,a) rdm(x,z,y,w) 
 (   0.50000) Y_KW__aa(i,x) d_ae(R,y,a) t1(i,z,x,a) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,x,z) rdm(y,z) 
 (   0.50000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,y,z) rdm(x,z) 
 (  -0.16667) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,z,x) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ca(R,j,y) t1(i,j,z,y) rdm(x,z) 
 (   0.50000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y) rdm(x,y) 
 (  -1.00000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,x,z) rdm(z,y) 
 (   0.50000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KW__aa(i,x) d_cc(R,i,j) t1(j,y,z,x) rdm(z,y) 
 (  -0.50000) Y_KW__aa(i,x) d_ce(R,i,a) t1(x,y,z,a) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,a) rdm(x,y) 
 (   1.00000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,x,z,a) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ce(R,i,a) t1(y,z,w,a) rdm(x,w,z,y) 
 (  -0.50000) Y_KW__aa(i,x) d_ce(R,j,a) t1(i,j,y,a) rdm(x,y) 
 (   0.50000) Y_KW__aa(i,x) d_ce(R,j,a) t1(j,i,y,a) rdm(x,y) 
 (   0.50000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y) rdm(x,y) 
 (  -1.00000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,x,z) rdm(z,y) 
 (   0.50000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KW__aa(i,x) d_cv(R,i,j) t1(j,y,z,x) rdm(z,y) 
 (  -0.50000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,x,z) rdm(y,z) 
 (   0.50000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,y,z) rdm(x,z) 
 (  -0.16667) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,z,x) rdm(y,z) 
 (  -0.50000) Y_KW__aa(i,x) d_va(R,j,y) t1(i,j,z,y) rdm(x,z) 
 (  -0.50000) Y_KW__aa(i,x) d_ve(R,j,a) t1(i,j,y,a) rdm(x,y) 
 (   0.50000) Y_KW__aa(i,x) d_ve(R,j,a) t1(j,i,y,a) rdm(x,y) 
 (  -0.33333) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,w,u,y) rdm(x,w,u,z) 
 (  -0.16667) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,w,u,y) rdm(x,w,z,u) 
 (   0.50000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,w,x,y) rdm(z,w) 
 (   0.16667) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,y,w,u) rdm(x,z,u,w) 
 (   0.33333) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,y,w,u) rdm(x,z,w,u) 
 (  -0.50000) Y_KW__bb(i,x) d_aa(R,y,z) t1(i,y,x,w) rdm(z,w) 
 (  -0.33333) Y_KW__bb(i,x) d_ae(R,y,a) t1(i,z,w,a) rdm(x,z,w,y) 
 (  -0.16667) Y_KW__bb(i,x) d_ae(R,y,a) t1(i,z,w,a) rdm(x,z,y,w) 
 (   0.50000) Y_KW__bb(i,x) d_ae(R,y,a) t1(i,z,x,a) rdm(y,z) 
 (  -0.50000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,x,z) rdm(y,z) 
 (   0.16667) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KW__bb(i,x) d_ca(R,j,y) t1(i,j,z,y) rdm(x,z) 
 (  -0.50000) Y_KW__bb(i,x) d_ce(R,j,a) t1(i,j,y,a) rdm(x,y) 
 (  -0.50000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,x,z) rdm(y,z) 
 (   0.16667) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KW__bb(i,x) d_va(R,j,y) t1(i,j,z,y) rdm(x,z) 
 (  -0.50000) Y_KW__bb(i,x) d_ve(R,j,a) t1(i,j,y,a) rdm(x,y) 

Total spin-integrated terms: 64
Total spin-adapted terms: 84
Spin-adaptation automation time :  0.597 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 84


--------------------------------------- genEinsum equations ----------------------------------------

TY_q_ca  = einsum('ix,Rxy,iy->R', Y_KW__aa, d_aa, t1_xa, optimize = einsum_type)
TY_q_ca += einsum('ix,Rxa,ia->R', Y_KW__aa, d_ae, t1_xe, optimize = einsum_type)
TY_q_ca += einsum('ix,Rjy,ijxy->R', Y_KW__aa, d_ca, t1_xxaa, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rjy,ijyx->R', Y_KW__aa, d_ca, t1_xxaa, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rij,jx->R', Y_KW__aa, d_cc, t1_xa, optimize = einsum_type)
TY_q_ca += einsum('ix,Ria,xa->R', Y_KW__aa, d_ce, t1_ae, optimize = einsum_type)
TY_q_ca += einsum('ix,Rja,ijxa->R', Y_KW__aa, d_ce, t1_xxae, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rja,jixa->R', Y_KW__aa, d_ce, t1_xxae, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rij,jx->R', Y_KW__aa, d_cv, t1_va, optimize = einsum_type)
TY_q_ca += einsum('ix,Rjy,ijxy->R', Y_KW__aa, d_va, t1_xvaa, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rjy,ijyx->R', Y_KW__aa, d_va, t1_xvaa, optimize = einsum_type)
TY_q_ca += einsum('ix,Rja,ijxa->R', Y_KW__aa, d_ve, t1_xvae, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rja,jixa->R', Y_KW__aa, d_ve, t1_vxae, optimize = einsum_type)
TY_q_ca += einsum('ix,Rjy,ijxy->R', Y_KW__bb, d_ca, t1_xxaa, optimize = einsum_type)
TY_q_ca += einsum('ix,Rja,ijxa->R', Y_KW__bb, d_ce, t1_xxae, optimize = einsum_type)
TY_q_ca += einsum('ix,Rjy,ijxy->R', Y_KW__bb, d_va, t1_xvaa, optimize = einsum_type)
TY_q_ca += einsum('ix,Rja,ijxa->R', Y_KW__bb, d_ve, t1_xvae, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rxy,izwy,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca += einsum('ix,Rxy,izyw,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Ryz,iwuy,xwuz->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Ryz,iwuy,xwzu->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Ryz,iwxy,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ryz,iwyu,xwzu->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ryz,iwyx,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ryz,iy,xz->R', Y_KW__aa, d_aa, t1_xa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Ryz,iywu,xzuw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Ryz,iywu,xzwu->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Ryz,iywx,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ryz,iyxw,zw->R', Y_KW__aa, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca += einsum('ix,Rxa,iyaz,yz->R', Y_KW__aa, d_ae, t1_xaea, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rxa,iyza,yz->R', Y_KW__aa, d_ae, t1_xaae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rya,ia,xy->R', Y_KW__aa, d_ae, t1_xe, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rya,izaw,xzyw->R', Y_KW__aa, d_ae, t1_xaea, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rya,izax,yz->R', Y_KW__aa, d_ae, t1_xaea, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Rya,izwa,xzwy->R', Y_KW__aa, d_ae, t1_xaae, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Rya,izwa,xzyw->R', Y_KW__aa, d_ae, t1_xaae, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rya,izxa,yz->R', Y_KW__aa, d_ae, t1_xaae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijxz,yz->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rjy,ijyz,xz->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Rjy,ijzw,xywz->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Rjy,ijzw,xyzw->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rjy,ijzx,yz->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijzy,xz->R', Y_KW__aa, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jy,xy->R', Y_KW__aa, d_cc, t1_xa, rdm_ca, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rij,jyxz,zy->R', Y_KW__aa, d_cc, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jyzw,xyzw->R', Y_KW__aa, d_cc, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jyzx,zy->R', Y_KW__aa, d_cc, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ria,xyza,yz->R', Y_KW__aa, d_ce, t1_aaae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ria,ya,xy->R', Y_KW__aa, d_ce, t1_ae, rdm_ca, optimize = einsum_type)
TY_q_ca += einsum('ix,Ria,yxza,yz->R', Y_KW__aa, d_ce, t1_aaae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ria,yzwa,xwzy->R', Y_KW__aa, d_ce, t1_aaae, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rja,ijya,xy->R', Y_KW__aa, d_ce, t1_xxae, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rja,jiya,xy->R', Y_KW__aa, d_ce, t1_xxae, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jy,xy->R', Y_KW__aa, d_cv, t1_va, rdm_ca, optimize = einsum_type)
TY_q_ca -= einsum('ix,Rij,jyxz,zy->R', Y_KW__aa, d_cv, t1_vaaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jyzw,xyzw->R', Y_KW__aa, d_cv, t1_vaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rij,jyzx,zy->R', Y_KW__aa, d_cv, t1_vaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijxz,yz->R', Y_KW__aa, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rjy,ijyz,xz->R', Y_KW__aa, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Rjy,ijzw,xywz->R', Y_KW__aa, d_va, t1_xvaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Rjy,ijzw,xyzw->R', Y_KW__aa, d_va, t1_xvaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rjy,ijzx,yz->R', Y_KW__aa, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijzy,xz->R', Y_KW__aa, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rja,ijya,xy->R', Y_KW__aa, d_ve, t1_xvae, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rja,jiya,xy->R', Y_KW__aa, d_ve, t1_vxae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/3 * einsum('ix,Ryz,iwuy,xwuz->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Ryz,iwuy,xwzu->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Ryz,iwxy,zw->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Ryz,iywu,xzuw->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/3 * einsum('ix,Ryz,iywu,xzwu->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Ryz,iyxw,zw->R', Y_KW__bb, d_aa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/3 * einsum('ix,Rya,izwa,xzwy->R', Y_KW__bb, d_ae, t1_xaae, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/6 * einsum('ix,Rya,izwa,xzyw->R', Y_KW__bb, d_ae, t1_xaae, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/2 * einsum('ix,Rya,izxa,yz->R', Y_KW__bb, d_ae, t1_xaae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijxz,yz->R', Y_KW__bb, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Rjy,ijzw,xywz->R', Y_KW__bb, d_ca, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/3 * einsum('ix,Rjy,ijzw,xyzw->R', Y_KW__bb, d_ca, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijzy,xz->R', Y_KW__bb, d_ca, t1_xxaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rja,ijya,xy->R', Y_KW__bb, d_ce, t1_xxae, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijxz,yz->R', Y_KW__bb, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca += 1/6 * einsum('ix,Rjy,ijzw,xywz->R', Y_KW__bb, d_va, t1_xvaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca += 1/3 * einsum('ix,Rjy,ijzw,xyzw->R', Y_KW__bb, d_va, t1_xvaa, rdm_ccaa, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rjy,ijzy,xz->R', Y_KW__bb, d_va, t1_xvaa, rdm_ca, optimize = einsum_type)
TY_q_ca -= 1/2 * einsum('ix,Rja,ijya,xy->R', Y_KW__bb, d_ve, t1_xvae, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 33.03 seconds.
