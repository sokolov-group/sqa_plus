
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


------------------------------- Spin-Adapted CVS-EE: TY Q1 Q_CCAA () -------------------------------


## Generating operators ...


------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  0.506 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,x) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,x) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.140 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_c:f_c] =- einsum('RPixy,Qixy->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__abab, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__abba, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('Rijxy,Qixy->RPQ', Y_KLWU__baab, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__baba, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/3 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/3 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('Rijxy,Qixz,yz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('Rijxy,Qizw,xywz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/3 * einsum('Rijxy,Qizw,xyzw->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('Rijxy,Qizy,xz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/3 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,x,y) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  0.526 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,x) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,x) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.140 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_c:f_c] =- einsum('RiPxy,Qiyx->RPQ', Y_KLWU__abab, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__abba, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RPixy,Qjyx->RPQ', Y_KLWU__baab, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__baba, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/3 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/3 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qjyz,xz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/3 * einsum('RPixy,Qjzw,xywz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RPixy,Qjzw,xyzw->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qjzx,yz->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/3 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_c:f_c] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.359 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.350 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ XY ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KLWU__aaaa(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__abab(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__baab(R,i,j,Q,x) t1(i,k,P,x) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,Q) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,Q,x) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,Q) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,y) cre(x) des(Q) 
 (  -1.00000) Y_KLWU__abab(R,i,j,Q,x) t1(i,j,P,y) cre(x) des(y) 
 (  -1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,y) cre(x) des(Q) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,Q) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__baab(R,i,j,Q,x) t1(i,k,P,y) cre(x) des(y) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,y) cre(x) des(Q) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,Q) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 

Total terms : 23
SQA automation time :  1.733 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 36 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) Y_KLWU__aaaa(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,Q,x) t1(j,i,P,x) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,Q) t1(j,i,P,x) 
 (   1.00000) Y_KLWU__abab(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,Q) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__baab(R,i,j,Q,x) t1(k,i,P,x) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,Q) t1(j,i,P,x) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,Q,x) t1(i,j,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,Q,x) t1(j,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,Q) t1(i,j,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,Q) t1(j,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,x) rdm(Q,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,y) rdm(Q,x) 
 (   0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,x,y) 
 (  -0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,P,x) rdm(Q,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,P,y) rdm(Q,x) 
 (  -0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,x,y) 
 (   0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__abab(R,i,j,Q,x) t1(i,j,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,y) rdm(Q,x) 
 (   0.33333) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,x,y) 
 (   0.16667) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,y,x) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,Q) t1(i,j,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,x) rdm(Q,y) 
 (  -0.16667) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,x,y) 
 (  -0.33333) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,y,x) 
 (   0.50000) Y_KLWU__baab(R,i,j,Q,x) t1(k,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,y) t1(k,i,P,y) rdm(Q,x) 
 (  -0.33333) Y_KLWU__baab(R,i,j,x,y) t1(k,i,P,z) rdm(Q,z,x,y) 
 (  -0.16667) Y_KLWU__baab(R,i,j,x,y) t1(k,i,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,Q) t1(j,i,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,y) t1(j,i,P,x) rdm(Q,y) 
 (   0.16667) Y_KLWU__baba(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,x,y) 
 (   0.33333) Y_KLWU__baba(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,y,x) 

Total spin-integrated terms: 23
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.116 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_a:f_a, s_a:f_a]  = einsum('RijQx,ijPx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijQx,jiPx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijxQ,ijPx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijxQ,jiPx->RPQ', Y_KLWU__aaaa, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijQx,ijPx->RPQ', Y_KLWU__abab, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijxQ,ijPx->RPQ', Y_KLWU__abba, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijQx,kiPx->RPQ', Y_KLWU__baab, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijxQ,jiPx->RPQ', Y_KLWU__baba, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijQx,ijPy,xy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijQx,jiPy,xy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijxQ,ijPy,xy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijxQ,jiPy,xy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,ijPx,Qy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,ijPy,Qx->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,ijPz,Qzxy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,ijPz,Qzyx->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,jiPx,Qy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,jiPy,Qx->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,jiPz,Qzxy->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,jiPz,Qzyx->RPQ', Y_KLWU__aaaa, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijQx,ijPy,xy->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,ijPy,Qx->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/3 * einsum('Rijxy,ijPz,Qzxy->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,ijPz,Qzyx->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijxQ,ijPy,xy->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,ijPx,Qy->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,ijPz,Qzxy->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/3 * einsum('Rijxy,ijPz,Qzyx->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijQx,kiPy,xy->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,kiPy,Qx->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/3 * einsum('Rijxy,kiPz,Qzxy->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,kiPz,Qzyx->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijxQ,jiPy,xy->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,jiPx,Qy->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,jiPz,Qzxy->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/3 * einsum('Rijxy,jiPz,Qzyx->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ XY ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) Y_KLWU__abab(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__abba(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,Q) t1(i,k,P,x) 
 (   1.00000) Y_KLWU__baba(R,i,j,Q,x) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__abab(R,i,j,x,Q) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__abba(R,i,j,Q,x) t1(i,j,P,y) cre(x) des(y) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,y) cre(x) des(Q) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,Q) t1(i,k,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__baba(R,i,j,Q,x) t1(i,j,P,y) cre(x) des(y) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,y) cre(x) des(Q) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,Q,x) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,Q) t1(i,j,P,y) cre(x) des(y) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,x) cre(y) des(Q) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,y) cre(x) des(Q) 
 (  -1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,z) cre(x) cre(y) des(Q) des(z) 

Total terms : 23
SQA automation time :  1.834 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 36 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) Y_KLWU__abab(R,i,j,x,Q) t1(j,i,P,x) 
 (  -1.00000) Y_KLWU__abba(R,i,j,Q,x) t1(j,i,P,x) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,Q) t1(i,k,P,x) 
 (   1.00000) Y_KLWU__baba(R,i,j,Q,x) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,Q,x) t1(i,j,P,x) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,Q,x) t1(j,i,P,x) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,Q) t1(i,j,P,x) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,Q) t1(j,i,P,x) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,Q) t1(j,i,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,y) t1(j,i,P,x) rdm(Q,y) 
 (   0.16667) Y_KLWU__abab(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,x,y) 
 (   0.33333) Y_KLWU__abab(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,y,x) 
 (   0.50000) Y_KLWU__abba(R,i,j,Q,x) t1(j,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,y) t1(j,i,P,y) rdm(Q,x) 
 (  -0.33333) Y_KLWU__abba(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,x,y) 
 (  -0.16667) Y_KLWU__abba(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,y,x) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,Q) t1(i,k,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,x) rdm(Q,y) 
 (  -0.16667) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,z) rdm(Q,z,x,y) 
 (  -0.33333) Y_KLWU__baab(R,i,j,x,y) t1(i,k,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__baba(R,i,j,Q,x) t1(i,j,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,y) rdm(Q,x) 
 (   0.33333) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,x,y) 
 (   0.16667) Y_KLWU__baba(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,Q,x) t1(i,j,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,Q,x) t1(j,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,Q) t1(i,j,P,y) rdm(x,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,Q) t1(j,i,P,y) rdm(x,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,x) rdm(Q,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,y) rdm(Q,x) 
 (   0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,x,y) 
 (  -0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,P,z) rdm(Q,z,y,x) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,P,x) rdm(Q,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,P,y) rdm(Q,x) 
 (  -0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,x,y) 
 (   0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,P,z) rdm(Q,z,y,x) 

Total spin-integrated terms: 23
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.117 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_a:f_a, s_a:f_a]  = einsum('RijxQ,jiPx->RPQ', Y_KLWU__abab, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijQx,jiPx->RPQ', Y_KLWU__abba, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijxQ,ikPx->RPQ', Y_KLWU__baab, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijQx,ijPx->RPQ', Y_KLWU__baba, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijQx,ijPx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijQx,jiPx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= einsum('RijxQ,ijPx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += einsum('RijxQ,jiPx->RPQ', Y_KLWU__bbbb, t1_xxaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijxQ,jiPy,xy->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,jiPx,Qy->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,jiPz,Qzxy->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/3 * einsum('Rijxy,jiPz,Qzyx->RPQ', Y_KLWU__abab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijQx,jiPy,xy->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,jiPy,Qx->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/3 * einsum('Rijxy,jiPz,Qzxy->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,jiPz,Qzyx->RPQ', Y_KLWU__abba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijxQ,ikPy,xy->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,ikPx,Qy->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,ikPz,Qzxy->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/3 * einsum('Rijxy,ikPz,Qzyx->RPQ', Y_KLWU__baab, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijQx,ijPy,xy->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,ijPy,Qx->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/3 * einsum('Rijxy,ijPz,Qzxy->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,ijPz,Qzyx->RPQ', Y_KLWU__baba, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijQx,ijPy,xy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijQx,jiPy,xy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('RijxQ,ijPy,xy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('RijxQ,jiPy,xy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,ijPx,Qy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,ijPy,Qx->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,ijPz,Qzxy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,ijPz,Qzyx->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/2 * einsum('Rijxy,jiPx,Qy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/2 * einsum('Rijxy,jiPy,Qx->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] -= 1/6 * einsum('Rijxy,jiPz,Qzxy->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_a:f_a] += 1/6 * einsum('Rijxy,jiPz,Qzyx->RPQ', Y_KLWU__bbbb, t1_xxaa, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ AB ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.042 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ AB ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.040 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  0.516 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,x) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,x) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.139 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_v:f_v] =- einsum('RPixy,Qixy->RPQ', Y_KLWU__aaaa, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__aaaa, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__aaaa, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__aaaa, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__abab, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__abba, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('Rijxy,Qixy->RPQ', Y_KLWU__baab, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__baba, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__aaaa, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/3 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/3 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('Rijxy,Qixz,yz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('Rijxy,Qizw,xywz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/3 * einsum('Rijxy,Qizw,xyzw->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('Rijxy,Qizy,xz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/3 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ JI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.355 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IJ ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,x,y) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  0.523 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,x) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,x) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,x) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(Q,j,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(Q,i,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(Q,i,z,y) rdm(x,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.140 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_v:f_v] =- einsum('RiPxy,Qiyx->RPQ', Y_KLWU__abab, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__abba, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RPixy,Qjyx->RPQ', Y_KLWU__baab, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__baba, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RPixy,Qixy->RPQ', Y_KLWU__bbbb, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RPixy,Qiyx->RPQ', Y_KLWU__bbbb, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += einsum('RiPxy,Qixy->RPQ', Y_KLWU__bbbb, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= einsum('RiPxy,Qiyx->RPQ', Y_KLWU__bbbb, t1_vxaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/3 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__abab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/3 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__abba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qjyz,xz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/3 * einsum('RPixy,Qjzw,xywz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RPixy,Qjzw,xyzw->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qjzx,yz->RPQ', Y_KLWU__baab, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/3 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__baba, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qixz,yz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qiyz,xz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RPixy,Qizw,xywz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RPixy,Qizw,xyzw->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RPixy,Qizx,yz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RPixy,Qizy,xz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qixz,yz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qiyz,xz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/6 * einsum('RiPxy,Qizw,xywz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/6 * einsum('RiPxy,Qizw,xyzw->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] += 1/2 * einsum('RiPxy,Qizx,yz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_v:f_v] -= 1/2 * einsum('RiPxy,Qizy,xz->RPQ', Y_KLWU__bbbb, t1_vxaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ JI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.359 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  1.344 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,y,x) 
 (  -1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,y,x) 
 (  -1.00000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,y,x) 
 (   1.00000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,y,x) 
 (  -1.00000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,x,y) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,P,i,x,y) t1(i,Q,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__aaaa(R,i,P,x,y) t1(i,Q,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,P,i,x,y) t1(i,Q,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,P,i,x,y) t1(i,Q,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,i,j,x,y) t1(i,Q,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,i,P,x,y) t1(i,Q,z,y) rdm(x,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.138 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_a:f_a]  = einsum('RPixy,iQxy->RPQ', Y_KLWU__aaaa, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RPixy,iQyx->RPQ', Y_KLWU__aaaa, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RiPxy,iQxy->RPQ', Y_KLWU__aaaa, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RiPxy,iQyx->RPQ', Y_KLWU__aaaa, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RPixy,iQyx->RPQ', Y_KLWU__abab, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RPixy,iQxy->RPQ', Y_KLWU__abba, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('Rijxy,iQyx->RPQ', Y_KLWU__baab, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RiPxy,iQxy->RPQ', Y_KLWU__baba, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQxz,yz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQyz,xz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RPixy,iQzw,xywz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RPixy,iQzw,xyzw->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQzx,yz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQzy,xz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQxz,yz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQyz,xz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RiPxy,iQzw,xywz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RiPxy,iQzw,xyzw->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQzx,yz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQzy,xz->RPQ', Y_KLWU__aaaa, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQyz,xz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/3 * einsum('RPixy,iQzw,xywz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RPixy,iQzw,xyzw->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQzx,yz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQxz,yz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RPixy,iQzw,xywz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/3 * einsum('RPixy,iQzw,xyzw->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQzy,xz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('Rijxy,iQyz,xz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/3 * einsum('Rijxy,iQzw,xywz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('Rijxy,iQzw,xyzw->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('Rijxy,iQzx,yz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQxz,yz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RiPxy,iQzw,xywz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/3 * einsum('RiPxy,iQzw,xyzw->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQzy,xz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ XI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.954 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,x,y) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,x,z) cre(y) des(z) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,y,z) cre(x) des(z) 
 (   1.00000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,z,w) cre(x) cre(y) des(z) des(w) 

Total terms : 24
SQA automation time :  1.403 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 40 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

4 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,y,x) 
 (   1.00000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,x,y) 
 (  -1.00000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,y,x) 
 (   1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,x,y) 
 (  -1.00000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,y,x) 
 (  -1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,x,y) 
 (   1.00000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,y,x) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,x,z) rdm(y,z) 
 (  -0.16667) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.33333) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__abab(R,i,P,x,y) t1(i,Q,z,y) rdm(x,z) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,y,z) rdm(x,z) 
 (   0.33333) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__abba(R,i,P,x,y) t1(i,Q,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,x,z) rdm(y,z) 
 (   0.16667) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,z,w) rdm(x,y,w,z) 
 (   0.33333) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__baab(R,P,i,x,y) t1(j,Q,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,y,z) rdm(x,z) 
 (  -0.33333) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__baba(R,P,i,x,y) t1(i,Q,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,x,z) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,y,z) rdm(x,z) 
 (  -0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (   0.16667) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (   0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,z,x) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,P,i,x,y) t1(i,Q,z,y) rdm(x,z) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,x,z) rdm(y,z) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,y,z) rdm(x,z) 
 (   0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,w,z) 
 (  -0.16667) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,z,w) rdm(x,y,z,w) 
 (  -0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,z,x) rdm(y,z) 
 (   0.50000) Y_KLWU__bbbb(R,i,P,x,y) t1(i,Q,z,y) rdm(x,z) 

Total spin-integrated terms: 24
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.139 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_c:f_c, s_a:f_a] =- einsum('RiPxy,iQxy->RPQ', Y_KLWU__abab, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RiPxy,iQyx->RPQ', Y_KLWU__abba, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RPixy,jQxy->RPQ', Y_KLWU__baab, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RPixy,iQyx->RPQ', Y_KLWU__baba, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RPixy,iQxy->RPQ', Y_KLWU__bbbb, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RPixy,iQyx->RPQ', Y_KLWU__bbbb, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= einsum('RiPxy,iQxy->RPQ', Y_KLWU__bbbb, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += einsum('RiPxy,iQyx->RPQ', Y_KLWU__bbbb, t1_xaaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQxz,yz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RiPxy,iQzw,xywz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/3 * einsum('RiPxy,iQzw,xyzw->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQzy,xz->RPQ', Y_KLWU__abab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQyz,xz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/3 * einsum('RiPxy,iQzw,xywz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RiPxy,iQzw,xyzw->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQzx,yz->RPQ', Y_KLWU__abba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,jQxz,yz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RPixy,jQzw,xywz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/3 * einsum('RPixy,jQzw,xyzw->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,jQzy,xz->RPQ', Y_KLWU__baab, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQyz,xz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/3 * einsum('RPixy,iQzw,xywz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RPixy,iQzw,xyzw->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQzx,yz->RPQ', Y_KLWU__baba, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQxz,yz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQyz,xz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RPixy,iQzw,xywz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RPixy,iQzw,xyzw->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RPixy,iQzx,yz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RPixy,iQzy,xz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQxz,yz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQyz,xz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/6 * einsum('RiPxy,iQzw,xywz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/6 * einsum('RiPxy,iQzw,xyzw->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ccaa, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] -= 1/2 * einsum('RiPxy,iQzx,yz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
TY[:, s_c:f_c, s_a:f_a] += 1/2 * einsum('RiPxy,iQzy,xz->RPQ', Y_KLWU__bbbb, t1_xaaa, rdm_ca, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ XI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.972 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.702 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ XI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.945 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.712 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ XI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.946 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

-------------------------------------------- CE IA: aa ---------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.730 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

-------------------------------------------- EC AI: aa ---------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.817 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

-------------------------------------------- CE IA: bb ---------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.724 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

-------------------------------------------- EC AI: bb ---------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.823 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IA ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.267 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ AI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.788 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ IA ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.282 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ AI ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.776 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ XA ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.278 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ AX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__abab(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__baab(R,i,j,P,x) t1(i,k,x,Q) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,P) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,P,x) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,P) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,y,Q) cre(x) des(P) 
 (   1.00000) Y_KLWU__abab(R,i,j,P,x) t1(i,j,y,Q) cre(x) des(y) 
 (   1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,y,Q) cre(x) des(P) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,P) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__baab(R,i,j,P,x) t1(i,k,y,Q) cre(x) des(y) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,y,Q) cre(x) des(P) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,P) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 

Total terms : 23
SQA automation time :  1.110 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 36 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -1.00000) Y_KLWU__aaaa(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,P,x) t1(j,i,x,Q) 
 (   1.00000) Y_KLWU__aaaa(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__aaaa(R,i,j,x,P) t1(j,i,x,Q) 
 (   1.00000) Y_KLWU__abab(R,i,j,P,x) t1(j,i,x,Q) 
 (  -1.00000) Y_KLWU__abba(R,i,j,x,P) t1(j,i,x,Q) 
 (  -1.00000) Y_KLWU__baab(R,i,j,P,x) t1(i,k,x,Q) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,P) t1(i,j,x,Q) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,P,x) t1(i,j,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,P,x) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,P) t1(i,j,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,P) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,x,Q) rdm(P,y) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,y,Q) rdm(P,x) 
 (  -0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,x,y) 
 (   0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,x,Q) rdm(P,y) 
 (  -0.50000) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,y,Q) rdm(P,x) 
 (   0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,x,y) 
 (  -0.16667) Y_KLWU__aaaa(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,y,x) 
 (  -0.50000) Y_KLWU__abab(R,i,j,P,x) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,y) t1(j,i,y,Q) rdm(P,x) 
 (   0.33333) Y_KLWU__abab(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,x,y) 
 (   0.16667) Y_KLWU__abab(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,P) t1(j,i,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,y) t1(j,i,x,Q) rdm(P,y) 
 (  -0.16667) Y_KLWU__abba(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,x,y) 
 (  -0.33333) Y_KLWU__abba(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__baab(R,i,j,P,x) t1(i,k,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,y,Q) rdm(P,x) 
 (  -0.33333) Y_KLWU__baab(R,i,j,x,y) t1(i,k,z,Q) rdm(P,z,x,y) 
 (  -0.16667) Y_KLWU__baab(R,i,j,x,y) t1(i,k,z,Q) rdm(P,z,y,x) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,P) t1(i,j,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,x,Q) rdm(P,y) 
 (   0.16667) Y_KLWU__baba(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,x,y) 
 (   0.33333) Y_KLWU__baba(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,y,x) 

Total spin-integrated terms: 23
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.117 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_a:f_a, s_e:f_e] =- einsum('RijPx,ijxQ->RPQ', Y_KLWU__aaaa, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijPx,jixQ->RPQ', Y_KLWU__aaaa, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijxP,ijxQ->RPQ', Y_KLWU__aaaa, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijxP,jixQ->RPQ', Y_KLWU__aaaa, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijPx,jixQ->RPQ', Y_KLWU__abab, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijxP,jixQ->RPQ', Y_KLWU__abba, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijPx,ikxQ->RPQ', Y_KLWU__baab, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijxP,ijxQ->RPQ', Y_KLWU__baba, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijPx,ijyQ,xy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijPx,jiyQ,xy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijxP,ijyQ,xy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijxP,jiyQ,xy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,ijxQ,Py->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,ijyQ,Px->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,ijzQ,Pzxy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,ijzQ,Pzyx->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,jixQ,Py->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,jiyQ,Px->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,jizQ,Pzxy->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,jizQ,Pzyx->RPQ', Y_KLWU__aaaa, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijPx,jiyQ,xy->RPQ', Y_KLWU__abab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,jiyQ,Px->RPQ', Y_KLWU__abab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/3 * einsum('Rijxy,jizQ,Pzxy->RPQ', Y_KLWU__abab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,jizQ,Pzyx->RPQ', Y_KLWU__abab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijxP,jiyQ,xy->RPQ', Y_KLWU__abba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,jixQ,Py->RPQ', Y_KLWU__abba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,jizQ,Pzxy->RPQ', Y_KLWU__abba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/3 * einsum('Rijxy,jizQ,Pzyx->RPQ', Y_KLWU__abba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijPx,ikyQ,xy->RPQ', Y_KLWU__baab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,ikyQ,Px->RPQ', Y_KLWU__baab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/3 * einsum('Rijxy,ikzQ,Pzxy->RPQ', Y_KLWU__baab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,ikzQ,Pzyx->RPQ', Y_KLWU__baab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijxP,ijyQ,xy->RPQ', Y_KLWU__baba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,ijxQ,Py->RPQ', Y_KLWU__baba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,ijzQ,Pzxy->RPQ', Y_KLWU__baba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/3 * einsum('Rijxy,ijzQ,Pzyx->RPQ', Y_KLWU__baba, t1_xxae, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

------------------------------------------------ XA ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------


Total terms : 0
SQA automation time :  0.291 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 0 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------


Total spin-integrated terms: 0
Total spin-adapted terms: 0
Spin-adaptation automation time :  0.000 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 0


--------------------------------------- genEinsum equations ----------------------------------------

----------------------------------------------------------------------------------------------------

------------------------------------------------ AX ------------------------------------------------

## Calculating the excitation operator [q^(0), T - T^\dag] ...
## Calculating the commutator...

## Calculating h [q, T - T^\dag] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (   1.00000) Y_KLWU__abab(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__abba(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,P) t1(i,k,x,Q) 
 (  -1.00000) Y_KLWU__baba(R,i,j,P,x) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__abab(R,i,j,x,P) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__abba(R,i,j,P,x) t1(i,j,y,Q) cre(x) des(y) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,y,Q) cre(x) des(P) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,P) t1(i,k,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__baba(R,i,j,P,x) t1(i,j,y,Q) cre(x) des(y) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,y,Q) cre(x) des(P) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,P,x) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,P) t1(i,j,y,Q) cre(x) des(y) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,x,Q) cre(y) des(P) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,y,Q) cre(x) des(P) 
 (   1.00000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__baab(R,i,j,x,y) t1(i,k,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__baba(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,z,Q) cre(x) cre(y) des(P) des(z) 

Total terms : 23
SQA automation time :  1.177 seconds

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 36 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

0 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (   1.00000) Y_KLWU__abab(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__abba(R,i,j,P,x) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__baab(R,i,j,x,P) t1(k,i,x,Q) 
 (   1.00000) Y_KLWU__baba(R,i,j,P,x) t1(j,i,x,Q) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,P,x) t1(i,j,x,Q) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,P,x) t1(j,i,x,Q) 
 (   1.00000) Y_KLWU__bbbb(R,i,j,x,P) t1(i,j,x,Q) 
 (  -1.00000) Y_KLWU__bbbb(R,i,j,x,P) t1(j,i,x,Q) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,P) t1(i,j,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__abab(R,i,j,x,y) t1(i,j,x,Q) rdm(P,y) 
 (   0.16667) Y_KLWU__abab(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,x,y) 
 (   0.33333) Y_KLWU__abab(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__abba(R,i,j,P,x) t1(i,j,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__abba(R,i,j,x,y) t1(i,j,y,Q) rdm(P,x) 
 (  -0.33333) Y_KLWU__abba(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,x,y) 
 (  -0.16667) Y_KLWU__abba(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,P) t1(k,i,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__baab(R,i,j,x,y) t1(k,i,x,Q) rdm(P,y) 
 (  -0.16667) Y_KLWU__baab(R,i,j,x,y) t1(k,i,z,Q) rdm(P,z,x,y) 
 (  -0.33333) Y_KLWU__baab(R,i,j,x,y) t1(k,i,z,Q) rdm(P,z,y,x) 
 (  -0.50000) Y_KLWU__baba(R,i,j,P,x) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__baba(R,i,j,x,y) t1(j,i,y,Q) rdm(P,x) 
 (   0.33333) Y_KLWU__baba(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,x,y) 
 (   0.16667) Y_KLWU__baba(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,P,x) t1(i,j,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,P,x) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,P) t1(i,j,y,Q) rdm(x,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,P) t1(j,i,y,Q) rdm(x,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,x,Q) rdm(P,y) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,y,Q) rdm(P,x) 
 (  -0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,x,y) 
 (   0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(i,j,z,Q) rdm(P,z,y,x) 
 (   0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,x,Q) rdm(P,y) 
 (  -0.50000) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,y,Q) rdm(P,x) 
 (   0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,x,y) 
 (  -0.16667) Y_KLWU__bbbb(R,i,j,x,y) t1(j,i,z,Q) rdm(P,z,y,x) 

Total spin-integrated terms: 23
Total spin-adapted terms: 36
Spin-adaptation automation time :  0.118 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

0 terms removed:
----------------------------------------------------------------------------------------------------
Remaining terms: 36


--------------------------------------- genEinsum equations ----------------------------------------

TY[:, s_a:f_a, s_e:f_e]  = einsum('RijxP,ijxQ->RPQ', Y_KLWU__abab, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijPx,ijxQ->RPQ', Y_KLWU__abba, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijxP,kixQ->RPQ', Y_KLWU__baab, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijPx,jixQ->RPQ', Y_KLWU__baba, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijPx,ijxQ->RPQ', Y_KLWU__bbbb, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijPx,jixQ->RPQ', Y_KLWU__bbbb, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += einsum('RijxP,ijxQ->RPQ', Y_KLWU__bbbb, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= einsum('RijxP,jixQ->RPQ', Y_KLWU__bbbb, t1_xxae, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijxP,ijyQ,xy->RPQ', Y_KLWU__abab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,ijxQ,Py->RPQ', Y_KLWU__abab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,ijzQ,Pzxy->RPQ', Y_KLWU__abab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/3 * einsum('Rijxy,ijzQ,Pzyx->RPQ', Y_KLWU__abab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijPx,ijyQ,xy->RPQ', Y_KLWU__abba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,ijyQ,Px->RPQ', Y_KLWU__abba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/3 * einsum('Rijxy,ijzQ,Pzxy->RPQ', Y_KLWU__abba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,ijzQ,Pzyx->RPQ', Y_KLWU__abba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijxP,kiyQ,xy->RPQ', Y_KLWU__baab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,kixQ,Py->RPQ', Y_KLWU__baab, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,kizQ,Pzxy->RPQ', Y_KLWU__baab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/3 * einsum('Rijxy,kizQ,Pzyx->RPQ', Y_KLWU__baab, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijPx,jiyQ,xy->RPQ', Y_KLWU__baba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,jiyQ,Px->RPQ', Y_KLWU__baba, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/3 * einsum('Rijxy,jizQ,Pzxy->RPQ', Y_KLWU__baba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,jizQ,Pzyx->RPQ', Y_KLWU__baba, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijPx,ijyQ,xy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijPx,jiyQ,xy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('RijxP,ijyQ,xy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('RijxP,jiyQ,xy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,ijxQ,Py->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,ijyQ,Px->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,ijzQ,Pzxy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,ijzQ,Pzyx->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/2 * einsum('Rijxy,jixQ,Py->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/2 * einsum('Rijxy,jiyQ,Px->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ca, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] += 1/6 * einsum('Rijxy,jizQ,Pzxy->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ccaa, optimize = einsum_type)
TY[:, s_a:f_a, s_e:f_e] -= 1/6 * einsum('Rijxy,jizQ,Pzyx->RPQ', Y_KLWU__bbbb, t1_xxae, rdm_ccaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------
> Total elapsed time: 174.75 seconds.
