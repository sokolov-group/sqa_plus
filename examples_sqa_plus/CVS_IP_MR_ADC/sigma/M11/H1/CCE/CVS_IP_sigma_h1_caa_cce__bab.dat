
----------------------------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------------------------


--------------------------- Spin-Adapted CVS-IP: Sigma H1 CAA_CCE (bab) ----------------------------


## Generating operators ...


## Right operator terms:
 (   0.50000) X_aaa(i,j,a) cre(i) cre(j) des(a) 
 (   0.50000) X_abb(i,j,a) cre(i) cre(j) des(a) 
 (   0.50000) X_bab(i,j,a) cre(i) cre(j) des(a) 

## Left operator terms:
 (   1.00000) cre(Z) des(W) des(K) 

----------------------------------------- Hamiltonian (1) ------------------------------------------

Commutation: Done ...
Done ...
----------------------------------------------------------------------------------------------------
## Calculating the commutator [H(0), a_S^\dag a_T^\dag a_U] ...

## Calculating a_P^\dag a_Q a_R [H(0), a_S^\dag a_T^\dag a_U] ...

------------------------------------------ SQA Automation ------------------------------------------

Computing expectation value with respect to virtual ...
Done!
----------------------------------------------------------------------------------------------------
Normal ordering with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Computing expectation value with respect to core ...
Done!
----------------------------------------------------------------------------------------------------
Contract delta function for non-dummy indices ...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

------------------------------------------ Final results -------------------------------------------

 (  -0.50000) X_abb(k,K,b) v(k,Z,z,b) cre(z) des(W) 
 (   0.50000) X_bab(K,k,b) v(k,Z,z,b) cre(z) des(W) 
 (  -0.50000) X_abb(k,K,b) e(k) t1(k,Z,b,z) cre(z) des(W) 
 (   0.50000) X_abb(k,K,b) e(b) t1(k,Z,b,z) cre(z) des(W) 
 (  -0.50000) X_abb(k,K,b) h(Z,z) t1(k,z,b,w) cre(w) des(W) 
 (   0.50000) X_abb(k,K,b) h(z,w) t1(k,Z,b,z) cre(w) des(W) 
 (   1.00000) X_abb(k,K,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (   1.00000) X_abb(k,K,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (   1.00000) X_abb(k,K,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (   1.00000) X_abb(k,K,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (   0.50000) X_bab(K,k,b) e(k) t1(k,Z,b,z) cre(z) des(W) 
 (  -0.50000) X_bab(K,k,b) e(b) t1(k,Z,b,z) cre(z) des(W) 
 (   0.50000) X_bab(K,k,b) h(Z,z) t1(k,z,b,w) cre(w) des(W) 
 (  -0.50000) X_bab(K,k,b) h(z,w) t1(k,Z,b,z) cre(w) des(W) 
 (  -1.00000) X_bab(K,k,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (  -1.00000) X_bab(K,k,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (  -1.00000) X_bab(K,k,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (  -1.00000) X_bab(K,k,b) t1(k,Z,b,z) v(l,z,l,w) cre(w) des(W) 
 (   0.50000) X_abb(k,K,b) v(k,z,w,b) cre(Z) cre(w) des(W) des(z) 
 (  -0.50000) X_bab(K,k,b) v(k,z,w,b) cre(Z) cre(w) des(W) des(z) 
 (   0.50000) X_abb(k,K,b) e(k) t1(k,z,b,w) cre(Z) cre(w) des(W) des(z) 
 (  -0.50000) X_abb(k,K,b) e(b) t1(k,z,b,w) cre(Z) cre(w) des(W) des(z) 
 (  -0.50000) X_abb(k,K,b) h(z,w) t1(k,u,b,z) cre(Z) cre(w) des(W) des(u) 
 (   0.50000) X_abb(k,K,b) h(z,w) t1(k,z,b,u) cre(Z) cre(u) des(W) des(w) 
 (  -0.25000) X_abb(k,K,b) t1(k,Z,b,z) v(z,w,u,v) cre(u) cre(v) des(W) des(w) 
 (  -0.50000) X_abb(k,K,b) t1(k,Z,b,z) v(z,w,u,v) cre(u) cre(v) des(W) des(w) 
 (  -0.50000) X_abb(k,K,b) t1(k,z,b,w) v(Z,w,u,v) cre(u) cre(v) des(W) des(z) 
 (   0.50000) X_abb(k,K,b) t1(k,z,b,w) v(Z,u,z,v) cre(w) cre(v) des(W) des(u) 
 (   0.50000) X_abb(k,K,b) t1(k,z,b,w) v(Z,u,z,v) cre(w) cre(v) des(W) des(u) 
 (  -1.00000) X_abb(k,K,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (  -1.00000) X_abb(k,K,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (  -1.00000) X_abb(k,K,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (  -1.00000) X_abb(k,K,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (  -0.50000) X_bab(K,k,b) e(k) t1(k,z,b,w) cre(Z) cre(w) des(W) des(z) 
 (   0.50000) X_bab(K,k,b) e(b) t1(k,z,b,w) cre(Z) cre(w) des(W) des(z) 
 (   0.50000) X_bab(K,k,b) h(z,w) t1(k,u,b,z) cre(Z) cre(w) des(W) des(u) 
 (  -0.50000) X_bab(K,k,b) h(z,w) t1(k,z,b,u) cre(Z) cre(u) des(W) des(w) 
 (   0.25000) X_bab(K,k,b) t1(k,Z,b,z) v(z,w,u,v) cre(u) cre(v) des(W) des(w) 
 (   0.50000) X_bab(K,k,b) t1(k,Z,b,z) v(z,w,u,v) cre(u) cre(v) des(W) des(w) 
 (   0.50000) X_bab(K,k,b) t1(k,z,b,w) v(Z,w,u,v) cre(u) cre(v) des(W) des(z) 
 (  -0.50000) X_bab(K,k,b) t1(k,z,b,w) v(Z,u,z,v) cre(w) cre(v) des(W) des(u) 
 (  -0.50000) X_bab(K,k,b) t1(k,z,b,w) v(Z,u,z,v) cre(w) cre(v) des(W) des(u) 
 (   1.00000) X_bab(K,k,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (   1.00000) X_bab(K,k,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (   1.00000) X_bab(K,k,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (   1.00000) X_bab(K,k,b) t1(k,z,b,w) v(l,w,l,u) cre(Z) cre(u) des(W) des(z) 
 (   0.50000) X_abb(k,K,b) t1(k,z,b,w) v(z,u,v,s) cre(Z) cre(w) cre(u) des(W) des(v) des(s) 
 (   0.25000) X_abb(k,K,b) t1(k,z,b,w) v(z,u,v,s) cre(Z) cre(w) cre(u) des(W) des(v) des(s) 
 (  -0.25000) X_abb(k,K,b) t1(k,z,b,w) v(w,u,v,s) cre(Z) cre(v) cre(s) des(W) des(z) des(u) 
 (  -0.50000) X_abb(k,K,b) t1(k,z,b,w) v(w,u,v,s) cre(Z) cre(v) cre(s) des(W) des(z) des(u) 
 (  -0.50000) X_bab(K,k,b) t1(k,z,b,w) v(z,u,v,s) cre(Z) cre(w) cre(u) des(W) des(v) des(s) 
 (  -0.25000) X_bab(K,k,b) t1(k,z,b,w) v(z,u,v,s) cre(Z) cre(w) cre(u) des(W) des(v) des(s) 
 (   0.25000) X_bab(K,k,b) t1(k,z,b,w) v(w,u,v,s) cre(Z) cre(v) cre(s) des(W) des(z) des(u) 
 (   0.50000) X_bab(K,k,b) t1(k,z,b,w) v(w,u,v,s) cre(Z) cre(v) cre(s) des(W) des(z) des(u) 

Total terms : 54
SQA automation time :  229.110 seconds
----------------------------------------------------------------------------------------------------

----------------------- Converting Sigma vector to spin-adapted formulation ------------------------

----------------------------------------------------------------------------------------------------

------------------------ Converting Spin-Integrated Tensors to Spin-Adapted ------------------------

----------------------------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------------------------

Combining 142 spin-adapted terms...

Reorder 2e- integrals in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

52 spin-adapted terms combined.
----------------------------------------------------------------------------------------------------

-------------------------------------- Spin-adapted equations --------------------------------------

 (  -0.25000) X_abb(k,K,b) v(k,z,Z,b) rdm(W,z) 
 (   0.08333) X_abb(k,K,b) v(k,z,w,b) rdm(W,w,Z,z) 
 (   0.16667) X_abb(k,K,b) v(k,z,w,b) rdm(W,w,z,Z) 
 (   0.25000) X_bab(K,k,b) v(k,z,Z,b) rdm(W,z) 
 (  -0.08333) X_bab(K,k,b) v(k,z,w,b) rdm(W,w,Z,z) 
 (  -0.16667) X_bab(K,k,b) v(k,z,w,b) rdm(W,w,z,Z) 
 (  -0.25000) X_abb(k,K,b) e(b) t1(k,Z,z,b) rdm(W,z) 
 (   0.08333) X_abb(k,K,b) e(b) t1(k,z,w,b) rdm(W,z,Z,w) 
 (   0.16667) X_abb(k,K,b) e(b) t1(k,z,w,b) rdm(W,z,w,Z) 
 (   0.25000) X_abb(k,K,b) e(k) t1(k,Z,z,b) rdm(W,z) 
 (  -0.08333) X_abb(k,K,b) e(k) t1(k,z,w,b) rdm(W,z,Z,w) 
 (  -0.16667) X_abb(k,K,b) e(k) t1(k,z,w,b) rdm(W,z,w,Z) 
 (   0.25000) X_abb(k,K,b) h(Z,z) t1(k,z,w,b) rdm(W,w) 
 (  -0.25000) X_abb(k,K,b) h(z,w) t1(k,Z,z,b) rdm(W,w) 
 (   0.08333) X_abb(k,K,b) h(z,w) t1(k,u,z,b) rdm(W,u,Z,w) 
 (   0.16667) X_abb(k,K,b) h(z,w) t1(k,u,z,b) rdm(W,u,w,Z) 
 (  -0.08333) X_abb(k,K,b) h(z,w) t1(k,z,u,b) rdm(W,w,Z,u) 
 (  -0.16667) X_abb(k,K,b) h(z,w) t1(k,z,u,b) rdm(W,w,u,Z) 
 (  -1.00000) X_abb(k,K,b) t1(k,Z,z,b) v(l,l,z,w) rdm(W,w) 
 (   0.50000) X_abb(k,K,b) t1(k,Z,z,b) v(l,z,w,l) rdm(W,w) 
 (  -1.00000) X_abb(k,K,b) t1(k,Z,z,b) v(l,l,z,w) rdm(W,w) 
 (   0.50000) X_abb(k,K,b) t1(k,Z,z,b) v(l,z,w,l) rdm(W,w) 
 (  -0.25000) X_abb(k,K,b) t1(k,Z,z,b) v(z,w,u,v) rdm(W,u,w,v) 
 (  -0.08333) X_abb(k,K,b) t1(k,z,w,b) v(Z,u,v,z) rdm(W,v,u,w) 
 (  -0.16667) X_abb(k,K,b) t1(k,z,w,b) v(Z,u,v,z) rdm(W,v,w,u) 
 (   0.08333) X_abb(k,K,b) t1(k,z,w,b) v(Z,u,w,v) rdm(W,z,u,v) 
 (   0.16667) X_abb(k,K,b) t1(k,z,w,b) v(Z,u,w,v) rdm(W,z,v,u) 
 (   0.25000) X_abb(k,K,b) t1(k,z,w,b) v(Z,z,u,v) rdm(W,u,w,v) 
 (   0.33333) X_abb(k,K,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,Z,u) 
 (   0.66667) X_abb(k,K,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,u,Z) 
 (  -0.16667) X_abb(k,K,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,Z,u) 
 (  -0.33333) X_abb(k,K,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,u,Z) 
 (   0.33333) X_abb(k,K,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,Z,u) 
 (   0.66667) X_abb(k,K,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,u,Z) 
 (  -0.16667) X_abb(k,K,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,Z,u) 
 (  -0.33333) X_abb(k,K,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,u,Z) 
 (  -0.02083) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,Z,s,u) 
 (   0.06250) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,Z,u,s) 
 (  -0.02083) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,s,Z,u) 
 (  -0.02083) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,s,u,Z) 
 (   0.14583) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,u,Z,s) 
 (  -0.02083) X_abb(k,K,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,u,s,Z) 
 (   0.06250) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,Z,v,w) 
 (  -0.02083) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,Z,w,v) 
 (   0.06250) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,v,Z,w) 
 (   0.06250) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,v,w,Z) 
 (  -0.10417) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,w,Z,v) 
 (   0.06250) X_abb(k,K,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,w,v,Z) 
 (   0.25000) X_bab(K,k,b) e(b) t1(k,Z,z,b) rdm(W,z) 
 (  -0.08333) X_bab(K,k,b) e(b) t1(k,z,w,b) rdm(W,z,Z,w) 
 (  -0.16667) X_bab(K,k,b) e(b) t1(k,z,w,b) rdm(W,z,w,Z) 
 (  -0.25000) X_bab(K,k,b) e(k) t1(k,Z,z,b) rdm(W,z) 
 (   0.08333) X_bab(K,k,b) e(k) t1(k,z,w,b) rdm(W,z,Z,w) 
 (   0.16667) X_bab(K,k,b) e(k) t1(k,z,w,b) rdm(W,z,w,Z) 
 (  -0.25000) X_bab(K,k,b) h(Z,z) t1(k,z,w,b) rdm(W,w) 
 (   0.25000) X_bab(K,k,b) h(z,w) t1(k,Z,z,b) rdm(W,w) 
 (  -0.08333) X_bab(K,k,b) h(z,w) t1(k,u,z,b) rdm(W,u,Z,w) 
 (  -0.16667) X_bab(K,k,b) h(z,w) t1(k,u,z,b) rdm(W,u,w,Z) 
 (   0.08333) X_bab(K,k,b) h(z,w) t1(k,z,u,b) rdm(W,w,Z,u) 
 (   0.16667) X_bab(K,k,b) h(z,w) t1(k,z,u,b) rdm(W,w,u,Z) 
 (   1.00000) X_bab(K,k,b) t1(k,Z,z,b) v(l,l,z,w) rdm(W,w) 
 (  -0.50000) X_bab(K,k,b) t1(k,Z,z,b) v(l,z,w,l) rdm(W,w) 
 (   1.00000) X_bab(K,k,b) t1(k,Z,z,b) v(l,l,z,w) rdm(W,w) 
 (  -0.50000) X_bab(K,k,b) t1(k,Z,z,b) v(l,z,w,l) rdm(W,w) 
 (   0.25000) X_bab(K,k,b) t1(k,Z,z,b) v(z,w,u,v) rdm(W,u,w,v) 
 (   0.08333) X_bab(K,k,b) t1(k,z,w,b) v(Z,u,v,z) rdm(W,v,u,w) 
 (   0.16667) X_bab(K,k,b) t1(k,z,w,b) v(Z,u,v,z) rdm(W,v,w,u) 
 (  -0.08333) X_bab(K,k,b) t1(k,z,w,b) v(Z,u,w,v) rdm(W,z,u,v) 
 (  -0.16667) X_bab(K,k,b) t1(k,z,w,b) v(Z,u,w,v) rdm(W,z,v,u) 
 (  -0.25000) X_bab(K,k,b) t1(k,z,w,b) v(Z,z,u,v) rdm(W,u,w,v) 
 (  -0.33333) X_bab(K,k,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,Z,u) 
 (  -0.66667) X_bab(K,k,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,u,Z) 
 (   0.16667) X_bab(K,k,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,Z,u) 
 (   0.33333) X_bab(K,k,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,u,Z) 
 (  -0.33333) X_bab(K,k,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,Z,u) 
 (  -0.66667) X_bab(K,k,b) t1(k,z,w,b) v(l,l,w,u) rdm(W,z,u,Z) 
 (   0.16667) X_bab(K,k,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,Z,u) 
 (   0.33333) X_bab(K,k,b) t1(k,z,w,b) v(l,w,u,l) rdm(W,z,u,Z) 
 (   0.02083) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,Z,s,u) 
 (  -0.06250) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,Z,u,s) 
 (   0.02083) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,s,Z,u) 
 (   0.02083) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,s,u,Z) 
 (  -0.14583) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,u,Z,s) 
 (   0.02083) X_bab(K,k,b) t1(k,z,w,b) v(w,u,v,s) rdm(W,z,v,u,s,Z) 
 (  -0.06250) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,Z,v,w) 
 (   0.02083) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,Z,w,v) 
 (  -0.06250) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,v,Z,w) 
 (  -0.06250) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,v,w,Z) 
 (   0.10417) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,w,Z,v) 
 (  -0.06250) X_bab(K,k,b) t1(k,z,w,b) v(z,u,v,s) rdm(W,u,s,w,v,Z) 

Total spin-integrated terms: 54
Total spin-adapted terms: 90
Spin-adaptation automation time :  8.535 seconds
----------------------------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------------------------

--------------------------------------------- WARNING ----------------------------------------------

Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "remove_core_integrals" flag to FALSE to preserve terms

24 terms removed:
 (  -1.00000) X_abb(i,K,a) t1(i,Z,x,a) v(j,j,x,y) rdm(W,y) 
 (   0.50000) X_abb(i,K,a) t1(i,Z,x,a) v(j,x,y,j) rdm(W,y) 
 (  -1.00000) X_abb(i,K,a) t1(i,Z,x,a) v(j,j,x,y) rdm(W,y) 
 (   0.50000) X_abb(i,K,a) t1(i,Z,x,a) v(j,x,y,j) rdm(W,y) 
 (   0.33333) X_abb(i,K,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,Z,z) 
 (   0.66667) X_abb(i,K,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,z,Z) 
 (  -0.16667) X_abb(i,K,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,Z,z) 
 (  -0.33333) X_abb(i,K,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,z,Z) 
 (   0.33333) X_abb(i,K,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,Z,z) 
 (   0.66667) X_abb(i,K,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,z,Z) 
 (  -0.16667) X_abb(i,K,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,Z,z) 
 (  -0.33333) X_abb(i,K,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,z,Z) 
 (   1.00000) X_bab(K,i,a) t1(i,Z,x,a) v(j,j,x,y) rdm(W,y) 
 (  -0.50000) X_bab(K,i,a) t1(i,Z,x,a) v(j,x,y,j) rdm(W,y) 
 (   1.00000) X_bab(K,i,a) t1(i,Z,x,a) v(j,j,x,y) rdm(W,y) 
 (  -0.50000) X_bab(K,i,a) t1(i,Z,x,a) v(j,x,y,j) rdm(W,y) 
 (  -0.33333) X_bab(K,i,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,Z,z) 
 (  -0.66667) X_bab(K,i,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,z,Z) 
 (   0.16667) X_bab(K,i,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,Z,z) 
 (   0.33333) X_bab(K,i,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,z,Z) 
 (  -0.33333) X_bab(K,i,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,Z,z) 
 (  -0.66667) X_bab(K,i,a) t1(i,x,y,a) v(j,j,y,z) rdm(W,x,z,Z) 
 (   0.16667) X_bab(K,i,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,Z,z) 
 (   0.33333) X_bab(K,i,a) t1(i,x,y,a) v(j,y,z,j) rdm(W,x,z,Z) 
----------------------------------------------------------------------------------------------------
Remaining terms: 66


--------------------------------------- genEinsum equations ----------------------------------------

sigma_caa =- 1/4 * einsum('iKa,ixZa,Wx->KWZ', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,ixya,WyZx->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,ixya,WyxZ->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,ixZa,Wx->KWZ', X_bab, v_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,ixya,WyZx->KWZ', X_bab, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_bab, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,a,iZxa,Wx->KWZ', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,i,iZxa,Wx->KWZ', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,i,ixya,WxZy->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,i,ixya,WxyZ->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,Zx,ixya,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,xy,iZxa,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,iZxa,xyzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,ixya,Zxzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwZuz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwuZz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwuzZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 7/48 * einsum('iKa,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwzuZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuZwy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuwZy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuwyZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 5/48 * einsum('iKa,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuywZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,a,iZxa,Wx->KWZ', X_bab, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,a,ixya,WxZy->KWZ', X_bab, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_bab, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,i,iZxa,Wx->KWZ', X_bab, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,i,ixya,WxZy->KWZ', X_bab, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_bab, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,Zx,ixya,Wy->KWZ', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,xy,iZxa,Wy->KWZ', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,xy,izxa,WzZy->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,xy,ixza,WyZz->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwZuz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwuZz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwuzZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 7/48 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwzuZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuZwy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuwZy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuwyZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 5/48 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuywZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
----------------------------------------------------------------------------------------------------

-------------------------------- genEinsum equations --------------------------------

sigma_caa =- 1/4 * einsum('iKa,ixZa,Wx->KWZ', X_abb, v_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,ixya,WyZx->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,ixya,WyxZ->KWZ', X_abb, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,ixZa,Wx->KWZ', X_bab, v_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,ixya,WyZx->KWZ', X_bab, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,ixya,WyxZ->KWZ', X_bab, v_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,a,iZxa,Wx->KWZ', X_abb, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,a,ixya,WxZy->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,a,ixya,WxyZ->KWZ', X_abb, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,i,iZxa,Wx->KWZ', X_abb, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,i,ixya,WxZy->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,i,ixya,WxyZ->KWZ', X_abb, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,Zx,ixya,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,xy,iZxa,Wy->KWZ', X_abb, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,xy,izxa,WzZy->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,xy,izxa,WzyZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,xy,ixza,WyZz->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,xy,ixza,WyzZ->KWZ', X_abb, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('iKa,iZxa,xyzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('iKa,ixya,Zzwx,Wwzy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('iKa,ixya,Zzwx,Wwyz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('iKa,ixya,Zzyw,Wxzw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('iKa,ixya,Zzyw,Wxwz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('iKa,ixya,Zxzw,Wzyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwZuz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,yzwu,WxwZzu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwuZz->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwuzZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 7/48 * einsum('iKa,ixya,yzwu,WxwzZu->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,yzwu,WxwzuZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuZwy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/48 * einsum('iKa,ixya,xzwu,WzuZyw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuwZy->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuwyZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 5/48 * einsum('iKa,ixya,xzwu,WzuyZw->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/16 * einsum('iKa,ixya,xzwu,WzuywZ->KWZ', X_abb, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,a,iZxa,Wx->KWZ', X_bab, e_extern, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,a,ixya,WxZy->KWZ', X_bab, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,a,ixya,WxyZ->KWZ', X_bab, e_extern, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,i,iZxa,Wx->KWZ', X_bab, e_cvs, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,i,ixya,WxZy->KWZ', X_bab, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,i,ixya,WxyZ->KWZ', X_bab, e_cvs, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,Zx,ixya,Wy->KWZ', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,xy,iZxa,Wy->KWZ', X_bab, h_aa, t1_xaae, rdm_ca, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,xy,izxa,WzZy->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,xy,izxa,WzyZ->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,xy,ixza,WyZz->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,xy,ixza,WyzZ->KWZ', X_bab, h_aa, t1_xaae, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/4 * einsum('Kia,iZxa,xyzw,Wzyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/12 * einsum('Kia,ixya,Zzwx,Wwzy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/6 * einsum('Kia,ixya,Zzwx,Wwyz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/12 * einsum('Kia,ixya,Zzyw,Wxzw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/6 * einsum('Kia,ixya,Zzyw,Wxwz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa -= 1/4 * einsum('Kia,ixya,Zxzw,Wzyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_ccaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwZuz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,yzwu,WxwZzu->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwuZz->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwuzZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 7/48 * einsum('Kia,ixya,yzwu,WxwzZu->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,yzwu,WxwzuZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuZwy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 1/48 * einsum('Kia,ixya,xzwu,WzuZyw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuwZy->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuwyZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa += 5/48 * einsum('Kia,ixya,xzwu,WzuyZw->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)
sigma_caa -= 1/16 * einsum('Kia,ixya,xzwu,WzuywZ->KWZ', X_bab, t1_xaae, v_aaaa, rdm_cccaaa, optimize = einsum_type)

-------------------------------------------------------------------------------------

> Total elapsed time: 562.07 seconds.
