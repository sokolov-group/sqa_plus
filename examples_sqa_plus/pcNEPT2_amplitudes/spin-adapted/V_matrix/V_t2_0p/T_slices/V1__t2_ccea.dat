
----------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------
# Spin-Adapted V_{(I,A)}:

# Creating spin-integrated  H^(1) = V + [H^(0), T - T^\dag]:
## Creating spin-integrated  H^(0)...
17 spin-integrated H^(0) terms created.

## Creating spin-integrated T - T^\dag...
108 spin-integrated A terms created.

## Selecting spin-integrated T - T^\dag...
 (   0.50000) t1(c17a,c18a,v15a,a44a) cre(v15a) cre(a44a) des(c18a) des(c17a) 
 (  -0.50000) t1(c17a,c18a,v15a,a44a) cre(c17a) cre(c18a) des(a44a) des(v15a) 
 (   0.50000) t1(c17b,c18b,v15b,a44b) cre(v15b) cre(a44b) des(c18b) des(c17b) 
 (  -0.50000) t1(c17b,c18b,v15b,a44b) cre(c17b) cre(c18b) des(a44b) des(v15b) 
 (   0.50000) t1(c19a,c19b,v16a,a45b) cre(v16a) cre(a45b) des(c19b) des(c19a) 
 (  -0.50000) t1(c19a,c19b,v16a,a45b) cre(c19a) cre(c19b) des(a45b) des(v16a) 
 (   0.50000) t1(c20a,c20b,v16b,a45a) cre(v16b) cre(a45a) des(c20b) des(c20a) 
 (  -0.50000) t1(c20a,c20b,v16b,a45a) cre(c20a) cre(c20b) des(a45a) des(v16b) 
 (   0.50000) t1(c21b,c21a,v17b,a46a) cre(v17b) cre(a46a) des(c21a) des(c21b) 
 (  -0.50000) t1(c21b,c21a,v17b,a46a) cre(c21b) cre(c21a) des(a46a) des(v17b) 
 (   0.50000) t1(c22b,c22a,v17a,a46b) cre(v17a) cre(a46b) des(c22a) des(c22b) 
 (  -0.50000) t1(c22b,c22a,v17a,a46b) cre(c22b) cre(c22a) des(a46b) des(v17a) 
12 spin-integrated A terms selected.

## Calculating [H^(0), T - T^\dag]:
96 spin-integrated terms created.
96 spin-integrated V + H^(1) terms created.

## Creating spin-integrated T - T^\dag...
108 spin-integrated A terms created.

## Calculating [V + H^(1), T - T^\dag]:
9466 spin-integrated terms created.

## Calculating a^\dag_p a_q [V + H^(1), T - T^\dag]:
# Defining a^\dag_p a_q...

## Calculating a^\dag_p a_q [V + H^(1), T - T^\dag]:
9466 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


---------------------------------- SQA Automation --------------------------------

Computing expectation value with respect to virtual:=>
Done!
----------------------------------------------------------------------------------
Normal ordering with respect to core:=>
Done!
----------------------------------------------------------------------------------
Computing expectation value with respect to core:=>
Done!
----------------------------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------

--------------------------------- Final results ----------------------------------

 (  -0.50000) e(A) t1(I,i,x,A) t1(i,x) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,x) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,x) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,x) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,x) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,x) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,y) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,y) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (   0.50000) e(A) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) e(A) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(I) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(I) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(i) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (  -0.50000) e(i) t1(I,i,x,A) t1(i,y) cre(x) des(y) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,y,x,z) cre(y) des(z) 
 (   0.50000) h(x,y) t1(I,i,x,A) t1(i,z) cre(y) des(z) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,z,y,w) cre(z) des(w) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,z,y,w) cre(z) des(w) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,z,y,w) cre(z) des(w) 
 (   0.50000) h(x,y) t1(I,i,x,A) t1(i,z) cre(y) des(z) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,z,y,w) cre(z) des(w) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,z) cre(w) des(y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,z) cre(w) des(y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) cre(y) des(z) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) cre(y) des(z) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,z) cre(w) des(y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,z) cre(w) des(y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) cre(u) des(y) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) cre(y) des(z) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) cre(y) des(z) 
 (  -0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) cre(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(A) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(I) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (   0.25000) e(i) t1(I,i,x,A) t1(i,y,z,w) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,u) cre(y) cre(z) des(w) des(u) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u) cre(z) cre(w) des(y) des(u) 
 (   0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) cre(w) cre(u) des(y) des(v) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) cre(y) cre(z) des(w) des(u) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) cre(z) cre(w) cre(u) des(y) des(v) des(s) 

Total terms : 128
SQA automation time :  125.465 seconds

--------------- Converting Spin-Integrated Tensors to Spin-Adapted ---------------

----------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------

Combining 564 spin-adapted terms...

Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------

440 spin-adapted terms combined.

----------------------------------------------------------------------------------

----------------------------- Spin-adapted equations -----------------------------

 (  -0.50000) e(A) t1(I,i,x,A) t1(i,x) 
 (   1.00000) e(A) t1(i,I,x,A) t1(i,x) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,x) 
 (  -1.00000) e(I) t1(i,I,x,A) t1(i,x) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,x) 
 (  -1.00000) e(i) t1(i,I,x,A) t1(i,x) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,y) 
 (   1.00000) h(x,y) t1(i,I,x,A) t1(i,y) 
 (  -1.00000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (   2.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,y) 
 (   0.50000) v(i,x,y,i) t1(I,j,x,A) t1(j,y) 
 (  -1.00000) v(i,x,y,i) t1(j,I,x,A) t1(j,y) 
 (   0.25000) e(A) t1(I,i,x,A) t1(i,y) rdm(x,y) 
 (   0.12500) e(A) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -0.50000) e(A) t1(I,i,x,A) t1(i,y,x,z) rdm(y,z) 
 (   0.12500) e(A) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   0.25000) e(A) t1(I,i,x,A) t1(i,y,z,x) rdm(y,z) 
 (  -0.50000) e(A) t1(i,I,x,A) t1(i,y) rdm(x,y) 
 (  -0.25000) e(A) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   1.00000) e(A) t1(i,I,x,A) t1(i,y,x,z) rdm(y,z) 
 (  -0.25000) e(A) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -0.50000) e(A) t1(i,I,x,A) t1(i,y,z,x) rdm(y,z) 
 (  -0.25000) e(I) t1(I,i,x,A) t1(i,y) rdm(x,y) 
 (  -0.12500) e(I) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   0.50000) e(I) t1(I,i,x,A) t1(i,y,x,z) rdm(y,z) 
 (  -0.12500) e(I) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -0.25000) e(I) t1(I,i,x,A) t1(i,y,z,x) rdm(y,z) 
 (   0.50000) e(I) t1(i,I,x,A) t1(i,y) rdm(x,y) 
 (   0.25000) e(I) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -1.00000) e(I) t1(i,I,x,A) t1(i,y,x,z) rdm(y,z) 
 (   0.25000) e(I) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   0.50000) e(I) t1(i,I,x,A) t1(i,y,z,x) rdm(y,z) 
 (  -0.25000) e(i) t1(I,i,x,A) t1(i,y) rdm(x,y) 
 (  -0.12500) e(i) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   0.50000) e(i) t1(I,i,x,A) t1(i,y,x,z) rdm(y,z) 
 (  -0.12500) e(i) t1(I,i,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -0.25000) e(i) t1(I,i,x,A) t1(i,y,z,x) rdm(y,z) 
 (   0.50000) e(i) t1(i,I,x,A) t1(i,y) rdm(x,y) 
 (   0.25000) e(i) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (  -1.00000) e(i) t1(i,I,x,A) t1(i,y,x,z) rdm(y,z) 
 (   0.25000) e(i) t1(i,I,x,A) t1(i,y,z,w) rdm(x,y,z,w) 
 (   0.50000) e(i) t1(i,I,x,A) t1(i,y,z,x) rdm(y,z) 
 (   0.25000) h(x,y) t1(I,i,x,A) t1(i,z) rdm(y,z) 
 (   0.12500) h(x,y) t1(I,i,x,A) t1(i,z,w,u) rdm(y,z,w,u) 
 (   0.12500) h(x,y) t1(I,i,x,A) t1(i,z,w,u) rdm(y,z,w,u) 
 (   0.25000) h(x,y) t1(I,i,x,A) t1(i,z,w,y) rdm(z,w) 
 (  -0.50000) h(x,y) t1(I,i,x,A) t1(i,z,y,w) rdm(z,w) 
 (  -0.50000) h(x,y) t1(i,I,x,A) t1(i,z) rdm(y,z) 
 (  -0.25000) h(x,y) t1(i,I,x,A) t1(i,z,w,u) rdm(y,z,w,u) 
 (  -0.25000) h(x,y) t1(i,I,x,A) t1(i,z,w,u) rdm(y,z,w,u) 
 (  -0.50000) h(x,y) t1(i,I,x,A) t1(i,z,w,y) rdm(z,w) 
 (   1.00000) h(x,y) t1(i,I,x,A) t1(i,z,y,w) rdm(z,w) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) rdm(y,z) 
 (   0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,y) rdm(z,w) 
 (  -1.00000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) rdm(z,w) 
 (  -1.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z) rdm(y,z) 
 (  -0.50000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.50000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -1.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,y) rdm(z,w) 
 (   2.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,y,w) rdm(z,w) 
 (  -0.25000) v(i,x,y,i) t1(I,j,x,A) t1(j,z) rdm(y,z) 
 (  -0.12500) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.12500) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.25000) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,y) rdm(z,w) 
 (   0.50000) v(i,x,y,i) t1(I,j,x,A) t1(j,z,y,w) rdm(z,w) 
 (   0.50000) v(i,x,y,i) t1(j,I,x,A) t1(j,z) rdm(y,z) 
 (   0.25000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.25000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.50000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,y) rdm(z,w) 
 (  -1.00000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,y,w) rdm(z,w) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u) rdm(w,z,y,u) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,v,s,y) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,v,y,s) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,s,v,y) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,s,y,v) 
 (   0.04167) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,y,v,s) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,y,s,v) 
 (   0.06250) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(w,z,u,y,v,s) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,w) rdm(z,u,v,y) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) rdm(u,y) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,w,v) rdm(z,u,y,v) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,w,z) rdm(u,y) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,w) rdm(z,y) 
 (  -0.25000) v(x,y,z,w) t1(i,I,x,A) t1(i,u) rdm(w,z,y,u) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,v,s,y) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,v,y,s) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,s,v,y) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,s,y,v) 
 (  -0.08333) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,y,v,s) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,y,s,v) 
 (  -0.12500) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(w,z,u,y,v,s) 
 (  -0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,w) rdm(z,u,v,y) 
 (   0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,z,w) rdm(u,y) 
 (  -0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,w,v) rdm(z,u,y,v) 
 (  -0.25000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,w,z) rdm(u,y) 
 (  -0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,w) rdm(z,y) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u) rdm(z,w,u,y) 
 (   0.06250) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,v,y,s) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,s,v,y) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,s,y,v) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,v,s,y) 
 (   0.04167) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,v,y,s) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,y,s,v) 
 (  -0.02083) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,s) rdm(z,w,u,y,v,s) 
 (   0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,v,z) rdm(w,u,y,v) 
 (   0.12500) v(x,y,z,w) t1(I,i,x,A) t1(i,u,w,z) rdm(u,y) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,v) rdm(w,u,y,v) 
 (  -0.25000) v(x,y,z,w) t1(I,i,x,A) t1(i,u,z,w) rdm(u,y) 
 (  -0.50000) v(x,y,z,w) t1(I,i,x,A) t1(i,z) rdm(w,y) 
 (  -0.25000) v(x,y,z,w) t1(i,I,x,A) t1(i,u) rdm(z,w,u,y) 
 (  -0.12500) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,v,y,s) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,s,v,y) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,s,y,v) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,v,s,y) 
 (  -0.08333) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,v,y,s) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,y,s,v) 
 (   0.04167) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,s) rdm(z,w,u,y,v,s) 
 (  -0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,v,z) rdm(w,u,y,v) 
 (  -0.25000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,w,z) rdm(u,y) 
 (   1.00000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,z,v) rdm(w,u,y,v) 
 (   0.50000) v(x,y,z,w) t1(i,I,x,A) t1(i,u,z,w) rdm(u,y) 
 (   1.00000) v(x,y,z,w) t1(i,I,x,A) t1(i,z) rdm(w,y) 

Total spin-integrated terms: 128
Total spin-adapted terms: 124
Spin-adaptation automation time :  0.741 seconds

----------------------------------------------------------------------------------

------------------------------------ WARNING -------------------------------------
Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "rm_core_int" flag to FALSE to preserve terms

24 terms removed:
 (  -1.00000) v(i,x,i,y) t1(I,j,x,A) t1(j,y) 
 (   2.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,y) 
 (   0.50000) v(i,x,y,i) t1(I,j,x,A) t1(j,y) 
 (  -1.00000) v(i,x,y,i) t1(j,I,x,A) t1(j,y) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z) rdm(y,z) 
 (   0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.25000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.50000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,w,y) rdm(z,w) 
 (  -1.00000) v(i,x,i,y) t1(I,j,x,A) t1(j,z,y,w) rdm(z,w) 
 (  -1.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z) rdm(y,z) 
 (  -0.50000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.50000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -1.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,w,y) rdm(z,w) 
 (   2.00000) v(i,x,i,y) t1(j,I,x,A) t1(j,z,y,w) rdm(z,w) 
 (  -0.25000) v(i,x,y,i) t1(I,j,x,A) t1(j,z) rdm(y,z) 
 (  -0.12500) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.12500) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (  -0.25000) v(i,x,y,i) t1(I,j,x,A) t1(j,z,w,y) rdm(z,w) 
 (   0.50000) v(i,x,y,i) t1(I,j,x,A) t1(j,z,y,w) rdm(z,w) 
 (   0.50000) v(i,x,y,i) t1(j,I,x,A) t1(j,z) rdm(y,z) 
 (   0.25000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.25000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,u) rdm(y,z,w,u) 
 (   0.50000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,w,y) rdm(z,w) 
 (  -1.00000) v(i,x,y,i) t1(j,I,x,A) t1(j,z,y,w) rdm(z,w) 
----------------------------------------------------------------------------------
Remaining terms: 100


# Equations using genEinsum:
V1 =- 1/2 * einsum('A,IixA,ix->IA', e_extern, t1_ccae, t1_ca, optimize = einsum_type)
V1 += einsum('A,iIxA,ix->IA', e_extern, t1_ccae, t1_ca, optimize = einsum_type)
V1 += 1/2 * einsum('I,IixA,ix->IA', e_core, t1_ccae, t1_ca, optimize = einsum_type)
V1 -= einsum('I,iIxA,ix->IA', e_core, t1_ccae, t1_ca, optimize = einsum_type)
V1 += 1/2 * einsum('i,IixA,ix->IA', e_core, t1_ccae, t1_ca, optimize = einsum_type)
V1 -= einsum('i,iIxA,ix->IA', e_core, t1_ccae, t1_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xy,IixA,iy->IA', h_aa, t1_ccae, t1_ca, optimize = einsum_type)
V1 += einsum('xy,iIxA,iy->IA', h_aa, t1_ccae, t1_ca, optimize = einsum_type)
V1 += 1/4 * einsum('A,IixA,iy,xy->IA', e_extern, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('A,IixA,iyzw,xyzw->IA', e_extern, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('A,IixA,iyxz,yz->IA', e_extern, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('A,IixA,iyzw,xyzw->IA', e_extern, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('A,IixA,iyzx,yz->IA', e_extern, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('A,iIxA,iy,xy->IA', e_extern, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('A,iIxA,iyzw,xyzw->IA', e_extern, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += einsum('A,iIxA,iyxz,yz->IA', e_extern, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('A,iIxA,iyzw,xyzw->IA', e_extern, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('A,iIxA,iyzx,yz->IA', e_extern, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('I,IixA,iy,xy->IA', e_core, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/8 * einsum('I,IixA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('I,IixA,iyxz,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/8 * einsum('I,IixA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('I,IixA,iyzx,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('I,iIxA,iy,xy->IA', e_core, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('I,iIxA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('I,iIxA,iyxz,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('I,iIxA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('I,iIxA,iyzx,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('i,IixA,iy,xy->IA', e_core, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/8 * einsum('i,IixA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('i,IixA,iyxz,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/8 * einsum('i,IixA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('i,IixA,iyzx,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/2 * einsum('i,iIxA,iy,xy->IA', e_core, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('i,iIxA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= einsum('i,iIxA,iyxz,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('i,iIxA,iyzw,xyzw->IA', e_core, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('i,iIxA,iyzx,yz->IA', e_core, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('xy,IixA,iz,yz->IA', h_aa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('xy,IixA,izwu,yzwu->IA', h_aa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xy,IixA,izwu,yzwu->IA', h_aa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('xy,IixA,izwy,zw->IA', h_aa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xy,IixA,izyw,zw->IA', h_aa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xy,iIxA,iz,yz->IA', h_aa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('xy,iIxA,izwu,yzwu->IA', h_aa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xy,iIxA,izwu,yzwu->IA', h_aa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xy,iIxA,izwy,zw->IA', h_aa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += einsum('xy,iIxA,izyw,zw->IA', h_aa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IixA,iu,wzyu->IA', v_aaaa, t1_ccae, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,wzuvsy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,wzuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,wzusvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,wzusyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IixA,iuvs,wzuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,wzuysv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IixA,iuvs,wzuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/4 * einsum('xyzw,IixA,iuvw,zuvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,IixA,iuzw,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('xyzw,IixA,iuwv,zuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IixA,iuwz,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('xyzw,IixA,iw,zy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,iIxA,iu,wzyu->IA', v_aaaa, t1_ccae, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,wzuvsy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,wzuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,wzusvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,wzusyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/12 * einsum('xyzw,iIxA,iuvs,wzuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,wzuysv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,iIxA,iuvs,wzuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,iIxA,iuvw,zuvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('xyzw,iIxA,iuzw,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,iIxA,iuwv,zuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,iIxA,iuwz,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,iIxA,iw,zy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IixA,iu,zwuy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IixA,iuvs,zwuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,zwusvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,zwusyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,zwuvsy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IixA,iuvs,zwuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,zwuysv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IixA,iuvs,zwuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/4 * einsum('xyzw,IixA,iuvz,wuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IixA,iuwz,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,IixA,iuzv,wuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,IixA,iuzw,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,IixA,iz,wy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,iIxA,iu,zwuy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,iIxA,iuvs,zwuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,zwusvy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,zwusyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,zwuvsy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/12 * einsum('xyzw,iIxA,iuvs,zwuvys->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,zwuysv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,iIxA,iuvs,zwuyvs->IA', v_aaaa, t1_ccae, t1_caaa, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xyzw,iIxA,iuvz,wuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,iIxA,iuwz,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += einsum('xyzw,iIxA,iuzv,wuyv->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('xyzw,iIxA,iuzw,uy->IA', v_aaaa, t1_ccae, t1_caaa, rdm_ca, optimize = einsum_type)
V1 += einsum('xyzw,iIxA,iz,wy->IA', v_aaaa, t1_ccae, t1_ca, rdm_ca, optimize = einsum_type)
