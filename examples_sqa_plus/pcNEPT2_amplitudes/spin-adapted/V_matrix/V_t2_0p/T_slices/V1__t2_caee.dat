
----------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------
# Spin-Adapted V_{(I,A)}:

# Creating spin-integrated  H^(1) = V + [H^(0), T - T^\dag]:
## Creating spin-integrated  H^(0)...
17 spin-integrated H^(0) terms created.

## Creating spin-integrated T - T^\dag...
108 spin-integrated A terms created.

## Selecting spin-integrated T - T^\dag...
 (   0.50000) t1(c23a,a47a,v18a,v19a) cre(v18a) cre(v19a) des(a47a) des(c23a) 
 (  -0.50000) t1(c23a,a47a,v18a,v19a) cre(c23a) cre(a47a) des(v19a) des(v18a) 
 (   0.50000) t1(c23b,a47b,v18b,v19b) cre(v18b) cre(v19b) des(a47b) des(c23b) 
 (  -0.50000) t1(c23b,a47b,v18b,v19b) cre(c23b) cre(a47b) des(v19b) des(v18b) 
 (   0.50000) t1(c24a,a48b,v20a,v20b) cre(v20a) cre(v20b) des(a48b) des(c24a) 
 (  -0.50000) t1(c24a,a48b,v20a,v20b) cre(c24a) cre(a48b) des(v20b) des(v20a) 
 (   0.50000) t1(c25a,a49b,v21b,v21a) cre(v21b) cre(v21a) des(a49b) des(c25a) 
 (  -0.50000) t1(c25a,a49b,v21b,v21a) cre(c25a) cre(a49b) des(v21a) des(v21b) 
 (   0.50000) t1(c24b,a48a,v22b,v22a) cre(v22b) cre(v22a) des(a48a) des(c24b) 
 (  -0.50000) t1(c24b,a48a,v22b,v22a) cre(c24b) cre(a48a) des(v22a) des(v22b) 
 (   0.50000) t1(c25b,a49a,v23a,v23b) cre(v23a) cre(v23b) des(a49a) des(c25b) 
 (  -0.50000) t1(c25b,a49a,v23a,v23b) cre(c25b) cre(a49a) des(v23b) des(v23a) 
12 spin-integrated A terms selected.

## Calculating [H^(0), T - T^\dag]:
96 spin-integrated terms created.
96 spin-integrated V + H^(1) terms created.

## Creating spin-integrated T - T^\dag...
108 spin-integrated A terms created.

## Calculating [V + H^(1), T - T^\dag]:
9466 spin-integrated terms created.

## Calculating a^\dag_p a_q [V + H^(1), T - T^\dag]:
# Defining a^\dag_p a_q...

## Calculating a^\dag_p a_q [V + H^(1), T - T^\dag]:
9466 spin-integrated a^\dag_p a_q [V + H1, A1] terms created.


---------------------------------- SQA Automation --------------------------------

Computing expectation value with respect to virtual:=>
Done!
----------------------------------------------------------------------------------
Normal ordering with respect to core:=>
Done!
----------------------------------------------------------------------------------
Computing expectation value with respect to core:=>
Done!
----------------------------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------

--------------------------------- Final results ----------------------------------

 (   0.50000) e(A) t1(I,x,A,a) t1(y,a) cre(y) des(x) 
 (   0.50000) e(A) t1(I,x,A,a) t1(y,a) cre(y) des(x) 
 (  -0.50000) e(I) t1(I,x,A,a) t1(y,a) cre(y) des(x) 
 (  -0.50000) e(I) t1(I,x,A,a) t1(y,a) cre(y) des(x) 
 (   0.50000) e(a) t1(x,a) t1(I,y,A,a) cre(x) des(y) 
 (   0.50000) e(a) t1(x,a) t1(I,y,A,a) cre(x) des(y) 
 (  -0.50000) h(x,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (  -0.50000) h(x,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) cre(z) des(y) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) cre(y) cre(z) des(x) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) cre(x) cre(y) des(z) des(w) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) cre(y) cre(u) des(z) des(w) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) cre(u) cre(v) des(z) des(w) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (  -0.25000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) cre(z) cre(w) des(y) des(u) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 
 (   0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) cre(y) cre(u) cre(v) des(z) des(w) des(s) 

Total terms : 82
SQA automation time :  30.774 seconds

--------------- Converting Spin-Integrated Tensors to Spin-Adapted ---------------

----------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------

Combining 441 spin-adapted terms...

Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------

365 spin-adapted terms combined.

----------------------------------------------------------------------------------

----------------------------- Spin-adapted equations -----------------------------

 (   0.50000) e(A) t1(I,x,A,a) t1(y,a) rdm(y,x) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) rdm(y,z,w,x) 
 (   0.25000) e(A) t1(I,x,A,a) t1(y,z,w,a) rdm(z,y,x,w) 
 (  -0.25000) e(A) t1(I,x,a,A) t1(y,a) rdm(y,x) 
 (  -0.12500) e(A) t1(I,x,a,A) t1(y,z,w,a) rdm(y,z,w,x) 
 (  -0.12500) e(A) t1(I,x,a,A) t1(y,z,w,a) rdm(z,y,x,w) 
 (  -0.50000) e(I) t1(I,x,A,a) t1(y,a) rdm(y,x) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) rdm(y,z,w,x) 
 (  -0.25000) e(I) t1(I,x,A,a) t1(y,z,w,a) rdm(z,y,x,w) 
 (   0.25000) e(I) t1(I,x,a,A) t1(y,a) rdm(y,x) 
 (   0.12500) e(I) t1(I,x,a,A) t1(y,z,w,a) rdm(y,z,w,x) 
 (   0.12500) e(I) t1(I,x,a,A) t1(y,z,w,a) rdm(z,y,x,w) 
 (   0.50000) e(a) t1(x,a) t1(I,y,A,a) rdm(x,y) 
 (  -0.25000) e(a) t1(x,a) t1(I,y,a,A) rdm(x,y) 
 (   0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) rdm(x,y,z,w) 
 (  -0.12500) e(a) t1(x,y,z,a) t1(I,w,a,A) rdm(x,y,z,w) 
 (   0.25000) e(a) t1(x,y,z,a) t1(I,w,A,a) rdm(y,x,w,z) 
 (  -0.12500) e(a) t1(x,y,z,a) t1(I,w,a,A) rdm(y,x,w,z) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) rdm(w,z,y,u) 
 (  -0.50000) h(x,y) t1(I,x,A,a) t1(z,a) rdm(z,y) 
 (  -0.25000) h(x,y) t1(I,x,A,a) t1(z,w,u,a) rdm(z,w,u,y) 
 (   0.12500) h(x,y) t1(I,x,a,A) t1(z,w,u,a) rdm(w,z,y,u) 
 (   0.25000) h(x,y) t1(I,x,a,A) t1(z,a) rdm(z,y) 
 (   0.12500) h(x,y) t1(I,x,a,A) t1(z,w,u,a) rdm(z,w,u,y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) rdm(w,z,y,u) 
 (  -1.00000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) rdm(z,y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) rdm(z,w,u,y) 
 (   0.25000) v(i,x,i,y) t1(I,x,a,A) t1(z,w,u,a) rdm(w,z,y,u) 
 (   0.50000) v(i,x,i,y) t1(I,x,a,A) t1(z,a) rdm(z,y) 
 (   0.25000) v(i,x,i,y) t1(I,x,a,A) t1(z,w,u,a) rdm(z,w,u,y) 
 (   0.25000) v(i,x,y,i) t1(I,x,A,a) t1(z,w,u,a) rdm(w,z,y,u) 
 (   0.50000) v(i,x,y,i) t1(I,x,A,a) t1(z,a) rdm(z,y) 
 (   0.25000) v(i,x,y,i) t1(I,x,A,a) t1(z,w,u,a) rdm(z,w,u,y) 
 (  -0.12500) v(i,x,y,i) t1(I,x,a,A) t1(z,w,u,a) rdm(w,z,y,u) 
 (  -0.25000) v(i,x,y,i) t1(I,x,a,A) t1(z,a) rdm(z,y) 
 (  -0.12500) v(i,x,y,i) t1(I,x,a,A) t1(z,w,u,a) rdm(z,w,u,y) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) rdm(y,u,w,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,s,z,w) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,s,w,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,z,s,w) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,z,w,s) 
 (  -0.08333) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,w,s,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,w,z,s) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) rdm(u,v,w,z) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,w,z,s) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) rdm(v,u,z,w) 
 (   0.12500) v(x,y,z,w) t1(I,x,a,A) t1(u,a) rdm(y,u,w,z) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,s,z,w) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,s,w,z) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,z,s,w) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,z,w,s) 
 (   0.04167) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,w,s,z) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,w,z,s) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,y,a) rdm(u,v,w,z) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,w,z,s) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,y,a) rdm(v,u,z,w) 
 (  -0.25000) v(x,y,z,w) t1(I,x,A,a) t1(u,a) rdm(y,u,w,z) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,u,v,w,s,z) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) rdm(u,v,w,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,s,w,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,s,z,w) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,w,s,z) 
 (  -0.08333) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,w,z,s) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,z,s,w) 
 (   0.04167) v(x,y,z,w) t1(I,x,A,a) t1(u,v,s,a) rdm(y,v,u,z,w,s) 
 (  -0.12500) v(x,y,z,w) t1(I,x,A,a) t1(u,v,y,a) rdm(v,u,z,w) 
 (   0.12500) v(x,y,z,w) t1(I,x,a,A) t1(u,a) rdm(y,u,w,z) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,u,v,w,s,z) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,y,a) rdm(u,v,w,z) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,s,w,z) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,s,z,w) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,w,s,z) 
 (   0.04167) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,w,z,s) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,z,s,w) 
 (  -0.02083) v(x,y,z,w) t1(I,x,a,A) t1(u,v,s,a) rdm(y,v,u,z,w,s) 
 (   0.06250) v(x,y,z,w) t1(I,x,a,A) t1(u,v,y,a) rdm(v,u,z,w) 

Total spin-integrated terms: 82
Total spin-adapted terms: 76
Spin-adaptation automation time :  0.577 seconds

----------------------------------------------------------------------------------

------------------------------------ WARNING -------------------------------------
Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "rm_core_int" flag to FALSE to preserve terms

12 terms removed:
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) rdm(w,z,y,u) 
 (  -1.00000) v(i,x,i,y) t1(I,x,A,a) t1(z,a) rdm(z,y) 
 (  -0.50000) v(i,x,i,y) t1(I,x,A,a) t1(z,w,u,a) rdm(z,w,u,y) 
 (   0.25000) v(i,x,i,y) t1(I,x,a,A) t1(z,w,u,a) rdm(w,z,y,u) 
 (   0.50000) v(i,x,i,y) t1(I,x,a,A) t1(z,a) rdm(z,y) 
 (   0.25000) v(i,x,i,y) t1(I,x,a,A) t1(z,w,u,a) rdm(z,w,u,y) 
 (   0.25000) v(i,x,y,i) t1(I,x,A,a) t1(z,w,u,a) rdm(w,z,y,u) 
 (   0.50000) v(i,x,y,i) t1(I,x,A,a) t1(z,a) rdm(z,y) 
 (   0.25000) v(i,x,y,i) t1(I,x,A,a) t1(z,w,u,a) rdm(z,w,u,y) 
 (  -0.12500) v(i,x,y,i) t1(I,x,a,A) t1(z,w,u,a) rdm(w,z,y,u) 
 (  -0.25000) v(i,x,y,i) t1(I,x,a,A) t1(z,a) rdm(z,y) 
 (  -0.12500) v(i,x,y,i) t1(I,x,a,A) t1(z,w,u,a) rdm(z,w,u,y) 
----------------------------------------------------------------------------------
Remaining terms: 64


# Equations using genEinsum:
V1  = 1/2 * einsum('A,IxAa,ya,yx->IA', e_extern, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('A,IxAa,yzwa,yzwx->IA', e_extern, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('A,IxAa,yzwa,zyxw->IA', e_extern, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('A,IxaA,ya,yx->IA', e_extern, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 -= 1/8 * einsum('A,IxaA,yzwa,yzwx->IA', e_extern, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('A,IxaA,yzwa,zyxw->IA', e_extern, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('I,IxAa,ya,yx->IA', e_core, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('I,IxAa,yzwa,yzwx->IA', e_core, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('I,IxAa,yzwa,zyxw->IA', e_core, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('I,IxaA,ya,yx->IA', e_core, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('I,IxaA,yzwa,yzwx->IA', e_core, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('I,IxaA,yzwa,zyxw->IA', e_core, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/2 * einsum('a,xa,IyAa,xy->IA', e_extern, t1_ae, t1_caee, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('a,xa,IyaA,xy->IA', e_extern, t1_ae, t1_caee, rdm_ca, optimize = einsum_type)
V1 += 1/4 * einsum('a,xyza,IwAa,xyzw->IA', e_extern, t1_aaae, t1_caee, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('a,xyza,IwaA,xyzw->IA', e_extern, t1_aaae, t1_caee, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('a,xyza,IwAa,yxwz->IA', e_extern, t1_aaae, t1_caee, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('a,xyza,IwaA,yxwz->IA', e_extern, t1_aaae, t1_caee, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xy,IxAa,zwua,wzyu->IA', h_aa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/2 * einsum('xy,IxAa,za,zy->IA', h_aa, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 -= 1/4 * einsum('xy,IxAa,zwua,zwuy->IA', h_aa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xy,IxaA,zwua,wzyu->IA', h_aa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/4 * einsum('xy,IxaA,za,zy->IA', h_aa, t1_caee, t1_ae, rdm_ca, optimize = einsum_type)
V1 += 1/8 * einsum('xy,IxaA,zwua,zwuy->IA', h_aa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,IxAa,ua,yuwz->IA', v_aaaa, t1_caee, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yuvszw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yuvswz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yuvzsw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yuvzws->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/12 * einsum('xyzw,IxAa,uvsa,yuvwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yuvwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvya,uvwz->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvsa,yvuwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvya,vuzw->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IxaA,ua,yuwz->IA', v_aaaa, t1_caee, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yuvszw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yuvswz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yuvzsw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yuvzws->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxaA,uvsa,yuvwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yuvwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvya,uvwz->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvsa,yvuwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvya,vuzw->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/4 * einsum('xyzw,IxAa,ua,yuwz->IA', v_aaaa, t1_caee, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvsa,yuvwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvya,uvwz->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yvuswz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yvuszw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yvuwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/12 * einsum('xyzw,IxAa,uvsa,yvuwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yvuzsw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxAa,uvsa,yvuzws->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/8 * einsum('xyzw,IxAa,uvya,vuzw->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 += 1/8 * einsum('xyzw,IxaA,ua,yuwz->IA', v_aaaa, t1_caee, t1_ae, rdm_ccaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvsa,yuvwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvya,uvwz->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yvuswz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yvuszw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yvuwsz->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/24 * einsum('xyzw,IxaA,uvsa,yvuwzs->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yvuzsw->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 -= 1/48 * einsum('xyzw,IxaA,uvsa,yvuzws->IA', v_aaaa, t1_caee, t1_aaae, rdm_cccaaa, optimize = einsum_type)
V1 += 1/16 * einsum('xyzw,IxaA,uvya,vuzw->IA', v_aaaa, t1_caee, t1_aaae, rdm_ccaa, optimize = einsum_type)
