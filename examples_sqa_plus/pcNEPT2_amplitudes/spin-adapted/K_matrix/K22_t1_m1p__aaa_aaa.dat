
----------------------------------------------------------------------------------
sqa_plus: Code generator for quasi-particle systems.
Copyright 2009-2022 SecondQuantizationAlgebra Developers. All Rights Reserved.
Available at https://github.com/sokolov-group/sqa_plus

Licensed under the GNU General Public License v3.0;

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
----------------------------------------------------------------------------------

----------------------------------------------------------------------------------
                              Spin-Adapted t1_m1p K                               
----------------------------------------------------------------------------------

# Create spin-integrated Dyall Hamiltonian ...
## Create K22: a_U^\dag a_V^\dag a_X [H_{act}, a_Y^\dag a_Z a_W] ...

 (   1.00000) cre(U) cre(V) des(X) 
 (   1.00000) cre(Y) des(Z) des(W) 

## Calculating the commutator ...

## Multiply ...
## Compute expected value of spin-integrated K matrix ...

---------------------------------- SQA Automation --------------------------------

Computing expectation value with respect to virtual:=>
Done!
----------------------------------------------------------------------------------
Normal ordering with respect to core:=>
Done!
----------------------------------------------------------------------------------
Computing expectation value with respect to core:=>
Done!
----------------------------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------

--------------------------------- Final results ----------------------------------

 (  -1.00000) h(X,Y) cre(U) cre(V) des(W) des(Z) 
 (  -1.00000) v(i,X,i,Y) cre(U) cre(V) des(W) des(Z) 
 (  -1.00000) v(i,X,i,Y) cre(U) cre(V) des(W) des(Z) 
 (  -1.00000) h(W,x) kdelta(X,Y) cre(U) cre(V) des(Z) des(x) 
 (   1.00000) h(Z,x) kdelta(X,Y) cre(U) cre(V) des(W) des(x) 
 (   0.50000) kdelta(X,Y) v(W,Z,x,y) cre(U) cre(V) des(x) des(y) 
 (  -1.00000) kdelta(X,Y) v(i,W,i,x) cre(U) cre(V) des(Z) des(x) 
 (  -1.00000) kdelta(X,Y) v(i,W,i,x) cre(U) cre(V) des(Z) des(x) 
 (   1.00000) kdelta(X,Y) v(i,Z,i,x) cre(U) cre(V) des(W) des(x) 
 (   1.00000) kdelta(X,Y) v(i,Z,i,x) cre(U) cre(V) des(W) des(x) 
 (   1.00000) h(W,x) cre(U) cre(V) cre(Y) des(X) des(Z) des(x) 
 (  -1.00000) h(Y,x) cre(U) cre(V) cre(x) des(W) des(X) des(Z) 
 (   1.00000) h(Z,x) cre(U) cre(V) cre(Y) des(W) des(X) des(x) 
 (   0.50000) v(W,X,x,y) cre(U) cre(V) cre(Y) des(Z) des(x) des(y) 
 (  -0.50000) v(W,Z,x,y) cre(U) cre(V) cre(Y) des(X) des(x) des(y) 
 (   1.00000) v(i,W,i,x) cre(U) cre(V) cre(Y) des(X) des(Z) des(x) 
 (   1.00000) v(i,W,i,x) cre(U) cre(V) cre(Y) des(X) des(Z) des(x) 
 (   0.50000) v(X,Z,x,y) cre(U) cre(V) cre(Y) des(W) des(x) des(y) 
 (  -1.00000) v(X,x,Y,y) cre(U) cre(V) cre(x) des(W) des(Z) des(y) 
 (  -1.00000) v(X,x,Y,y) cre(U) cre(V) cre(x) des(W) des(Z) des(y) 
 (  -1.00000) v(i,Y,i,x) cre(U) cre(V) cre(x) des(W) des(X) des(Z) 
 (  -1.00000) v(i,Y,i,x) cre(U) cre(V) cre(x) des(W) des(X) des(Z) 
 (   1.00000) v(i,Z,i,x) cre(U) cre(V) cre(Y) des(W) des(X) des(x) 
 (   1.00000) v(i,Z,i,x) cre(U) cre(V) cre(Y) des(W) des(X) des(x) 
 (  -0.50000) kdelta(X,Y) v(W,x,y,z) cre(U) cre(V) cre(x) des(Z) des(y) des(z) 
 (  -0.50000) kdelta(X,Y) v(W,x,y,z) cre(U) cre(V) cre(x) des(Z) des(y) des(z) 
 (  -0.50000) kdelta(X,Y) v(W,x,y,z) cre(U) cre(V) cre(x) des(Z) des(y) des(z) 
 (   0.50000) kdelta(X,Y) v(Z,x,y,z) cre(U) cre(V) cre(x) des(W) des(y) des(z) 
 (   0.50000) kdelta(X,Y) v(Z,x,y,z) cre(U) cre(V) cre(x) des(W) des(y) des(z) 
 (   0.50000) kdelta(X,Y) v(Z,x,y,z) cre(U) cre(V) cre(x) des(W) des(y) des(z) 
 (  -0.50000) v(W,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(X) des(Z) des(y) des(z) 
 (  -0.50000) v(W,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(X) des(Z) des(y) des(z) 
 (  -0.50000) v(W,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(X) des(Z) des(y) des(z) 
 (   0.50000) v(Y,x,y,z) cre(U) cre(V) cre(y) cre(z) des(W) des(X) des(Z) des(x) 
 (   0.50000) v(Y,x,y,z) cre(U) cre(V) cre(y) cre(z) des(W) des(X) des(Z) des(x) 
 (   0.50000) v(Y,x,y,z) cre(U) cre(V) cre(y) cre(z) des(W) des(X) des(Z) des(x) 
 (  -0.50000) v(Z,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(W) des(X) des(y) des(z) 
 (  -0.50000) v(Z,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(W) des(X) des(y) des(z) 
 (  -0.50000) v(Z,x,y,z) cre(U) cre(V) cre(Y) cre(x) des(W) des(X) des(y) des(z) 

Total terms : 39
SQA automation time :  0.217 seconds

--------------- Converting Spin-Integrated Tensors to Spin-Adapted ---------------

----------------------------------------------------------------------------------
Convert Cre/Des objects to RDM objects...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices in Chemists' notation...
Done!
----------------------------------------------------------------------------------
Reorder RDM tensor indices according to: alpha < beta
Done!
----------------------------------------------------------------------------------
Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
Converting Kronecker Deltas to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 1e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting 2e- integrals to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting eigenvalues to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting RDMs to spin-adapted formulation...

Converting 1-RDMs to spin-adapted formulation...
Converting 2-RDMs to spin-adapted formulation...
Converting 3-RDMs to spin-adapted formulation...
Converting 4-RDMs to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------
Converting T amplitudes to spin-adapted formulation...
Done!
----------------------------------------------------------------------------------

Combining 288 spin-adapted terms...

Reordering indices according to core < active < virtual...
Done!
----------------------------------------------------------------------------------
Dummy indices relabelling...
Done!
----------------------------------------------------------------------------------

153 spin-adapted terms combined.

----------------------------------------------------------------------------------

----------------------------- Spin-adapted equations -----------------------------

 (   0.08333) h(W,x) rdm(U,V,Y,X,x,Z) 
 (   0.08333) h(W,x) rdm(U,V,Y,Z,X,x) 
 (   0.08333) h(W,x) rdm(U,V,Y,x,Z,X) 
 (   0.16667) h(X,Y) rdm(U,V,W,Z) 
 (  -0.16667) h(X,Y) rdm(U,V,Z,W) 
 (  -0.08333) h(Y,x) rdm(U,V,x,W,Z,X) 
 (  -0.08333) h(Y,x) rdm(U,V,x,X,W,Z) 
 (  -0.08333) h(Y,x) rdm(U,V,x,Z,X,W) 
 (   0.08333) h(Z,x) rdm(U,V,Y,W,x,X) 
 (   0.08333) h(Z,x) rdm(U,V,Y,X,W,x) 
 (   0.08333) h(Z,x) rdm(U,V,Y,x,X,W) 
 (  -0.04167) v(W,X,x,y) rdm(U,V,Y,Z,x,y) 
 (   0.04167) v(W,X,x,y) rdm(U,V,Y,Z,y,x) 
 (   0.04167) v(W,X,x,y) rdm(U,V,Y,x,Z,y) 
 (  -0.04167) v(W,X,x,y) rdm(U,V,Y,x,y,Z) 
 (  -0.04167) v(W,X,x,y) rdm(U,V,Y,y,Z,x) 
 (   0.04167) v(W,X,x,y) rdm(U,V,Y,y,x,Z) 
 (   0.04167) v(W,Z,x,y) rdm(U,V,Y,X,x,y) 
 (  -0.04167) v(W,Z,x,y) rdm(U,V,Y,X,y,x) 
 (  -0.04167) v(W,Z,x,y) rdm(U,V,Y,x,X,y) 
 (   0.04167) v(W,Z,x,y) rdm(U,V,Y,x,y,X) 
 (   0.04167) v(W,Z,x,y) rdm(U,V,Y,y,X,x) 
 (  -0.04167) v(W,Z,x,y) rdm(U,V,Y,y,x,X) 
 (   0.02500) v(W,x,y,z) rdm(U,V,Y,x,X,y,Z,z) 
 (   0.03333) v(W,x,y,z) rdm(U,V,Y,x,X,y,z,Z) 
 (  -0.09167) v(W,x,y,z) rdm(U,V,Y,x,X,z,Z,y) 
 (   0.01667) v(W,x,y,z) rdm(U,V,Y,x,Z,X,y,z) 
 (  -0.06667) v(W,x,y,z) rdm(U,V,Y,x,Z,X,z,y) 
 (   0.00833) v(W,x,y,z) rdm(U,V,Y,x,Z,y,X,z) 
 (   0.01667) v(W,x,y,z) rdm(U,V,Y,x,Z,y,z,X) 
 (  -0.02500) v(W,x,y,z) rdm(U,V,Y,x,Z,z,X,y) 
 (  -0.01667) v(W,x,y,z) rdm(U,V,Y,x,Z,z,y,X) 
 (  -0.20833) v(W,x,y,z) rdm(U,V,Y,x,y,X,Z,z) 
 (  -0.11667) v(W,x,y,z) rdm(U,V,Y,x,y,X,z,Z) 
 (   0.00833) v(W,x,y,z) rdm(U,V,Y,x,y,Z,X,z) 
 (  -0.06667) v(W,x,y,z) rdm(U,V,Y,x,y,Z,z,X) 
 (  -0.07500) v(W,x,y,z) rdm(U,V,Y,x,y,z,X,Z) 
 (  -0.15833) v(W,x,y,z) rdm(U,V,Y,x,y,z,Z,X) 
 (  -0.12500) v(W,x,y,z) rdm(U,V,Y,x,z,X,Z,y) 
 (  -0.03333) v(W,x,y,z) rdm(U,V,Y,x,z,X,y,Z) 
 (   0.00833) v(W,x,y,z) rdm(U,V,Y,x,z,Z,X,y) 
 (   0.01667) v(W,x,y,z) rdm(U,V,Y,x,z,Z,y,X) 
 (   0.04167) v(W,x,y,z) rdm(U,V,Y,x,z,y,X,Z) 
 (  -0.04167) v(W,x,y,z) rdm(U,V,Y,x,z,y,Z,X) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,X,x,Z) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,Z,X,x) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,x,Z,X) 
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,X,x,Z) 
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,Z,X,x) 
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,x,Z,X) 
 (  -0.04167) v(X,Z,x,y) rdm(U,V,Y,W,x,y) 
 (   0.04167) v(X,Z,x,y) rdm(U,V,Y,W,y,x) 
 (   0.04167) v(X,Z,x,y) rdm(U,V,Y,x,W,y) 
 (  -0.04167) v(X,Z,x,y) rdm(U,V,Y,x,y,W) 
 (  -0.04167) v(X,Z,x,y) rdm(U,V,Y,y,W,x) 
 (   0.04167) v(X,Z,x,y) rdm(U,V,Y,y,x,W) 
 (   0.16667) v(X,x,Y,y) rdm(U,V,x,W,Z,y) 
 (  -0.16667) v(X,x,Y,y) rdm(U,V,x,Z,W,y) 
 (   0.08333) v(X,x,y,Y) rdm(U,V,x,W,y,Z) 
 (   0.08333) v(X,x,y,Y) rdm(U,V,x,Z,W,y) 
 (   0.08333) v(X,x,y,Y) rdm(U,V,x,y,Z,W) 
 (   0.33333) v(i,X,i,Y) rdm(U,V,W,Z) 
 (  -0.33333) v(i,X,i,Y) rdm(U,V,Z,W) 
 (  -0.16667) v(i,X,Y,i) rdm(U,V,W,Z) 
 (   0.16667) v(i,X,Y,i) rdm(U,V,Z,W) 
 (  -0.03333) v(Y,x,y,z) rdm(U,V,y,z,W,Z,x,X) 
 (   0.09167) v(Y,x,y,z) rdm(U,V,y,z,W,x,X,Z) 
 (  -0.02500) v(Y,x,y,z) rdm(U,V,y,z,W,x,Z,X) 
 (  -0.01667) v(Y,x,y,z) rdm(U,V,y,z,X,W,Z,x) 
 (   0.06667) v(Y,x,y,z) rdm(U,V,y,z,X,W,x,Z) 
 (   0.00833) v(Y,x,y,z) rdm(U,V,y,z,X,x,W,Z) 
 (   0.00833) v(Y,x,y,z) rdm(U,V,y,z,X,x,Z,W) 
 (   0.21667) v(Y,x,y,z) rdm(U,V,y,z,Z,W,X,x) 
 (   0.10000) v(Y,x,y,z) rdm(U,V,y,z,Z,W,x,X) 
 (  -0.01667) v(Y,x,y,z) rdm(U,V,y,z,Z,X,W,x) 
 (   0.06667) v(Y,x,y,z) rdm(U,V,y,z,Z,X,x,W) 
 (   0.04167) v(Y,x,y,z) rdm(U,V,y,z,Z,x,W,X) 
 (   0.15833) v(Y,x,y,z) rdm(U,V,y,z,Z,x,X,W) 
 (   0.14167) v(Y,x,y,z) rdm(U,V,y,z,x,W,X,Z) 
 (   0.02500) v(Y,x,y,z) rdm(U,V,y,z,x,W,Z,X) 
 (  -0.00833) v(Y,x,y,z) rdm(U,V,y,z,x,X,W,Z) 
 (  -0.00833) v(Y,x,y,z) rdm(U,V,y,z,x,X,Z,W) 
 (  -0.04167) v(Y,x,y,z) rdm(U,V,y,z,x,Z,W,X) 
 (   0.07500) v(Y,x,y,z) rdm(U,V,y,z,x,Z,X,W) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,W,Z,X) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,X,W,Z) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,Z,X,W) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,W,Z,X) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,X,W,Z) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,Z,X,W) 
 (   0.02500) v(Z,x,y,z) rdm(U,V,Y,x,W,y,X,z) 
 (   0.03333) v(Z,x,y,z) rdm(U,V,Y,x,W,y,z,X) 
 (  -0.09167) v(Z,x,y,z) rdm(U,V,Y,x,W,z,X,y) 
 (   0.01667) v(Z,x,y,z) rdm(U,V,Y,x,X,W,y,z) 
 (  -0.06667) v(Z,x,y,z) rdm(U,V,Y,x,X,W,z,y) 
 (   0.00833) v(Z,x,y,z) rdm(U,V,Y,x,X,y,W,z) 
 (   0.01667) v(Z,x,y,z) rdm(U,V,Y,x,X,y,z,W) 
 (  -0.02500) v(Z,x,y,z) rdm(U,V,Y,x,X,z,W,y) 
 (  -0.01667) v(Z,x,y,z) rdm(U,V,Y,x,X,z,y,W) 
 (  -0.20833) v(Z,x,y,z) rdm(U,V,Y,x,y,W,X,z) 
 (  -0.11667) v(Z,x,y,z) rdm(U,V,Y,x,y,W,z,X) 
 (   0.00833) v(Z,x,y,z) rdm(U,V,Y,x,y,X,W,z) 
 (  -0.06667) v(Z,x,y,z) rdm(U,V,Y,x,y,X,z,W) 
 (  -0.07500) v(Z,x,y,z) rdm(U,V,Y,x,y,z,W,X) 
 (  -0.15833) v(Z,x,y,z) rdm(U,V,Y,x,y,z,X,W) 
 (  -0.12500) v(Z,x,y,z) rdm(U,V,Y,x,z,W,X,y) 
 (  -0.03333) v(Z,x,y,z) rdm(U,V,Y,x,z,W,y,X) 
 (   0.00833) v(Z,x,y,z) rdm(U,V,Y,x,z,X,W,y) 
 (   0.01667) v(Z,x,y,z) rdm(U,V,Y,x,z,X,y,W) 
 (   0.04167) v(Z,x,y,z) rdm(U,V,Y,x,z,y,W,X) 
 (  -0.04167) v(Z,x,y,z) rdm(U,V,Y,x,z,y,X,W) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,W,x,X) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,X,W,x) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,x,X,W) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,W,x,X) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,X,W,x) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,x,X,W) 
 (   0.16667) h(W,x) kdelta(X,Y) rdm(U,V,Z,x) 
 (  -0.16667) h(W,x) kdelta(X,Y) rdm(U,V,x,Z) 
 (  -0.16667) h(Z,x) kdelta(X,Y) rdm(U,V,W,x) 
 (   0.16667) h(Z,x) kdelta(X,Y) rdm(U,V,x,W) 
 (  -0.16667) kdelta(X,Y) v(W,Z,x,y) rdm(U,V,x,y) 
 (   0.16667) kdelta(X,Y) v(W,Z,x,y) rdm(U,V,y,x) 
 (   0.16667) kdelta(X,Y) v(W,x,y,z) rdm(U,V,x,Z,y,z) 
 (  -0.16667) kdelta(X,Y) v(W,x,y,z) rdm(U,V,x,y,Z,z) 
 (  -0.16667) kdelta(X,Y) v(i,W,x,i) rdm(U,V,Z,x) 
 (   0.16667) kdelta(X,Y) v(i,W,x,i) rdm(U,V,x,Z) 
 (   0.33333) kdelta(X,Y) v(i,W,i,x) rdm(U,V,Z,x) 
 (  -0.33333) kdelta(X,Y) v(i,W,i,x) rdm(U,V,x,Z) 
 (  -0.16667) kdelta(X,Y) v(Z,x,y,z) rdm(U,V,x,W,y,z) 
 (   0.16667) kdelta(X,Y) v(Z,x,y,z) rdm(U,V,x,y,W,z) 
 (   0.16667) kdelta(X,Y) v(i,Z,x,i) rdm(U,V,W,x) 
 (  -0.16667) kdelta(X,Y) v(i,Z,x,i) rdm(U,V,x,W) 
 (  -0.33333) kdelta(X,Y) v(i,Z,i,x) rdm(U,V,W,x) 
 (   0.33333) kdelta(X,Y) v(i,Z,i,x) rdm(U,V,x,W) 

Total spin-integrated terms: 39
Total spin-adapted terms: 135
Spin-adaptation automation time :  47.853 seconds

----------------------------------------------------------------------------------

------------------------------------ WARNING -------------------------------------
Terms with a contraction over repeating dummy core indices of 2e- integrals
will be removed. Set "rm_core_int" flag to FALSE to preserve terms

30 terms removed:
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,X,x,Z) 
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,Z,X,x) 
 (   0.16667) v(i,W,i,x) rdm(U,V,Y,x,Z,X) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,X,x,Z) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,Z,X,x) 
 (  -0.08333) v(i,W,x,i) rdm(U,V,Y,x,Z,X) 
 (  -0.16667) v(i,X,Y,i) rdm(U,V,W,Z) 
 (   0.16667) v(i,X,Y,i) rdm(U,V,Z,W) 
 (   0.33333) v(i,X,i,Y) rdm(U,V,W,Z) 
 (  -0.33333) v(i,X,i,Y) rdm(U,V,Z,W) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,W,Z,X) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,X,W,Z) 
 (  -0.16667) v(i,Y,i,x) rdm(U,V,x,Z,X,W) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,W,Z,X) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,X,W,Z) 
 (   0.08333) v(i,Y,x,i) rdm(U,V,x,Z,X,W) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,W,x,X) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,X,W,x) 
 (   0.16667) v(i,Z,i,x) rdm(U,V,Y,x,X,W) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,W,x,X) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,X,W,x) 
 (  -0.08333) v(i,Z,x,i) rdm(U,V,Y,x,X,W) 
 (   0.33333) kdelta(X,Y) v(i,W,i,x) rdm(U,V,Z,x) 
 (  -0.33333) kdelta(X,Y) v(i,W,i,x) rdm(U,V,x,Z) 
 (  -0.16667) kdelta(X,Y) v(i,W,x,i) rdm(U,V,Z,x) 
 (   0.16667) kdelta(X,Y) v(i,W,x,i) rdm(U,V,x,Z) 
 (  -0.33333) kdelta(X,Y) v(i,Z,i,x) rdm(U,V,W,x) 
 (   0.33333) kdelta(X,Y) v(i,Z,i,x) rdm(U,V,x,W) 
 (   0.16667) kdelta(X,Y) v(i,Z,x,i) rdm(U,V,W,x) 
 (  -0.16667) kdelta(X,Y) v(i,Z,x,i) rdm(U,V,x,W) 
----------------------------------------------------------------------------------
Remaining terms: 105


-------------------------------- genEinsum equations --------------------------------

K22_aaa_aaa  = 1/12 * einsum('Wx,UVYXxZ->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('Wx,UVYZXx->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('Wx,UVYxZX->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('XY,UVWZ->UVXWZY', h_aa, rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('XY,UVZW->UVXWZY', h_aa, rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa -= 1/12 * einsum('Yx,UVxWZX->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/12 * einsum('Yx,UVxXWZ->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/12 * einsum('Yx,UVxZXW->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('Zx,UVYWxX->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('Zx,UVYXWx->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('Zx,UVYxXW->UVXWZY', h_aa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WXxy,UVYZxy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WXxy,UVYZyx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WXxy,UVYxZy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WXxy,UVYxyZ->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WXxy,UVYyZx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WXxy,UVYyxZ->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WZxy,UVYXxy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WZxy,UVYXyx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WZxy,UVYxXy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WZxy,UVYxyX->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('WZxy,UVYyXx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('WZxy,UVYyxX->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/40 * einsum('Wxyz,UVYxXyZz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/30 * einsum('Wxyz,UVYxXyzZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 11/120 * einsum('Wxyz,UVYxXzZy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Wxyz,UVYxZXyz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/15 * einsum('Wxyz,UVYxZXzy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Wxyz,UVYxZyXz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Wxyz,UVYxZyzX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/40 * einsum('Wxyz,UVYxZzXy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/60 * einsum('Wxyz,UVYxZzyX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 5/24 * einsum('Wxyz,UVYxyXZz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 7/60 * einsum('Wxyz,UVYxyXzZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Wxyz,UVYxyZXz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/15 * einsum('Wxyz,UVYxyZzX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 3/40 * einsum('Wxyz,UVYxyzXZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 19/120 * einsum('Wxyz,UVYxyzZX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/8 * einsum('Wxyz,UVYxzXZy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/30 * einsum('Wxyz,UVYxzXyZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Wxyz,UVYxzZXy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Wxyz,UVYxzZyX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('Wxyz,UVYxzyXZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('Wxyz,UVYxzyZX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('XZxy,UVYWxy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('XZxy,UVYWyx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('XZxy,UVYxWy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('XZxy,UVYxyW->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('XZxy,UVYyWx->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('XZxy,UVYyxW->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('XxYy,UVxWZy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('XxYy,UVxZWy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('XxyY,UVxWyZ->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('XxyY,UVxZWy->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/12 * einsum('XxyY,UVxyZW->UVXWZY', v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/30 * einsum('Yxyz,UVyzWZxX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 11/120 * einsum('Yxyz,UVyzWxXZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/40 * einsum('Yxyz,UVyzWxZX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/60 * einsum('Yxyz,UVyzXWZx->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/15 * einsum('Yxyz,UVyzXWxZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Yxyz,UVyzXxWZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Yxyz,UVyzXxZW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 13/60 * einsum('Yxyz,UVyzZWXx->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/10 * einsum('Yxyz,UVyzZWxX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/60 * einsum('Yxyz,UVyzZXWx->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/15 * einsum('Yxyz,UVyzZXxW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('Yxyz,UVyzZxWX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 19/120 * einsum('Yxyz,UVyzZxXW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 17/120 * einsum('Yxyz,UVyzxWXZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/40 * einsum('Yxyz,UVyzxWZX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/120 * einsum('Yxyz,UVyzxXWZ->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/120 * einsum('Yxyz,UVyzxXZW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('Yxyz,UVyzxZWX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 3/40 * einsum('Yxyz,UVyzxZXW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/40 * einsum('Zxyz,UVYxWyXz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/30 * einsum('Zxyz,UVYxWyzX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 11/120 * einsum('Zxyz,UVYxWzXy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Zxyz,UVYxXWyz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/15 * einsum('Zxyz,UVYxXWzy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Zxyz,UVYxXyWz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Zxyz,UVYxXyzW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/40 * einsum('Zxyz,UVYxXzWy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/60 * einsum('Zxyz,UVYxXzyW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 5/24 * einsum('Zxyz,UVYxyWXz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 7/60 * einsum('Zxyz,UVYxyWzX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Zxyz,UVYxyXWz->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/15 * einsum('Zxyz,UVYxyXzW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 3/40 * einsum('Zxyz,UVYxyzWX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 19/120 * einsum('Zxyz,UVYxyzXW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/8 * einsum('Zxyz,UVYxzWXy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/30 * einsum('Zxyz,UVYxzWyX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/120 * einsum('Zxyz,UVYxzXWy->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/60 * einsum('Zxyz,UVYxzXyW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/24 * einsum('Zxyz,UVYxzyWX->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/24 * einsum('Zxyz,UVYxzyXW->UVXWZY', v_aaaa, rdm_ccccaaaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('Wx,XY,UVZx->UVXWZY', h_aa, np.identity(ncas), rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('Wx,XY,UVxZ->UVXWZY', h_aa, np.identity(ncas), rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('Zx,XY,UVWx->UVXWZY', h_aa, np.identity(ncas), rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('Zx,XY,UVxW->UVXWZY', h_aa, np.identity(ncas), rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('XY,WZxy,UVxy->UVXWZY', np.identity(ncas), v_aaaa, rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('XY,WZxy,UVyx->UVXWZY', np.identity(ncas), v_aaaa, rdm_ccaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('XY,Wxyz,UVxZyz->UVXWZY', np.identity(ncas), v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('XY,Wxyz,UVxyZz->UVXWZY', np.identity(ncas), v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa -= 1/6 * einsum('XY,Zxyz,UVxWyz->UVXWZY', np.identity(ncas), v_aaaa, rdm_cccaaa, optimize = einsum_type)
K22_aaa_aaa += 1/6 * einsum('XY,Zxyz,UVxyWz->UVXWZY', np.identity(ncas), v_aaaa, rdm_cccaaa, optimize = einsum_type)

-------------------------------------------------------------------------------------

> Total elapsed time: 48.34 seconds.
