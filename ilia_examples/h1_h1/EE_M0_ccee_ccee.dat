
--------------------------------------------------------------
 Effective Hamiltonian: Construct effective Hamiltonian ...
 author:  Koushik Chatterjee
 date:  August 31, 2018

 Copyright (C) 2018  Koushik Chatterjee (koushikchatterjee7@gmail.com)
 --------------------------------------------------------------

 (   1.00000) E_fc 
 (  -1.00000) e(c0) des(c0) cre(c0) 
 (   1.00000) e(v0) cre(v0) des(v0) 
 (   1.00000) h(a1,a0) cre(a0) des(a1) 
 (   1.00000) v(a1,c1,a0,c1) cre(a0) des(a1) 
 (   0.25000) v(a2,a3,a0,a1) cre(a0) cre(a1) des(a3) des(a2) 
First Commutator

Combining like terms:
Converting 18 terms to canonical form...
     0   (   1.00000) E_fc cre(C) cre(D) des(L) des(K) 
     1   (  -1.00000) E_fc cre(C) cre(D) des(L) des(K) 
     2   (  -1.00000) e(c0) cre(C) cre(D) cre(c0) des(K) des(L) des(c0) 
     3   (   1.00000) e(c0) cre(C) cre(D) des(K) des(L) 
     4   (   1.00000) e(c0) cre(C) cre(D) cre(c0) des(K) des(L) des(c0) 
     5   (   1.00000) e(L) cre(C) cre(D) des(K) des(L) 
     6   (  -1.00000) e(K) cre(C) cre(D) des(L) des(K) 
     7   (  -1.00000) e(c0) cre(C) cre(D) des(K) des(L) 
     8   (  -1.00000) e(v0) cre(C) cre(D) cre(v0) des(K) des(L) des(v0) 
     9   (   1.00000) e(C) cre(D) cre(C) des(K) des(L) 
    10   (  -1.00000) e(D) cre(C) cre(D) des(K) des(L) 
    11   (   1.00000) e(v0) cre(C) cre(D) cre(v0) des(K) des(L) des(v0) 
    12   (  -1.00000) h(a1,a0) cre(C) cre(D) cre(a0) des(K) des(L) des(a1) 
    13   (   1.00000) h(a1,a0) cre(C) cre(D) cre(a0) des(K) des(L) des(a1) 
    14   (  -1.00000) v(a1,c1,a0,c1) cre(C) cre(D) cre(a0) des(K) des(L) des(a1) 
    15   (   1.00000) v(a1,c1,a0,c1) cre(C) cre(D) cre(a0) des(K) des(L) des(a1) 
    16   (   0.25000) v(a2,a3,a0,a1) cre(C) cre(D) cre(a0) cre(a1) des(K) des(L) des(a2) des(a3) 
    17   (  -0.25000) v(a2,a3,a0,a1) cre(C) cre(D) cre(a0) cre(a1) des(K) des(L) des(a2) des(a3) 
Finished combining terms in 0.011 seconds


Combining like terms:
Converting 56 terms to canonical form...
     0   (   1.00000) e(C) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
     1   (  -1.00000) e(C) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
     2   (   1.00000) e(C) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
     3   (   1.00000) e(C) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
     4   (  -1.00000) e(C) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
     5   (   1.00000) e(C) kdelta(B,C) kdelta(A,D) cre(I) cre(J) des(K) des(L) 
     6   (  -1.00000) e(C) kdelta(B,D) kdelta(A,C) cre(I) cre(J) des(K) des(L) 
     7   (  -1.00000) e(C) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
     8   (  -1.00000) e(C) kdelta(K,I) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
     9   (   1.00000) e(C) kdelta(K,J) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
    10   (   1.00000) e(C) kdelta(L,I) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
    11   (  -1.00000) e(C) kdelta(L,J) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
    12   (   1.00000) e(C) kdelta(K,I) kdelta(L,J) cre(C) cre(D) des(A) des(B) 
    13   (  -1.00000) e(C) kdelta(K,J) kdelta(L,I) cre(C) cre(D) des(A) des(B) 
    14   (   1.00000) e(D) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    15   (  -1.00000) e(D) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
    16   (   1.00000) e(D) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
    17   (   1.00000) e(D) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
    18   (  -1.00000) e(D) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
    19   (   1.00000) e(D) kdelta(B,C) kdelta(A,D) cre(I) cre(J) des(K) des(L) 
    20   (  -1.00000) e(D) kdelta(B,D) kdelta(A,C) cre(I) cre(J) des(K) des(L) 
    21   (  -1.00000) e(D) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    22   (  -1.00000) e(D) kdelta(K,I) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
    23   (   1.00000) e(D) kdelta(K,J) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
    24   (   1.00000) e(D) kdelta(L,I) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
    25   (  -1.00000) e(D) kdelta(L,J) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
    26   (   1.00000) e(D) kdelta(K,I) kdelta(L,J) cre(C) cre(D) des(A) des(B) 
    27   (  -1.00000) e(D) kdelta(K,J) kdelta(L,I) cre(C) cre(D) des(A) des(B) 
    28   (  -1.00000) e(K) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    29   (   1.00000) e(K) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
    30   (  -1.00000) e(K) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
    31   (  -1.00000) e(K) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
    32   (   1.00000) e(K) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
    33   (  -1.00000) e(K) kdelta(B,C) kdelta(A,D) cre(I) cre(J) des(K) des(L) 
    34   (   1.00000) e(K) kdelta(B,D) kdelta(A,C) cre(I) cre(J) des(K) des(L) 
    35   (   1.00000) e(K) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    36   (   1.00000) e(K) kdelta(K,I) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
    37   (  -1.00000) e(K) kdelta(K,J) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
    38   (  -1.00000) e(K) kdelta(L,I) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
    39   (   1.00000) e(K) kdelta(L,J) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
    40   (  -1.00000) e(K) kdelta(K,I) kdelta(L,J) cre(C) cre(D) des(A) des(B) 
    41   (   1.00000) e(K) kdelta(K,J) kdelta(L,I) cre(C) cre(D) des(A) des(B) 
    42   (  -1.00000) e(L) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    43   (   1.00000) e(L) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
    44   (  -1.00000) e(L) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
    45   (  -1.00000) e(L) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
    46   (   1.00000) e(L) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
    47   (  -1.00000) e(L) kdelta(B,C) kdelta(A,D) cre(I) cre(J) des(K) des(L) 
    48   (   1.00000) e(L) kdelta(B,D) kdelta(A,C) cre(I) cre(J) des(K) des(L) 
    49   (   1.00000) e(L) cre(C) cre(D) cre(I) cre(J) des(A) des(B) des(K) des(L) 
    50   (   1.00000) e(L) kdelta(K,I) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
    51   (  -1.00000) e(L) kdelta(K,J) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
    52   (  -1.00000) e(L) kdelta(L,I) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
    53   (   1.00000) e(L) kdelta(L,J) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
    54   (  -1.00000) e(L) kdelta(K,I) kdelta(L,J) cre(C) cre(D) des(A) des(B) 
    55   (   1.00000) e(L) kdelta(K,J) kdelta(L,I) cre(C) cre(D) des(A) des(B) 
Finished combining terms in 0.037 seconds


------------------------- SQA Addon --------------------------

--------------------------------------------------------------
    SQA_extra: Code geneator for quasi-particle systems.
    author:  Koushik Chatterjee
    date:  August 31, 2018

    Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

    This program is distributed in the hope that it will
    be useful, but WITHOUT ANY WARRANTY; without even the
    implied warranty of MERCHANTABILITY or FITNESS FOR A
    PARTICULAR PURPOSE. See the GNU General Public License
    for more details.
--------------------------------------------------------------


Expectation value: Filter zero terms wrt virtual:=>
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
 (   0.00000) e(C) kdelta(I,K) kdelta(J,L) cre(C) cre(D) des(A) des(B) 
 (   0.00000) e(C) kdelta(I,L) kdelta(J,K) cre(C) cre(D) des(A) des(B) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
 (   0.00000) e(D) kdelta(I,K) kdelta(J,L) cre(C) cre(D) des(A) des(B) 
 (   0.00000) e(D) kdelta(I,L) kdelta(J,K) cre(C) cre(D) des(A) des(B) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
 (   0.00000) e(K) kdelta(I,K) kdelta(J,L) cre(C) cre(D) des(A) des(B) 
 (   0.00000) e(K) kdelta(I,L) kdelta(J,K) cre(C) cre(D) des(A) des(B) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
 (   0.00000) e(L) kdelta(I,K) kdelta(J,L) cre(C) cre(D) des(A) des(B) 
 (   0.00000) e(L) kdelta(I,L) kdelta(J,K) cre(C) cre(D) des(A) des(B) 
 (   0.00000) e(C) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(C) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(C) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(C) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(C) kdelta(I,K) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
 (   0.00000) e(C) kdelta(I,L) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
 (   0.00000) e(C) kdelta(J,K) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
 (   0.00000) e(C) kdelta(J,L) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
 (   0.00000) e(D) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(D) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(D) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(D) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(D) kdelta(I,K) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
 (   0.00000) e(D) kdelta(I,L) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
 (   0.00000) e(D) kdelta(J,K) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
 (   0.00000) e(D) kdelta(J,L) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
 (   0.00000) e(K) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(K) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(K) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(K) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(K) kdelta(I,K) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
 (   0.00000) e(K) kdelta(I,L) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
 (   0.00000) e(K) kdelta(J,K) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
 (   0.00000) e(K) kdelta(J,L) cre(C) cre(D) cre(I) des(A) des(B) des(K) 
 (   0.00000) e(L) kdelta(A,C) cre(D) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(L) kdelta(A,D) cre(C) cre(I) cre(J) des(B) des(K) des(L) 
 (   0.00000) e(L) kdelta(B,C) cre(D) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(L) kdelta(B,D) cre(C) cre(I) cre(J) des(A) des(K) des(L) 
 (   0.00000) e(L) kdelta(I,K) cre(C) cre(D) cre(J) des(A) des(B) des(L) 
 (   0.00000) e(L) kdelta(I,L) cre(C) cre(D) cre(J) des(A) des(B) des(K) 
 (   0.00000) e(L) kdelta(J,K) cre(C) cre(D) cre(I) des(A) des(B) des(L) 
 (   0.00000) e(L) kdelta(J,L) cre(C) cre(D) cre(I) des(A) des(B) des(K) 

Normal ordering with respect to core:=>
Term=  (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (   1.00000) e(C) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (   1.00000) e(D) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (   1.00000) e(K) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (   1.00000) e(L) kdelta(A,C) kdelta(B,D) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 

Normal ordering with respect to core:=>
Term=  (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) cre(I) cre(J) des(K) des(L) 
Terms after normal ordering:
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Expectation value: Filter zero terms wrt core:=>
 (   0.00000) e(C) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(C) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(D) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(D) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(K) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(K) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(L) kdelta(A,C) kdelta(B,D) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(J,L) des(K) cre(I) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   0.00000) e(L) kdelta(A,D) kdelta(B,C) des(L) des(K) cre(I) cre(J) 
 (   0.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) des(L) cre(J) 
 (   0.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) des(K) cre(J) 
 (   0.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(J,K) des(L) cre(I) 
 (   0.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(J,L) des(K) cre(I) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Combining like terms:
Converting 16 terms to canonical form...
     0   (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
     1   (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
     2   (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
     3   (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
     4   (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
     5   (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
     6   (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
     7   (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
     8   (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
     9   (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
    10   (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
    11   (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
    12   (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
    13   (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
    14   (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
    15   (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
Finished combining terms in 0.833 seconds

Dummy indices label update:=>
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 

Reorder tensor indices according to (Core < Active < Virtual): =>

----------------------- Final results ------------------------
 (   1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(C) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(C) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(D) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(D) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(K) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(K) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(L) kdelta(A,C) kdelta(B,D) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(L) kdelta(A,D) kdelta(B,C) kdelta(I,L) kdelta(J,K) 


----------------------- SQA EINSUM ---------------------------
 VERSION : 1
 Einsum generator: Transform into einsum ...
 author:  Koushik Chatterjee
 date:  August 31, 2018

 Copyright (C) 2018  Koushik Chatterjee (koushikchatterjee7@gmail.com)


 For Help :: help = True
--------------------------------------------------------------
temp =  np.einsum('C, AC, BD, IK, JL->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('C, AC, BD, IL, JK->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('C, AD, BC, IK, JL->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('C, AD, BC, IL, JK->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('D, AC, BD, IK, JL->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('D, AC, BD, IL, JK->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('D, AD, BC, IK, JL->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('D, AD, BC, IL, JK->IJABKLCD', e_extern_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('K, AC, BD, IK, JL->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('K, AC, BD, IL, JK->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('K, AD, BC, IK, JL->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('K, AD, BC, IL, JK->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('L, AC, BD, IK, JL->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('L, AC, BD, IL, JK->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp += np.einsum('L, AD, BC, IK, JL->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
temp -= np.einsum('L, AD, BC, IL, JK->IJABKLCD', e_core_so, np.identity(nextern), np.identity(nextern), np.identity(ncore), np.identity(ncore), optimize = True)
