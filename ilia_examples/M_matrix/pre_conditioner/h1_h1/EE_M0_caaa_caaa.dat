
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(0) ----------------------
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) kdelta(I,J) v(V,W,Y,Z) cre(X) des(U) 
 (   1.00000) h(V,Y) kdelta(I,J) kdelta(W,Z) cre(X) des(U) 
 (  -1.00000) h(V,Z) kdelta(I,J) kdelta(W,Y) cre(X) des(U) 
 (  -1.00000) h(W,Y) kdelta(I,J) kdelta(V,Z) cre(X) des(U) 
 (   1.00000) h(W,Z) kdelta(I,J) kdelta(V,Y) cre(X) des(U) 
 (   1.00000) v(i,Y,i,V) kdelta(I,J) kdelta(W,Z) cre(X) des(U) 
 (  -1.00000) v(i,Y,i,W) kdelta(I,J) kdelta(V,Z) cre(X) des(U) 
 (  -1.00000) v(i,Z,i,V) kdelta(I,J) kdelta(W,Y) cre(X) des(U) 
 (   1.00000) v(i,Z,i,W) kdelta(I,J) kdelta(V,Y) cre(X) des(U) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(X) des(U) 
 (   1.00000) e(J) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(X) des(U) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(X) des(x) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(X) des(x) 
 (  -1.00000) v(i,U,i,x) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(X) des(x) 
 (   1.00000) v(i,U,i,x) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(X) des(x) 
 (  -1.00000) h(V,Y) kdelta(I,J) cre(W) cre(X) des(U) des(Z) 
 (   1.00000) h(V,Z) kdelta(I,J) cre(W) cre(X) des(U) des(Y) 
 (   1.00000) h(W,Y) kdelta(I,J) cre(V) cre(X) des(U) des(Z) 
 (  -1.00000) h(W,Z) kdelta(I,J) cre(V) cre(X) des(U) des(Y) 
 (   1.00000) kdelta(I,J) v(V,W,Y,x) cre(X) cre(x) des(U) des(Z) 
 (  -1.00000) kdelta(I,J) v(V,W,Z,x) cre(X) cre(x) des(U) des(Y) 
 (  -1.00000) kdelta(I,J) v(V,x,Y,Z) cre(W) cre(X) des(U) des(x) 
 (   1.00000) kdelta(I,J) v(W,x,Y,Z) cre(V) cre(X) des(U) des(x) 
 (  -1.00000) kdelta(I,J) v(i,Y,i,V) cre(W) cre(X) des(U) des(Z) 
 (   1.00000) kdelta(I,J) v(i,Y,i,W) cre(V) cre(X) des(U) des(Z) 
 (   1.00000) kdelta(I,J) v(i,Z,i,V) cre(W) cre(X) des(U) des(Y) 
 (  -1.00000) kdelta(I,J) v(i,Z,i,W) cre(V) cre(X) des(U) des(Y) 
 (   1.00000) e(J) kdelta(I,J) kdelta(V,Y) cre(W) cre(X) des(U) des(Z) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(V,Z) cre(W) cre(X) des(U) des(Y) 
 (  -1.00000) e(J) kdelta(I,J) kdelta(W,Y) cre(V) cre(X) des(U) des(Z) 
 (   1.00000) e(J) kdelta(I,J) kdelta(W,Z) cre(V) cre(X) des(U) des(Y) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(V,Y) cre(W) cre(X) des(Z) des(x) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(V,Z) cre(W) cre(X) des(Y) des(x) 
 (   1.00000) h(U,x) kdelta(I,J) kdelta(W,Y) cre(V) cre(X) des(Z) des(x) 
 (  -1.00000) h(U,x) kdelta(I,J) kdelta(W,Z) cre(V) cre(X) des(Y) des(x) 
 (  -1.00000) h(V,x) kdelta(I,J) kdelta(W,Y) cre(X) cre(x) des(U) des(Z) 
 (   1.00000) h(V,x) kdelta(I,J) kdelta(W,Z) cre(X) cre(x) des(U) des(Y) 
 (   1.00000) h(W,x) kdelta(I,J) kdelta(V,Y) cre(X) cre(x) des(U) des(Z) 
 (  -1.00000) h(W,x) kdelta(I,J) kdelta(V,Z) cre(X) cre(x) des(U) des(Y) 
 (  -1.00000) v(i,U,i,x) kdelta(I,J) kdelta(V,Y) cre(W) cre(X) des(Z) des(x) 
 (   1.00000) v(i,U,i,x) kdelta(I,J) kdelta(V,Z) cre(W) cre(X) des(Y) des(x) 
 (   1.00000) v(i,U,i,x) kdelta(I,J) kdelta(W,Y) cre(V) cre(X) des(Z) des(x) 
 (  -1.00000) v(i,U,i,x) kdelta(I,J) kdelta(W,Z) cre(V) cre(X) des(Y) des(x) 
 (  -1.00000) v(V,x,Y,y) kdelta(I,J) kdelta(W,Z) cre(X) cre(y) des(U) des(x) 
 (   1.00000) v(V,x,Z,y) kdelta(I,J) kdelta(W,Y) cre(X) cre(y) des(U) des(x) 
 (   1.00000) v(W,x,Y,y) kdelta(I,J) kdelta(V,Z) cre(X) cre(y) des(U) des(x) 
 (  -1.00000) v(W,x,Z,y) kdelta(I,J) kdelta(V,Y) cre(X) cre(y) des(U) des(x) 
 (  -0.50000) v(x,y,U,Y) kdelta(I,J) kdelta(V,Z) cre(W) cre(X) des(x) des(y) 
 (   0.50000) v(x,y,U,Y) kdelta(I,J) kdelta(W,Z) cre(V) cre(X) des(x) des(y) 
 (   0.50000) v(x,y,U,Z) kdelta(I,J) kdelta(V,Y) cre(W) cre(X) des(x) des(y) 
 (  -0.50000) v(x,y,U,Z) kdelta(I,J) kdelta(W,Y) cre(V) cre(X) des(x) des(y) 
 (  -1.00000) v(i,x,i,V) kdelta(I,J) kdelta(W,Y) cre(X) cre(x) des(U) des(Z) 
 (   1.00000) v(i,x,i,V) kdelta(I,J) kdelta(W,Z) cre(X) cre(x) des(U) des(Y) 
 (   1.00000) v(i,x,i,W) kdelta(I,J) kdelta(V,Y) cre(X) cre(x) des(U) des(Z) 
 (  -1.00000) v(i,x,i,W) kdelta(I,J) kdelta(V,Z) cre(X) cre(x) des(U) des(Y) 
 (   0.50000) v(x,y,U,z) kdelta(I,J) kdelta(V,Y) kdelta(W,Z) cre(X) cre(z) des(x) des(y) 
 (  -0.50000) v(x,y,U,z) kdelta(I,J) kdelta(V,Z) kdelta(W,Y) cre(X) cre(z) des(x) des(y) 
 (   1.00000) e(J) kdelta(I,J) cre(V) cre(W) cre(X) des(U) des(Y) des(Z) 
 (   1.00000) h(U,x) kdelta(I,J) cre(V) cre(W) cre(X) des(Y) des(Z) des(x) 
 (  -1.00000) h(V,x) kdelta(I,J) cre(W) cre(X) cre(x) des(U) des(Y) des(Z) 
 (   1.00000) h(W,x) kdelta(I,J) cre(V) cre(X) cre(x) des(U) des(Y) des(Z) 
 (   1.00000) kdelta(I,J) v(i,U,i,x) cre(V) cre(W) cre(X) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) v(V,W,x,y) cre(X) cre(x) cre(y) des(U) des(Y) des(Z) 
 (  -1.00000) kdelta(I,J) v(V,x,Y,y) cre(W) cre(X) cre(y) des(U) des(Z) des(x) 
 (   1.00000) kdelta(I,J) v(V,x,Z,y) cre(W) cre(X) cre(y) des(U) des(Y) des(x) 
 (   1.00000) kdelta(I,J) v(W,x,Y,y) cre(V) cre(X) cre(y) des(U) des(Z) des(x) 
 (  -1.00000) kdelta(I,J) v(W,x,Z,y) cre(V) cre(X) cre(y) des(U) des(Y) des(x) 
 (   0.50000) kdelta(I,J) v(x,y,U,Y) cre(V) cre(W) cre(X) des(Z) des(x) des(y) 
 (  -0.50000) kdelta(I,J) v(x,y,U,Z) cre(V) cre(W) cre(X) des(Y) des(x) des(y) 
 (  -1.00000) kdelta(I,J) v(i,x,i,V) cre(W) cre(X) cre(x) des(U) des(Y) des(Z) 
 (   1.00000) kdelta(I,J) v(i,x,i,W) cre(V) cre(X) cre(x) des(U) des(Y) des(Z) 
 (  -0.50000) v(V,x,y,z) kdelta(I,J) kdelta(W,Y) cre(X) cre(y) cre(z) des(U) des(Z) des(x) 
 (   0.50000) v(V,x,y,z) kdelta(I,J) kdelta(W,Z) cre(X) cre(y) cre(z) des(U) des(Y) des(x) 
 (   0.50000) v(W,x,y,z) kdelta(I,J) kdelta(V,Y) cre(X) cre(y) cre(z) des(U) des(Z) des(x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,J) kdelta(V,Z) cre(X) cre(y) cre(z) des(U) des(Y) des(x) 
 (  -0.50000) v(x,y,U,z) kdelta(I,J) kdelta(V,Y) cre(W) cre(X) cre(z) des(Z) des(x) des(y) 
 (   0.50000) v(x,y,U,z) kdelta(I,J) kdelta(V,Z) cre(W) cre(X) cre(z) des(Y) des(x) des(y) 
 (   0.50000) v(x,y,U,z) kdelta(I,J) kdelta(W,Y) cre(V) cre(X) cre(z) des(Z) des(x) des(y) 
 (  -0.50000) v(x,y,U,z) kdelta(I,J) kdelta(W,Z) cre(V) cre(X) cre(z) des(Y) des(x) des(y) 
 (   0.50000) kdelta(I,J) v(V,x,y,z) cre(W) cre(X) cre(y) cre(z) des(U) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) v(W,x,y,z) cre(V) cre(X) cre(y) cre(z) des(U) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) v(x,y,U,z) cre(V) cre(W) cre(X) cre(z) des(Y) des(Z) des(x) des(y) 

Total terms : 82
SQA automation time :  4.549 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =  np.einsum('IJ, VWYZ, XU->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ca_so, optimize = True)
    temp += np.einsum('VY, IJ, WZ, XU->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('VZ, IJ, WY, XU->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('WY, IJ, VZ, XU->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('WZ, IJ, VY, XU->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('iYiV, IJ, WZ, XU->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('iYiW, IJ, VZ, XU->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('iZiV, IJ, WY, XU->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('iZiW, IJ, VY, XU->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('J, IJ, VY, WZ, XU->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('J, IJ, VZ, WY, XU->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('Ux, IJ, VY, WZ, Xx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('Ux, IJ, VZ, WY, Xx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('iUix, IJ, VY, WZ, Xx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('iUix, IJ, VZ, WY, Xx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('VY, IJ, WXUZ->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('VZ, IJ, WXUY->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('WY, IJ, VXUZ->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('WZ, IJ, VXUY->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, VWYx, XxUZ->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, VWZx, XxUY->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, VxYZ, WXUx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, WxYZ, VXUx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, iYiV, WXUZ->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, iYiW, VXUZ->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('IJ, iZiV, WXUY->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
    temp -= np.einsum('IJ, iZiW, VXUY->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('J, IJ, VY, WXUZ->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('J, IJ, VZ, WXUY->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('J, IJ, WY, VXUZ->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('J, IJ, WZ, VXUY->IXYZJUVW', e_core_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ux, IJ, VY, WXZx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ux, IJ, VZ, WXYx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Ux, IJ, WY, VXZx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Ux, IJ, WZ, VXYx->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Vx, IJ, WY, XxUZ->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Vx, IJ, WZ, XxUY->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Wx, IJ, VY, XxUZ->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Wx, IJ, VZ, XxUY->IXYZJUVW', h_aa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('iUix, IJ, VY, WXZx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('iUix, IJ, VZ, WXYx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('iUix, IJ, WY, VXZx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('iUix, IJ, WZ, VXYx->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('VxYy, IJ, WZ, XyUx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('VxZy, IJ, WY, XyUx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('WxYy, IJ, VZ, XyUx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('WxZy, IJ, VY, XyUx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyUY, IJ, VZ, WXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('xyUY, IJ, WZ, VXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('xyUZ, IJ, VY, WXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyUZ, IJ, WY, VXxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ixiV, IJ, WY, XxUZ->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixiV, IJ, WZ, XxUY->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixiW, IJ, VY, XxUZ->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ixiW, IJ, VZ, XxUY->IXYZJUVW', v_caca_so, np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('xyUz, IJ, VY, WZ, Xzxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyUz, IJ, VZ, WY, Xzxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += np.einsum('J, IJ, VWXUYZ->IXYZJUVW', e_core_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Ux, IJ, VWXYZx->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('Vx, IJ, WXxUYZ->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp += np.einsum('Wx, IJ, VXxUYZ->IXYZJUVW', h_aa_so, np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp += np.einsum('IJ, iUix, VWXYZx->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, VWxy, XxyUYZ->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('IJ, VxYy, WXyUZx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('IJ, VxZy, WXyUYx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('IJ, WxYy, VXyUZx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('IJ, WxZy, VXyUYx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, xyUY, VWXZxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, xyUZ, VWXYxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_cccaaa_so, optimize = True)
    temp -= np.einsum('IJ, ixiV, WXxUYZ->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
    temp += np.einsum('IJ, ixiW, VXxUYZ->IXYZJUVW', np.identity(ncore), v_caca_so, rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Vxyz, IJ, WY, XyzUZx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Vxyz, IJ, WZ, XyzUYx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Wxyz, IJ, VY, XyzUZx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Wxyz, IJ, VZ, XyzUYx->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyUz, IJ, VY, WXzZxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('xyUz, IJ, VZ, WXzYxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('xyUz, IJ, WY, VXzZxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('xyUz, IJ, WZ, VXzYxy->IXYZJUVW', v_aaaa_so, np.identity(ncore), np.identity(ncas), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('IJ, Vxyz, WXyzUYZx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, Wxyz, VXyzUYZx->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('IJ, xyUz, VWXzYZxy->IXYZJUVW', np.identity(ncore), v_aaaa_so, rdm_ccccaaaa_so, optimize = True)
