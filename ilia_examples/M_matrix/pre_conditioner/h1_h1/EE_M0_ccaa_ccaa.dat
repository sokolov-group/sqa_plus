
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(0) ----------------------
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (  -1.00000) v(W,Z,X,Y) kdelta(I,K) kdelta(J,L) 
 (   1.00000) v(W,Z,X,Y) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) h(W,X) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) 
 (   1.00000) h(W,X) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) 
 (   1.00000) h(W,Y) kdelta(I,K) kdelta(J,L) kdelta(X,Z) 
 (  -1.00000) h(W,Y) kdelta(I,L) kdelta(J,K) kdelta(X,Z) 
 (   1.00000) h(X,Z) kdelta(I,K) kdelta(J,L) kdelta(W,Y) 
 (  -1.00000) h(X,Z) kdelta(I,L) kdelta(J,K) kdelta(W,Y) 
 (  -1.00000) h(Y,Z) kdelta(I,K) kdelta(J,L) kdelta(W,X) 
 (   1.00000) h(Y,Z) kdelta(I,L) kdelta(J,K) kdelta(W,X) 
 (  -1.00000) v(i,X,i,W) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) 
 (   1.00000) v(i,X,i,W) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) 
 (   1.00000) v(i,X,i,Z) kdelta(I,K) kdelta(J,L) kdelta(W,Y) 
 (  -1.00000) v(i,X,i,Z) kdelta(I,L) kdelta(J,K) kdelta(W,Y) 
 (   1.00000) v(i,Y,i,W) kdelta(I,K) kdelta(J,L) kdelta(X,Z) 
 (  -1.00000) v(i,Y,i,W) kdelta(I,L) kdelta(J,K) kdelta(X,Z) 
 (  -1.00000) v(i,Y,i,Z) kdelta(I,K) kdelta(J,L) kdelta(W,X) 
 (   1.00000) v(i,Y,i,Z) kdelta(I,L) kdelta(J,K) kdelta(W,X) 
 (   1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(W,X) kdelta(Y,Z) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(W,Y) kdelta(X,Z) 
 (  -1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(W,X) kdelta(Y,Z) 
 (   1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(W,Y) kdelta(X,Z) 
 (   1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(W,X) kdelta(Y,Z) 
 (  -1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(W,Y) kdelta(X,Z) 
 (  -1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(W,X) kdelta(Y,Z) 
 (   1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(W,Y) kdelta(X,Z) 
 (   1.00000) h(W,X) kdelta(I,K) kdelta(J,L) cre(Z) des(Y) 
 (  -1.00000) h(W,X) kdelta(I,L) kdelta(J,K) cre(Z) des(Y) 
 (  -1.00000) h(W,Y) kdelta(I,K) kdelta(J,L) cre(Z) des(X) 
 (   1.00000) h(W,Y) kdelta(I,L) kdelta(J,K) cre(Z) des(X) 
 (  -1.00000) h(X,Z) kdelta(I,K) kdelta(J,L) cre(W) des(Y) 
 (   1.00000) h(X,Z) kdelta(I,L) kdelta(J,K) cre(W) des(Y) 
 (   1.00000) h(Y,Z) kdelta(I,K) kdelta(J,L) cre(W) des(X) 
 (  -1.00000) h(Y,Z) kdelta(I,L) kdelta(J,K) cre(W) des(X) 
 (   1.00000) v(W,Z,X,x) kdelta(I,K) kdelta(J,L) cre(x) des(Y) 
 (  -1.00000) v(W,Z,X,x) kdelta(I,L) kdelta(J,K) cre(x) des(Y) 
 (  -1.00000) v(W,Z,Y,x) kdelta(I,K) kdelta(J,L) cre(x) des(X) 
 (   1.00000) v(W,Z,Y,x) kdelta(I,L) kdelta(J,K) cre(x) des(X) 
 (   1.00000) v(W,x,X,Y) kdelta(I,K) kdelta(J,L) cre(Z) des(x) 
 (  -1.00000) v(W,x,X,Y) kdelta(I,L) kdelta(J,K) cre(Z) des(x) 
 (   1.00000) v(i,X,i,W) kdelta(I,K) kdelta(J,L) cre(Z) des(Y) 
 (  -1.00000) v(i,X,i,W) kdelta(I,L) kdelta(J,K) cre(Z) des(Y) 
 (  -1.00000) v(i,X,i,Z) kdelta(I,K) kdelta(J,L) cre(W) des(Y) 
 (   1.00000) v(i,X,i,Z) kdelta(I,L) kdelta(J,K) cre(W) des(Y) 
 (  -1.00000) v(i,Y,i,W) kdelta(I,K) kdelta(J,L) cre(Z) des(X) 
 (   1.00000) v(i,Y,i,W) kdelta(I,L) kdelta(J,K) cre(Z) des(X) 
 (   1.00000) v(i,Y,i,Z) kdelta(I,K) kdelta(J,L) cre(W) des(X) 
 (  -1.00000) v(i,Y,i,Z) kdelta(I,L) kdelta(J,K) cre(W) des(X) 
 (  -1.00000) v(Z,x,X,Y) kdelta(I,K) kdelta(J,L) cre(W) des(x) 
 (   1.00000) v(Z,x,X,Y) kdelta(I,L) kdelta(J,K) cre(W) des(x) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(Z) des(Y) 
 (   1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(Z) des(X) 
 (   1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(W) des(Y) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(W) des(X) 
 (   1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(Z) des(Y) 
 (  -1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(Z) des(X) 
 (  -1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(W) des(Y) 
 (   1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(W) des(X) 
 (  -1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(Z) des(Y) 
 (   1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(Z) des(X) 
 (   1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(W) des(Y) 
 (  -1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(W) des(X) 
 (   1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(Z) des(Y) 
 (  -1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(Z) des(X) 
 (  -1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(W) des(Y) 
 (   1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(W) des(X) 
 (  -1.00000) h(W,x) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(x) des(Y) 
 (   1.00000) h(W,x) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(x) des(X) 
 (   1.00000) h(W,x) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(x) des(Y) 
 (  -1.00000) h(W,x) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(x) des(X) 
 (   1.00000) h(Z,x) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(x) des(Y) 
 (  -1.00000) h(Z,x) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) h(Z,x) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(x) des(Y) 
 (   1.00000) h(Z,x) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) v(W,x,X,y) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(y) des(x) 
 (   1.00000) v(W,x,X,y) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(y) des(x) 
 (   1.00000) v(W,x,Y,y) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(y) des(x) 
 (  -1.00000) v(W,x,Y,y) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(y) des(x) 
 (   1.00000) v(Z,x,X,y) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(y) des(x) 
 (  -1.00000) v(Z,x,X,y) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(y) des(x) 
 (  -1.00000) v(Z,x,Y,y) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(y) des(x) 
 (   1.00000) v(Z,x,Y,y) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(y) des(x) 
 (  -1.00000) v(i,x,i,W) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(x) des(Y) 
 (   1.00000) v(i,x,i,W) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(x) des(X) 
 (   1.00000) v(i,x,i,W) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(x) des(Y) 
 (  -1.00000) v(i,x,i,W) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(x) des(X) 
 (   1.00000) v(i,x,i,Z) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(x) des(Y) 
 (  -1.00000) v(i,x,i,Z) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) v(i,x,i,Z) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(x) des(Y) 
 (   1.00000) v(i,x,i,Z) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(x) des(X) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(J,L) cre(W) cre(Z) des(X) des(Y) 
 (   1.00000) e(K) kdelta(I,L) kdelta(J,K) cre(W) cre(Z) des(X) des(Y) 
 (  -1.00000) e(L) kdelta(I,K) kdelta(J,L) cre(W) cre(Z) des(X) des(Y) 
 (   1.00000) e(L) kdelta(I,L) kdelta(J,K) cre(W) cre(Z) des(X) des(Y) 
 (  -1.00000) h(W,x) kdelta(I,K) kdelta(J,L) cre(Z) cre(x) des(X) des(Y) 
 (   1.00000) h(W,x) kdelta(I,L) kdelta(J,K) cre(Z) cre(x) des(X) des(Y) 
 (   1.00000) h(Z,x) kdelta(I,K) kdelta(J,L) cre(W) cre(x) des(X) des(Y) 
 (  -1.00000) h(Z,x) kdelta(I,L) kdelta(J,K) cre(W) cre(x) des(X) des(Y) 
 (   0.50000) v(W,Z,x,y) kdelta(I,K) kdelta(J,L) cre(x) cre(y) des(X) des(Y) 
 (  -0.50000) v(W,Z,x,y) kdelta(I,L) kdelta(J,K) cre(x) cre(y) des(X) des(Y) 
 (  -1.00000) v(W,x,X,y) kdelta(I,K) kdelta(J,L) cre(Z) cre(y) des(Y) des(x) 
 (   1.00000) v(W,x,X,y) kdelta(I,L) kdelta(J,K) cre(Z) cre(y) des(Y) des(x) 
 (   1.00000) v(W,x,Y,y) kdelta(I,K) kdelta(J,L) cre(Z) cre(y) des(X) des(x) 
 (  -1.00000) v(W,x,Y,y) kdelta(I,L) kdelta(J,K) cre(Z) cre(y) des(X) des(x) 
 (   1.00000) v(Z,x,X,y) kdelta(I,K) kdelta(J,L) cre(W) cre(y) des(Y) des(x) 
 (  -1.00000) v(Z,x,X,y) kdelta(I,L) kdelta(J,K) cre(W) cre(y) des(Y) des(x) 
 (  -1.00000) v(Z,x,Y,y) kdelta(I,K) kdelta(J,L) cre(W) cre(y) des(X) des(x) 
 (   1.00000) v(Z,x,Y,y) kdelta(I,L) kdelta(J,K) cre(W) cre(y) des(X) des(x) 
 (  -1.00000) v(i,x,i,W) kdelta(I,K) kdelta(J,L) cre(Z) cre(x) des(X) des(Y) 
 (   1.00000) v(i,x,i,W) kdelta(I,L) kdelta(J,K) cre(Z) cre(x) des(X) des(Y) 
 (   1.00000) v(i,x,i,Z) kdelta(I,K) kdelta(J,L) cre(W) cre(x) des(X) des(Y) 
 (  -1.00000) v(i,x,i,Z) kdelta(I,L) kdelta(J,K) cre(W) cre(x) des(X) des(Y) 
 (   0.50000) v(W,x,y,z) kdelta(I,K) kdelta(J,L) kdelta(X,Z) cre(y) cre(z) des(Y) des(x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,K) kdelta(J,L) kdelta(Y,Z) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,L) kdelta(J,K) kdelta(X,Z) cre(y) cre(z) des(Y) des(x) 
 (   0.50000) v(W,x,y,z) kdelta(I,L) kdelta(J,K) kdelta(Y,Z) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) v(Z,x,y,z) kdelta(I,K) kdelta(J,L) kdelta(W,X) cre(y) cre(z) des(Y) des(x) 
 (   0.50000) v(Z,x,y,z) kdelta(I,K) kdelta(J,L) kdelta(W,Y) cre(y) cre(z) des(X) des(x) 
 (   0.50000) v(Z,x,y,z) kdelta(I,L) kdelta(J,K) kdelta(W,X) cre(y) cre(z) des(Y) des(x) 
 (  -0.50000) v(Z,x,y,z) kdelta(I,L) kdelta(J,K) kdelta(W,Y) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,K) kdelta(J,L) cre(Z) cre(y) cre(z) des(X) des(Y) des(x) 
 (   0.50000) v(W,x,y,z) kdelta(I,L) kdelta(J,K) cre(Z) cre(y) cre(z) des(X) des(Y) des(x) 
 (   0.50000) v(Z,x,y,z) kdelta(I,K) kdelta(J,L) cre(W) cre(y) cre(z) des(X) des(Y) des(x) 
 (  -0.50000) v(Z,x,y,z) kdelta(I,L) kdelta(J,K) cre(W) cre(y) cre(z) des(X) des(Y) des(x) 

Total terms : 124
SQA automation time :  8.164 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =- np.einsum('WZXY, IK, JL->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), optimize = True)
    temp += np.einsum('WZXY, IL, JK->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), optimize = True)
    temp -= np.einsum('WX, IK, JL, YZ->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('WX, IL, JK, YZ->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('WY, IK, JL, XZ->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('WY, IL, JK, XZ->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('XZ, IK, JL, WY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('XZ, IL, JK, WY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('YZ, IK, JL, WX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('YZ, IL, JK, WX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('iXiW, IK, JL, YZ->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('iXiW, IL, JK, YZ->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('iXiZ, IK, JL, WY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('iXiZ, IL, JK, WY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('iYiW, IK, JL, XZ->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('iYiW, IL, JK, XZ->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp -= np.einsum('iYiZ, IK, JL, WX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('iYiZ, IL, JK, WX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), optimize = True)
    temp += np.einsum('K, IK, JL, WX, YZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp -= np.einsum('K, IK, JL, WY, XZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp -= np.einsum('K, IL, JK, WX, YZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp += np.einsum('K, IL, JK, WY, XZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp += np.einsum('L, IK, JL, WX, YZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp -= np.einsum('L, IK, JL, WY, XZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp -= np.einsum('L, IL, JK, WX, YZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp += np.einsum('L, IL, JK, WY, XZ->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), np.identity(ncas), optimize = True)
    temp += np.einsum('WX, IK, JL, ZY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('WX, IL, JK, ZY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('WY, IK, JL, ZX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('WY, IL, JK, ZX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('XZ, IK, JL, WY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('XZ, IL, JK, WY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('YZ, IK, JL, WX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('YZ, IL, JK, WX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('WZXx, IK, JL, xY->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('WZXx, IL, JK, xY->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('WZYx, IK, JL, xX->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('WZYx, IL, JK, xX->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('WxXY, IK, JL, Zx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('WxXY, IL, JK, Zx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('iXiW, IK, JL, ZY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('iXiW, IL, JK, ZY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('iXiZ, IK, JL, WY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('iXiZ, IL, JK, WY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('iYiW, IK, JL, ZX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('iYiW, IL, JK, ZX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('iYiZ, IK, JL, WX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('iYiZ, IL, JK, WX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('ZxXY, IK, JL, Wx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp += np.einsum('ZxXY, IL, JK, Wx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IK, JL, WX, ZY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('K, IK, JL, WY, ZX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('K, IK, JL, XZ, WY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IK, JL, YZ, WX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('K, IL, JK, WX, ZY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IL, JK, WY, ZX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IL, JK, XZ, WY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('K, IL, JK, YZ, WX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('L, IK, JL, WX, ZY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('L, IK, JL, WY, ZX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('L, IK, JL, XZ, WY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('L, IK, JL, YZ, WX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('L, IL, JK, WX, ZY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('L, IL, JK, WY, ZX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('L, IL, JK, XZ, WY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('L, IL, JK, YZ, WX->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('Wx, IK, JL, XZ, xY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('Wx, IK, JL, YZ, xX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('Wx, IL, JK, XZ, xY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('Wx, IL, JK, YZ, xX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('Zx, IK, JL, WX, xY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('Zx, IK, JL, WY, xX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('Zx, IL, JK, WX, xY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('Zx, IL, JK, WY, xX->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('WxXy, IK, JL, YZ, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('WxXy, IL, JK, YZ, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('WxYy, IK, JL, XZ, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('WxYy, IL, JK, XZ, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ZxXy, IK, JL, WY, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ZxXy, IL, JK, WY, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ZxYy, IK, JL, WX, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ZxYy, IL, JK, WX, yx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ixiW, IK, JL, XZ, xY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ixiW, IK, JL, YZ, xX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ixiW, IL, JK, XZ, xY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ixiW, IL, JK, YZ, xX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ixiZ, IK, JL, WX, xY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ixiZ, IK, JL, WY, xX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('ixiZ, IL, JK, WX, xY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp += np.einsum('ixiZ, IL, JK, WY, xX->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ca_so, optimize = True)
    temp -= np.einsum('K, IK, JL, WZXY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('K, IL, JK, WZXY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('L, IK, JL, WZXY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('L, IL, JK, WZXY->IJXYKLZW', e_core_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Wx, IK, JL, ZxXY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Wx, IL, JK, ZxXY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('Zx, IK, JL, WxXY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('Zx, IL, JK, WxXY->IJXYKLZW', h_aa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('WZxy, IK, JL, xyXY->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('WZxy, IL, JK, xyXY->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('WxXy, IK, JL, ZyYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('WxXy, IL, JK, ZyYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('WxYy, IK, JL, ZyXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('WxYy, IL, JK, ZyXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ZxXy, IK, JL, WyYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ZxXy, IL, JK, WyYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ZxYy, IK, JL, WyXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ZxYy, IL, JK, WyXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ixiW, IK, JL, ZxXY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixiW, IL, JK, ZxXY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixiZ, IK, JL, WxXY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp -= np.einsum('ixiZ, IL, JK, WxXY->IJXYKLZW', v_caca_so, np.identity(ncore), np.identity(ncore), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Wxyz, IK, JL, XZ, yzYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Wxyz, IK, JL, YZ, yzXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Wxyz, IL, JK, XZ, yzYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Wxyz, IL, JK, YZ, yzXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Zxyz, IK, JL, WX, yzYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Zxyz, IK, JL, WY, yzXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp += 0.5 * np.einsum('Zxyz, IL, JK, WX, yzYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Zxyz, IL, JK, WY, yzXx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), np.identity(ncas), rdm_ccaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Wxyz, IK, JL, ZyzXYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Wxyz, IL, JK, ZyzXYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp += 0.5 * np.einsum('Zxyz, IK, JL, WyzXYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_cccaaa_so, optimize = True)
    temp -= 0.5 * np.einsum('Zxyz, IL, JK, WyzXYx->IJXYKLZW', v_aaaa_so, np.identity(ncore), np.identity(ncore), rdm_cccaaa_so, optimize = True)
