
    _____ ____    ___ 
   / ___// __ \  /   |SQA Code geneator for quasi-particle systems (Extention).
   \__ \/ / / / / /| |author:  Koushik Chatterjee
  ___/ / /_/ / / ___ |date:  August 31, 2018
 /____/\___\_\/_/  |_|Copyright (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)
                      
 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 See the GNU General Public License for more details.
--------------------------------------------------------------
------------------------ Hamiltonian(1) ----------------------
Perturbation(V) type = All 
Done ...
Commutation: Done ...
Done ...
--------------------------------------------------------------

------------------------ SQA Automation ----------------------

Computing expectation value with respect to virtual:=>
Done ...
--------------------------------------------------------------
Normal ordering with respect to core:=>
Done ...
--------------------------------------------------------------
Computing expectation value with respect to core:=>
Done ...
--------------------------------------------------------------
Contract delta function for non-dummy indices: =>
Done ...
--------------------------------------------------------------
Dummy indices relabelling:=>
Done ...
--------------------------------------------------------------
Reorder tensor indices according to (Core < Active < Virtual): =>
Done ...
--------------------------------------------------------------

----------------------- Final results ------------------------
 (   1.00000) X(I,x,a,y) v(y,a,z,A) cre(z) des(x) 
 (  -1.00000) X(i,x,A,y) v(I,y,i,z) cre(z) des(x) 
 (  -1.00000) X(i,x,a,y) v(I,a,i,A) cre(y) des(x) 
 (  -1.00000) X(I,x,a,y) gamma(z,w) v(z,a,w,A) cre(y) des(x) 
 (   1.00000) X(i,x,A,y) gamma(z,w) v(I,z,i,w) cre(y) des(x) 
 (  -1.00000) X(I,x,a,y) v(z,a,w,A) cre(y) cre(w) des(x) des(z) 
 (   1.00000) X(i,x,A,y) v(I,z,i,w) cre(y) cre(w) des(x) des(z) 

Total terms : 7
SQA automation time :  0.628 seconds

----------------------- SQA EINSUM ---------------------------
  ___  _  _  _  __  _ _  _   _ 
 | __|| || \| |/ _|| | || \_/ | Einsum generator: Transform into einsum.
 | _| | || \  |\_ \| U || \_/ | author:  Koushik Chatterjee
 |___||_||_|\_||__/|___||_| |_| date:  August 31, 2018
                                VERSION : 1
 Copywight (C) 2018-2019  Koushik Chatterjee (koushikchatterjee7@gmail.com)

 For Help :: help = True
--------------------------------------------------------------
    temp =  np.einsum('Ixay, yazA, zx->IA', X, v_aeae_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('ixAy, Iyiz, zx->IA', X, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('ixay, IaiA, yx->IA', X, v_cece_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, zw, zawA, yx->IA', X, rdm_ca_so, v_aeae_so, rdm_ca_so, optimize = True)
    temp += np.einsum('ixAy, zw, Iziw, yx->IA', X, rdm_ca_so, v_caca_so, rdm_ca_so, optimize = True)
    temp -= np.einsum('Ixay, zawA, ywxz->IA', X, v_aeae_so, rdm_ccaa_so, optimize = True)
    temp += np.einsum('ixAy, Iziw, ywxz->IA', X, v_caca_so, rdm_ccaa_so, optimize = True)
