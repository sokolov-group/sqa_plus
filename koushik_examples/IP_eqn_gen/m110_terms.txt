2nd order

####### Final results:#######
 (  -1.00000) v(A,K,I,J) 

term1, term2 =  (   1.00000) cre(A) des(J) des(I)   (   1.00000) cre(K) 
################ Construct Einsum ################
M[saji:faji, si:fi] =- np.einsum('AKIJ->AJIK', v_eccc_so, optimize = True).copy()

####### Final results:#######
 (  -1.00000) v(A,J,I,x) cre(x) des(X) 

term1, term2 =  (   1.00000) cre(A) des(X) des(I)   (   1.00000) cre(J) 
################ Construct Einsum ################
M[saxi:faxi, si:fi] =- np.einsum('AJIx, xX->AXIJ', v_ecca_so, rdm_ca_so, optimize = True)

####### Final results:#######
 (  -0.50000) v(A,I,x,y) cre(x) cre(y) des(X) des(Y) 

term1, term2 =  (   1.00000) cre(A) des(X) des(Y)   (   1.00000) cre(I) 
################ Construct Einsum ################
M[saxy:faxy, si:fi] = -0.5 * np.einsum('AIxy, xyXY->AXYI', v_ecaa_so, rdm_ccaa_so, optimize = True)

####### Final results:#######
 (   1.00000) v(K,X,I,J) 
 (  -1.00000) v(K,x,I,J) cre(X) des(x) 

term1, term2 =  (   1.00000) cre(X) des(J) des(I)   (   1.00000) cre(K) 
################ Construct Einsum ################
M[sxji:fxji, si:fi] = np.einsum('KXIJ->XJIK', v_cacc_so, optimize = True).copy()
M[sxji:fxji, si:fi] -= np.einsum('KxIJ, Xx->XJIK', v_cacc_so, rdm_ca_so, optimize = True)

####### Final results:#######
 (   1.00000) v(J,X,I,x) cre(x) des(Y) 
 (  -1.00000) gamma(x,y) v(J,x,I,y) cre(X) des(Y) 
 (  -1.00000) v(J,x,I,y) cre(X) cre(y) des(Y) des(x) 

term1, term2 =  (   1.00000) cre(X) des(Y) des(I)   (   1.00000) cre(J) 
################ Construct Einsum ################
M[sxyi:fxyi, si:fi] = np.einsum('JXIx, xY->XYIJ', v_caca_so, rdm_ca_so, optimize = True)
M[sxyi:fxyi, si:fi] -= np.einsum('xy, JxIy, XY->XYIJ', rdm_ca_so, v_caca_so, rdm_ca_so, optimize = True)
M[sxyi:fxyi, si:fi] -= np.einsum('JxIy, XyYx->XYIJ', v_caca_so, rdm_ccaa_so, optimize = True)









##################### Trans state ######

####### Final results:#######
 (  -1.00000) v(J,K,A,x) cre(x) 
 (  -1.00000) e(A) t1(A,x,J,K) cre(x) 
 (   1.00000) e(J) t1(A,x,J,K) cre(x) 
 (   1.00000) e(K) t1(A,x,J,K) cre(x) 
 (  -1.00000) h(x,y) t1(A,x,J,K) cre(y) 
 (   1.00000) t1(A,x,J,K) v(x,i,i,y) cre(y) 
 (  -0.50000) t1(A,x,J,K) v(x,y,z,w) cre(z) cre(w) des(y) 

I, term2 =  (   1.00000) cre(J) cre(K) des(A) 
################ Construct Einsum ################
M[sI:fI, saji:faji] =- np.einsum('JKAx, Ix->IAKJ', v_ccea_so, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] -= np.einsum('A, AxJK, Ix->IAKJ', e_extern_so, t1_eacc, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] += np.einsum('J, AxJK, Ix->IAKJ', e_core_so, t1_eacc, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] += np.einsum('K, AxJK, Ix->IAKJ', e_core_so, t1_eacc, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] -= np.einsum('xy, AxJK, Iy->IAKJ', h_aa_so, t1_eacc, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] += np.einsum('AxJK, xiiy, Iy->IAKJ', t1_eacc, v_acca_so, trdm_c_so, optimize = True)
M[sI:fI, saji:faji] -= 0.5 * np.einsum('AxJK, xyzw, Izwy->IAKJ', t1_eacc, v_aaaa_so, trdm_cca_so, optimize = True)


####### Final results:#######
 (   1.00000) h(A,J) cre(X) 
 (   1.00000) v(J,i,A,i) cre(X) 
 (   1.00000) e(A) t1(A,J) cre(X) 
 (  -1.00000) e(J) t1(A,J) cre(X) 
 (   1.00000) v(J,x,A,y) cre(X) cre(y) des(x) 
 (   1.00000) e(A) t1(A,x,J,y) cre(X) cre(x) des(y) 
 (  -1.00000) e(J) t1(A,x,J,y) cre(X) cre(x) des(y) 
 (   1.00000) h(x,y) t1(A,x,J,z) cre(X) cre(y) des(z) 
 (  -1.00000) h(x,y) t1(A,z,J,x) cre(X) cre(z) des(y) 
 (  -1.00000) t1(A,x,J,y) v(x,i,i,z) cre(X) cre(z) des(y) 
 (   1.00000) t1(A,x,J,y) v(i,z,y,i) cre(X) cre(x) des(z) 
 (  -0.50000) t1(A,x,J,y) v(x,z,w,u) cre(X) cre(w) cre(u) des(y) des(z) 
 (   0.50000) t1(A,x,J,y) v(z,w,y,u) cre(X) cre(x) cre(u) des(z) des(w) 

I, term2 =  (   1.00000) cre(J) cre(X) des(A) 
################ Construct Einsum ################
M[sI:fI, saxi:faxi] = np.einsum('AJ, IX->IAXJ', h_ec_so, trdm_c_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('JiAi, IX->IAXJ', v_ccec_so, trdm_c_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('A, AJ, IX->IAXJ', e_extern_so, t1_ec, trdm_c_so, optimize = True)
M[sI:fI, saxi:faxi] -= np.einsum('J, AJ, IX->IAXJ', e_core_so, t1_ec, trdm_c_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('JxAy, IXyx->IAXJ', v_caea_so, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('A, AxJy, IXxy->IAXJ', e_extern_so, t1_eaca, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] -= np.einsum('J, AxJy, IXxy->IAXJ', e_core_so, t1_eaca, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('xy, AxJz, IXyz->IAXJ', h_aa_so, t1_eaca, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] -= np.einsum('xy, AzJx, IXzy->IAXJ', h_aa_so, t1_eaca, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] -= np.einsum('AxJy, xiiz, IXzy->IAXJ', t1_eaca, v_acca_so, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] += np.einsum('AxJy, izyi, IXxz->IAXJ', t1_eaca, v_caac_so, trdm_cca_so, optimize = True)
M[sI:fI, saxi:faxi] -= 0.5 * np.einsum('AxJy, xzwu, IXwuyz->IAXJ', t1_eaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxi:faxi] += 0.5 * np.einsum('AxJy, zwyu, IXxuzw->IAXJ', t1_eaca, v_aaaa_so, trdm_cccaa_so, optimize = True)



####### Final results:#######
 (   1.00000) h(A,x) cre(X) cre(Y) des(x) 
 (  -1.00000) v(i,x,A,i) cre(X) cre(Y) des(x) 
 (   1.00000) e(A) t1(A,x) cre(X) cre(Y) des(x) 
 (  -1.00000) h(x,y) t1(A,x) cre(X) cre(Y) des(y) 
 (   1.00000) t1(A,x) v(i,y,x,i) cre(X) cre(Y) des(y) 
 (  -0.50000) v(x,y,A,z) cre(X) cre(Y) cre(z) des(x) des(y) 
 (  -0.50000) e(A) t1(A,x,y,z) cre(X) cre(Y) cre(x) des(y) des(z) 
 (  -0.50000) h(x,y) t1(A,x,z,w) cre(X) cre(Y) cre(y) des(z) des(w) 
 (   1.00000) h(x,y) t1(A,z,x,w) cre(X) cre(Y) cre(z) des(y) des(w) 
 (   0.50000) t1(A,x) v(y,z,x,w) cre(X) cre(Y) cre(w) des(y) des(z) 
 (   0.50000) t1(A,x,y,z) v(x,i,i,w) cre(X) cre(Y) cre(w) des(y) des(z) 
 (   0.25000) t1(A,x,y,z) v(w,u,y,z) cre(X) cre(Y) cre(x) des(w) des(u) 
 (   1.00000) t1(A,x,y,z) v(i,w,y,i) cre(X) cre(Y) cre(x) des(z) des(w) 
 (  -0.25000) t1(A,x,y,z) v(x,w,u,v) cre(X) cre(Y) cre(u) cre(v) des(y) des(z) des(w) 
 (  -0.50000) t1(A,x,y,z) v(w,u,y,v) cre(X) cre(Y) cre(x) cre(v) des(z) des(w) des(u) 

I, term2 =  (   1.00000) cre(Y) cre(X) des(A) 
################ Construct Einsum ################
M[sI:fI, saxy:faxy] = np.einsum('Ax, IXYx->IAXY', h_ea_so, trdm_cca_so, optimize = True)
M[sI:fI, saxy:faxy] -= np.einsum('ixAi, IXYx->IAXY', v_caec_so, trdm_cca_so, optimize = True)
M[sI:fI, saxy:faxy] += np.einsum('A, Ax, IXYx->IAXY', e_extern_so, t1_ea, trdm_cca_so, optimize = True)
M[sI:fI, saxy:faxy] -= np.einsum('xy, Ax, IXYy->IAXY', h_aa_so, t1_ea, trdm_cca_so, optimize = True)
M[sI:fI, saxy:faxy] += np.einsum('Ax, iyxi, IXYy->IAXY', t1_ea, v_caac_so, trdm_cca_so, optimize = True)
M[sI:fI, saxy:faxy] -= 0.5 * np.einsum('xyAz, IXYzxy->IAXY', v_aaea_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] -= 0.5 * np.einsum('A, Axyz, IXYxyz->IAXY', e_extern_so, t1_eaaa, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] -= 0.5 * np.einsum('xy, Axzw, IXYyzw->IAXY', h_aa_so, t1_eaaa, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] += np.einsum('xy, Azxw, IXYzyw->IAXY', h_aa_so, t1_eaaa, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] += 0.5 * np.einsum('Ax, yzxw, IXYwyz->IAXY', t1_ea, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] += 0.5 * np.einsum('Axyz, xiiw, IXYwyz->IAXY', t1_eaaa, v_acca_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] += 0.25 * np.einsum('Axyz, wuyz, IXYxwu->IAXY', t1_eaaa, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] += np.einsum('Axyz, iwyi, IXYxzw->IAXY', t1_eaaa, v_caac_so, trdm_cccaa_so, optimize = True)
M[sI:fI, saxy:faxy] -= 0.25 * np.einsum('Axyz, xwuv, IXYuvyzw->IAXY', t1_eaaa, v_aaaa_so, trdm_ccccaaa_so, optimize = True)
M[sI:fI, saxy:faxy] -= 0.5 * np.einsum('Axyz, wuyv, IXYxvzwu->IAXY', t1_eaaa, v_aaaa_so, trdm_ccccaaa_so, optimize = True)


####### Final results:#######
 (  -1.00000) v(J,K,X,x) cre(x) 
 (   1.00000) e(J) t1(X,x,J,K) cre(x) 
 (   1.00000) e(K) t1(X,x,J,K) cre(x) 
 (  -1.00000) h(X,x) t1(x,y,J,K) cre(y) 
 (  -1.00000) h(x,y) t1(X,x,J,K) cre(y) 
 (   1.00000) t1(X,x,J,K) v(x,i,i,y) cre(y) 
 (  -0.50000) t1(x,y,J,K) v(x,y,X,z) cre(z) 
 (  -1.00000) t1(x,y,J,K) v(x,i,X,i) cre(y) 
 (  -0.50000) v(J,K,x,y) cre(x) cre(y) des(X) 
 (   0.50000) e(J) t1(x,y,J,K) cre(x) cre(y) des(X) 
 (   0.50000) e(K) t1(x,y,J,K) cre(x) cre(y) des(X) 
 (  -1.00000) h(x,y) t1(x,z,J,K) cre(y) cre(z) des(X) 
 (  -0.50000) t1(X,x,J,K) v(x,y,z,w) cre(z) cre(w) des(y) 
 (  -0.25000) t1(x,y,J,K) v(x,y,z,w) cre(z) cre(w) des(X) 
 (  -1.00000) t1(x,y,J,K) v(x,z,X,w) cre(y) cre(w) des(z) 
 (  -1.00000) t1(x,y,J,K) v(x,i,i,z) cre(y) cre(z) des(X) 
 (  -0.50000) t1(x,y,J,K) v(x,z,w,u) cre(y) cre(w) cre(u) des(X) des(z) 

I, term2 =  (   1.00000) cre(J) cre(K) des(X) 
################ Construct Einsum ################
M[sI:fI, sxji:fxji] =- np.einsum('JKXx, Ix->IXKJ', v_ccaa_so, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] += np.einsum('J, XxJK, Ix->IXKJ', e_core_so, t1_aacc, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] += np.einsum('K, XxJK, Ix->IXKJ', e_core_so, t1_aacc, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('Xx, xyJK, Iy->IXKJ', h_aa_so, t1_aacc, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('xy, XxJK, Iy->IXKJ', h_aa_so, t1_aacc, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] += np.einsum('XxJK, xiiy, Iy->IXKJ', t1_aacc, v_acca_so, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] -= 0.5 * np.einsum('xyJK, xyXz, Iz->IXKJ', t1_aacc, v_aaaa_so, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('xyJK, xiXi, Iy->IXKJ', t1_aacc, v_acac_so, trdm_c_so, optimize = True)
M[sI:fI, sxji:fxji] -= 0.5 * np.einsum('JKxy, IxyX->IXKJ', v_ccaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] += 0.5 * np.einsum('J, xyJK, IxyX->IXKJ', e_core_so, t1_aacc, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] += 0.5 * np.einsum('K, xyJK, IxyX->IXKJ', e_core_so, t1_aacc, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('xy, xzJK, IyzX->IXKJ', h_aa_so, t1_aacc, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= 0.5 * np.einsum('XxJK, xyzw, Izwy->IXKJ', t1_aacc, v_aaaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= 0.25 * np.einsum('xyJK, xyzw, IzwX->IXKJ', t1_aacc, v_aaaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('xyJK, xzXw, Iywz->IXKJ', t1_aacc, v_aaaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= np.einsum('xyJK, xiiz, IyzX->IXKJ', t1_aacc, v_acca_so, trdm_cca_so, optimize = True)
M[sI:fI, sxji:fxji] -= 0.5 * np.einsum('xyJK, xzwu, IywuXz->IXKJ', t1_aacc, v_aaaa_so, trdm_cccaa_so, optimize = True)


####### Final results:#######
 (   1.00000) h(J,X) cre(Y) 
 (   1.00000) v(J,i,X,i) cre(Y) 
 (  -1.00000) e(J) t1(J,X) cre(Y) 
 (   1.00000) h(X,x) t1(J,x) cre(Y) 
 (   1.00000) t1(J,x) v(x,i,X,i) cre(Y) 
 (  -1.00000) h(J,x) cre(Y) cre(x) des(X) 
 (   1.00000) v(J,x,X,y) cre(Y) cre(y) des(x) 
 (   1.00000) v(J,i,i,x) cre(Y) cre(x) des(X) 
 (   1.00000) e(J) t1(J,x) cre(Y) cre(x) des(X) 
 (  -1.00000) e(J) t1(X,x,J,y) cre(Y) cre(x) des(y) 
 (   1.00000) h(X,x) t1(x,y,J,z) cre(Y) cre(y) des(z) 
 (  -1.00000) h(x,y) t1(J,x) cre(Y) cre(y) des(X) 
 (   1.00000) h(x,y) t1(X,x,J,z) cre(Y) cre(y) des(z) 
 (  -1.00000) h(x,y) t1(X,z,J,x) cre(Y) cre(z) des(y) 
 (   1.00000) t1(J,x) v(x,y,X,z) cre(Y) cre(z) des(y) 
 (   1.00000) t1(J,x) v(x,i,i,y) cre(Y) cre(y) des(X) 
 (  -1.00000) t1(X,x,J,y) v(x,i,i,z) cre(Y) cre(z) des(y) 
 (   1.00000) t1(X,x,J,y) v(i,z,y,i) cre(Y) cre(x) des(z) 
 (   0.50000) t1(x,y,J,z) v(x,y,X,w) cre(Y) cre(w) des(z) 
 (   1.00000) t1(x,y,J,z) v(x,i,X,i) cre(Y) cre(y) des(z) 
 (   0.50000) v(J,x,y,z) cre(Y) cre(y) cre(z) des(X) des(x) 
 (  -0.50000) e(J) t1(x,y,J,z) cre(Y) cre(x) cre(y) des(X) des(z) 
 (   1.00000) h(x,y) t1(x,z,J,w) cre(Y) cre(y) cre(z) des(X) des(w) 
 (  -0.50000) h(x,y) t1(z,w,J,x) cre(Y) cre(z) cre(w) des(X) des(y) 
 (   0.50000) t1(J,x) v(x,y,z,w) cre(Y) cre(z) cre(w) des(X) des(y) 
 (  -0.50000) t1(X,x,J,y) v(x,z,w,u) cre(Y) cre(w) cre(u) des(y) des(z) 
 (   0.50000) t1(X,x,J,y) v(z,w,y,u) cre(Y) cre(x) cre(u) des(z) des(w) 
 (   0.25000) t1(x,y,J,z) v(x,y,w,u) cre(Y) cre(w) cre(u) des(X) des(z) 
 (  -1.00000) t1(x,y,J,z) v(x,w,X,u) cre(Y) cre(y) cre(u) des(z) des(w) 
 (   1.00000) t1(x,y,J,z) v(x,i,i,w) cre(Y) cre(y) cre(w) des(X) des(z) 
 (  -0.25000) t1(x,y,J,z) v(w,u,X,z) cre(Y) cre(x) cre(y) des(w) des(u) 
 (   0.50000) t1(x,y,J,z) v(i,w,z,i) cre(Y) cre(x) cre(y) des(X) des(w) 
 (  -0.50000) t1(x,y,J,z) v(x,w,u,v) cre(Y) cre(y) cre(u) cre(v) des(X) des(z) des(w) 
 (  -0.25000) t1(x,y,J,z) v(w,u,z,v) cre(Y) cre(x) cre(y) cre(v) des(X) des(w) des(u) 

I, term2 =  (   1.00000) cre(J) cre(Y) des(X) 
################ Construct Einsum ################
M[sI:fI, sxyi:fxyi] = np.einsum('JX, IY->IXYJ', h_ca_so, trdm_c_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('JiXi, IY->IXYJ', v_ccac_so, trdm_c_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('J, JX, IY->IXYJ', e_core_so, t1_ca, trdm_c_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Xx, Jx, IY->IXYJ', h_aa_so, t1_ca, trdm_c_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Jx, xiXi, IY->IXYJ', t1_ca, v_acac_so, trdm_c_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('Jx, IYxX->IXYJ', h_ca_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('JxXy, IYyx->IXYJ', v_caaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Jiix, IYxX->IXYJ', v_ccca_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('J, Jx, IYxX->IXYJ', e_core_so, t1_ca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('J, XxJy, IYxy->IXYJ', e_core_so, t1_aaca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Xx, xyJz, IYyz->IXYJ', h_aa_so, t1_aaca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('xy, Jx, IYyX->IXYJ', h_aa_so, t1_ca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('xy, XxJz, IYyz->IXYJ', h_aa_so, t1_aaca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('xy, XzJx, IYzy->IXYJ', h_aa_so, t1_aaca, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Jx, xyXz, IYzy->IXYJ', t1_ca, v_aaaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('Jx, xiiy, IYyX->IXYJ', t1_ca, v_acca_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('XxJy, xiiz, IYzy->IXYJ', t1_aaca, v_acca_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('XxJy, izyi, IYxz->IXYJ', t1_aaca, v_caac_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.5 * np.einsum('xyJz, xyXw, IYwz->IXYJ', t1_aaca, v_aaaa_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('xyJz, xiXi, IYyz->IXYJ', t1_aaca, v_acac_so, trdm_cca_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.5 * np.einsum('Jxyz, IYyzXx->IXYJ', v_caaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.5 * np.einsum('J, xyJz, IYxyXz->IXYJ', e_core_so, t1_aaca, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('xy, xzJw, IYyzXw->IXYJ', h_aa_so, t1_aaca, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.5 * np.einsum('xy, zwJx, IYzwXy->IXYJ', h_aa_so, t1_aaca, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.5 * np.einsum('Jx, xyzw, IYzwXy->IXYJ', t1_ca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.5 * np.einsum('XxJy, xzwu, IYwuyz->IXYJ', t1_aaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.5 * np.einsum('XxJy, zwyu, IYxuzw->IXYJ', t1_aaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.25 * np.einsum('xyJz, xywu, IYwuXz->IXYJ', t1_aaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= np.einsum('xyJz, xwXu, IYyuzw->IXYJ', t1_aaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += np.einsum('xyJz, xiiw, IYywXz->IXYJ', t1_aaca, v_acca_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.25 * np.einsum('xyJz, wuXz, IYxywu->IXYJ', t1_aaca, v_aaaa_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] += 0.5 * np.einsum('xyJz, iwzi, IYxyXw->IXYJ', t1_aaca, v_caac_so, trdm_cccaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.5 * np.einsum('xyJz, xwuv, IYyuvXzw->IXYJ', t1_aaca, v_aaaa_so, trdm_ccccaaa_so, optimize = True)
M[sI:fI, sxyi:fxyi] -= 0.25 * np.einsum('xyJz, wuzv, IYxyvXwu->IXYJ', t1_aaca, v_aaaa_so, trdm_ccccaaa_so, optimize = True)


###################################### M101 terms #############

####### Final results:#######
 (  -1.00000) h(X,Z) kdelta(I,J) cre(W) des(Y) 
 (  -1.00000) kdelta(I,J) v(X,i,Z,i) cre(W) des(Y) 
 (   1.00000) e(J) kdelta(I,J) kdelta(X,Z) cre(W) des(Y) 
 (   1.00000) h(W,x) kdelta(I,J) kdelta(X,Z) cre(x) des(Y) 
 (  -1.00000) v(W,i,i,x) kdelta(I,J) kdelta(X,Z) cre(x) des(Y) 
 (   1.00000) e(J) kdelta(I,J) cre(W) cre(X) des(Y) des(Z) 
 (  -1.00000) h(W,x) kdelta(I,J) cre(X) cre(x) des(Y) des(Z) 
 (  -1.00000) h(Z,x) kdelta(I,J) cre(W) cre(X) des(Y) des(x) 
 (   0.50000) kdelta(I,J) v(W,X,x,y) cre(x) cre(y) des(Y) des(Z) 
 (   1.00000) kdelta(I,J) v(W,i,i,x) cre(X) cre(x) des(Y) des(Z) 
 (   1.00000) kdelta(I,J) v(X,x,Z,y) cre(W) cre(y) des(Y) des(x) 
 (   1.00000) kdelta(I,J) v(i,x,Z,i) cre(W) cre(X) des(Y) des(x) 
 (  -0.50000) v(W,x,y,z) kdelta(I,J) kdelta(X,Z) cre(y) cre(z) des(Y) des(x) 
 (  -0.50000) kdelta(I,J) v(W,x,y,z) cre(X) cre(y) cre(z) des(Y) des(Z) des(x) 
 (  -0.50000) kdelta(I,J) v(x,y,Z,z) cre(W) cre(X) cre(z) des(Y) des(x) des(y) 

term1, term2 =  (   1.00000) cre(X) des(Y) des(I)   (   1.00000) cre(J) cre(W) des(Z) 
################ Construct Einsum ################
M[sxyi:fxyi, sxyi:fxyi] =- np.einsum('XZ, IJ, WY->XYIZWJ', h_aa_so, np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= np.einsum('IJ, XiZi, WY->XYIZWJ', np.identity(ncore_so), v_acac_so, rdm_ca_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('J, IJ, XZ, WY->XYIZWJ', e_core_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('Wx, IJ, XZ, xY->XYIZWJ', h_aa_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= np.einsum('Wiix, IJ, XZ, xY->XYIZWJ', v_acca_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ca_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('J, IJ, WXYZ->XYIZWJ', e_core_so, np.identity(ncore_so), rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= np.einsum('Wx, IJ, XxYZ->XYIZWJ', h_aa_so, np.identity(ncore_so), rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= np.einsum('Zx, IJ, WXYx->XYIZWJ', h_aa_so, np.identity(ncore_so), rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += 0.5 * np.einsum('IJ, WXxy, xyYZ->XYIZWJ', np.identity(ncore_so), v_aaaa_so, rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('IJ, Wiix, XxYZ->XYIZWJ', np.identity(ncore_so), v_acca_so, rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('IJ, XxZy, WyYx->XYIZWJ', np.identity(ncore_so), v_aaaa_so, rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] += np.einsum('IJ, ixZi, WXYx->XYIZWJ', np.identity(ncore_so), v_caac_so, rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= 0.5 * np.einsum('Wxyz, IJ, XZ, yzYx->XYIZWJ', v_aaaa_so, np.identity(ncore_so), np.identity(ncas_so), rdm_ccaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= 0.5 * np.einsum('IJ, Wxyz, XyzYZx->XYIZWJ', np.identity(ncore_so), v_aaaa_so, rdm_cccaaa_so, optimize = True)
M[sxyi:fxyi, sxyi:fxyi] -= 0.5 * np.einsum('IJ, xyZz, WXzYxy->XYIZWJ', np.identity(ncore_so), v_aaaa_so, rdm_cccaaa_so, optimize = True)



####### Final results:#######
 (  -1.00000) e(B) kdelta(A,B) kdelta(I,K) kdelta(J,L) 
 (   1.00000) e(B) kdelta(A,B) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(K) kdelta(A,B) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(K) kdelta(A,B) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(L) kdelta(A,B) kdelta(I,K) kdelta(J,L) 
 (  -1.00000) e(L) kdelta(A,B) kdelta(I,L) kdelta(J,K) 

term1, term2 =  (   1.00000) cre(A) des(J) des(I)   (   1.00000) cre(K) cre(L) des(B) 
################ Construct Einsum ################
M[saji:faji, saji:faji] =- np.einsum('B, AB, IK, JL->AJIBLK', e_extern_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[saji:faji, saji:faji] += np.einsum('B, AB, IL, JK->AJIBLK', e_extern_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[saji:faji, saji:faji] += np.einsum('K, AB, IK, JL->AJIBLK', e_core_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[saji:faji, saji:faji] -= np.einsum('K, AB, IL, JK->AJIBLK', e_core_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[saji:faji, saji:faji] += np.einsum('L, AB, IK, JL->AJIBLK', e_core_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[saji:faji, saji:faji] -= np.einsum('L, AB, IL, JK->AJIBLK', e_core_so, np.identity(nextern_so), np.identity(ncore_so), np.identity(ncore_so), optimize = True)





####### Final results:#######
 (  -1.00000) e(B) kdelta(A,B) kdelta(I,J) cre(Y) des(X) 
 (   1.00000) e(J) kdelta(A,B) kdelta(I,J) cre(Y) des(X) 
 (   1.00000) h(Y,x) kdelta(A,B) kdelta(I,J) cre(x) des(X) 
 (  -1.00000) v(Y,i,i,x) kdelta(A,B) kdelta(I,J) cre(x) des(X) 
 (  -0.50000) v(Y,x,y,z) kdelta(A,B) kdelta(I,J) cre(y) cre(z) des(X) des(x) 

term1, term2 =  (   1.00000) cre(A) des(X) des(I)   (   1.00000) cre(J) cre(Y) des(B) 
################ Construct Einsum ################
M[saxi:faxi, saxi:faxi] =- np.einsum('B, AB, IJ, YX->AXIBYJ', e_extern_so, np.identity(nextern_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[saxi:faxi, saxi:faxi] += np.einsum('J, AB, IJ, YX->AXIBYJ', e_core_so, np.identity(nextern_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[saxi:faxi, saxi:faxi] += np.einsum('Yx, AB, IJ, xX->AXIBYJ', h_aa_so, np.identity(nextern_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[saxi:faxi, saxi:faxi] -= np.einsum('Yiix, AB, IJ, xX->AXIBYJ', v_acca_so, np.identity(nextern_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[saxi:faxi, saxi:faxi] -= 0.5 * np.einsum('Yxyz, AB, IJ, yzXx->AXIBYJ', v_aaaa_so, np.identity(nextern_so), np.identity(ncore_so), rdm_ccaa_so, optimize = True)


####### Final results:#######
 (  -1.00000) e(B) kdelta(A,B) cre(W) cre(Z) des(X) des(Y) 
 (  -1.00000) h(W,x) kdelta(A,B) cre(Z) cre(x) des(X) des(Y) 
 (   1.00000) h(Z,x) kdelta(A,B) cre(W) cre(x) des(X) des(Y) 
 (   0.50000) kdelta(A,B) v(W,Z,x,y) cre(x) cre(y) des(X) des(Y) 
 (   1.00000) kdelta(A,B) v(W,i,i,x) cre(Z) cre(x) des(X) des(Y) 
 (  -1.00000) kdelta(A,B) v(Z,i,i,x) cre(W) cre(x) des(X) des(Y) 
 (  -0.50000) kdelta(A,B) v(W,x,y,z) cre(Z) cre(y) cre(z) des(X) des(Y) des(x) 
 (   0.50000) kdelta(A,B) v(Z,x,y,z) cre(W) cre(y) cre(z) des(X) des(Y) des(x) 

term1, term2 =  (   1.00000) cre(A) des(X) des(Y)   (   1.00000) cre(W) cre(Z) des(B) 
################ Construct Einsum ################
M[saxy:faxy, saxy:faxy] =- np.einsum('B, AB, WZXY->AXYBZW', e_extern_so, np.identity(nextern_so), rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] -= np.einsum('Wx, AB, ZxXY->AXYBZW', h_aa_so, np.identity(nextern_so), rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] += np.einsum('Zx, AB, WxXY->AXYBZW', h_aa_so, np.identity(nextern_so), rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] += 0.5 * np.einsum('AB, WZxy, xyXY->AXYBZW', np.identity(nextern_so), v_aaaa_so, rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] += np.einsum('AB, Wiix, ZxXY->AXYBZW', np.identity(nextern_so), v_acca_so, rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] -= np.einsum('AB, Ziix, WxXY->AXYBZW', np.identity(nextern_so), v_acca_so, rdm_ccaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] -= 0.5 * np.einsum('AB, Wxyz, ZyzXYx->AXYBZW', np.identity(nextern_so), v_aaaa_so, rdm_cccaaa_so, optimize = True)
M[saxy:faxy, saxy:faxy] += 0.5 * np.einsum('AB, Zxyz, WyzXYx->AXYBZW', np.identity(nextern_so), v_aaaa_so, rdm_cccaaa_so, optimize = True)



####### Final results:#######
 (  -1.00000) h(X,Y) kdelta(I,K) kdelta(J,L) 
 (   1.00000) h(X,Y) kdelta(I,L) kdelta(J,K) 
 (  -1.00000) v(X,i,Y,i) kdelta(I,K) kdelta(J,L) 
 (   1.00000) v(X,i,Y,i) kdelta(I,L) kdelta(J,K) 
 (   1.00000) e(K) kdelta(I,K) kdelta(J,L) kdelta(X,Y) 
 (  -1.00000) e(K) kdelta(I,L) kdelta(J,K) kdelta(X,Y) 
 (   1.00000) e(L) kdelta(I,K) kdelta(J,L) kdelta(X,Y) 
 (  -1.00000) e(L) kdelta(I,L) kdelta(J,K) kdelta(X,Y) 
 (  -1.00000) e(K) kdelta(I,K) kdelta(J,L) cre(X) des(Y) 
 (   1.00000) e(K) kdelta(I,L) kdelta(J,K) cre(X) des(Y) 
 (  -1.00000) e(L) kdelta(I,K) kdelta(J,L) cre(X) des(Y) 
 (   1.00000) e(L) kdelta(I,L) kdelta(J,K) cre(X) des(Y) 
 (   1.00000) h(Y,x) kdelta(I,K) kdelta(J,L) cre(X) des(x) 
 (  -1.00000) h(Y,x) kdelta(I,L) kdelta(J,K) cre(X) des(x) 
 (  -1.00000) v(X,x,Y,y) kdelta(I,K) kdelta(J,L) cre(y) des(x) 
 (   1.00000) v(X,x,Y,y) kdelta(I,L) kdelta(J,K) cre(y) des(x) 
 (  -1.00000) v(i,x,Y,i) kdelta(I,K) kdelta(J,L) cre(X) des(x) 
 (   1.00000) v(i,x,Y,i) kdelta(I,L) kdelta(J,K) cre(X) des(x) 
 (  -0.50000) v(x,y,Y,z) kdelta(I,K) kdelta(J,L) cre(X) cre(z) des(x) des(y) 
 (   0.50000) v(x,y,Y,z) kdelta(I,L) kdelta(J,K) cre(X) cre(z) des(x) des(y) 

term1, term2 =  (   1.00000) cre(X) des(J) des(I)   (   1.00000) cre(K) cre(L) des(Y) 
################ Construct Einsum ################
M[sxji:fxji, sxji:fxji] =- np.einsum('XY, IK, JL->XJIYLK', h_aa_so, np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('XY, IL, JK->XJIYLK', h_aa_so, np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('XiYi, IK, JL->XJIYLK', v_acac_so, np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('XiYi, IL, JK->XJIYLK', v_acac_so, np.identity(ncore_so), np.identity(ncore_so), optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('K, IK, JL, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), np.identity(ncas_so), optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('K, IL, JK, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), np.identity(ncas_so), optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('L, IK, JL, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), np.identity(ncas_so), optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('L, IL, JK, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), np.identity(ncas_so), optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('K, IK, JL, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('K, IL, JK, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('L, IK, JL, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('L, IL, JK, XY->XJIYLK', e_core_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('Yx, IK, JL, Xx->XJIYLK', h_aa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('Yx, IL, JK, Xx->XJIYLK', h_aa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('XxYy, IK, JL, yx->XJIYLK', v_aaaa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('XxYy, IL, JK, yx->XJIYLK', v_aaaa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] -= np.einsum('ixYi, IK, JL, Xx->XJIYLK', v_caac_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] += np.einsum('ixYi, IL, JK, Xx->XJIYLK', v_caac_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ca_so, optimize = True)
M[sxji:fxji, sxji:fxji] -= 0.5 * np.einsum('xyYz, IK, JL, Xzxy->XJIYLK', v_aaaa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ccaa_so, optimize = True)
M[sxji:fxji, sxji:fxji] += 0.5 * np.einsum('xyYz, IL, JK, Xzxy->XJIYLK', v_aaaa_so, np.identity(ncore_so), np.identity(ncore_so), rdm_ccaa_so, optimize = True)






